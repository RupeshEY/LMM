package rules.Postsetup.TransactionSetPostsetup_dir

uses gw.api.locale.DisplayKey

@gw.rules.RuleName("TPS01000 - Check Aggregate Limits")
internal class TPS01000CheckAggregateLimits {
  static function doCondition(transactionSet : entity.TransactionSet) : boolean {
    
/*start00rule*/
return transactionSet.isWithinPercentOfLimit(20)
/*end00rule*/

  }

  static function doAction(transactionSet : entity.TransactionSet, actions : gw.rules.Action) {

/*start00rule*/
var activities = transactionSet.Claim.Activities
var warningExists = false

/* See if activity already exists */
for (activity in activities) {
  if (activity.ActivityPattern.Code == "general_reminder"
      and activity.Subject == DisplayKey.get("Rules.PostSetup.Transaction.ApproachingAggLimits")
      and activity.Status == TC_OPEN) {
    warningExists = true
    break
  }
}
/* If activity does not exist, create it with overrides for subject and description */
if (!warningExists) {
  transactionSet.Claim.createActivity(
     null, ActivityPattern.finder.getActivityPatternByCode("general_reminder"),
     DisplayKey.get("Rules.PostSetup.Transaction.ApproachingAggregateLimits"),
     DisplayKey.get("Rules.PostSetup.Transaction.PolicyWithinAggregateLimits"),
     null, null, gw.api.util.DateUtil.addDays(gw.api.util.DateUtil.currentDate(), 5), null)
}
/*end00rule*/

  }
}
