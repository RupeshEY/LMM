<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <!-- This file automatically generated from lv_activity.xml -->
  <ListViewPanel
    id="TeamGroupActivitiesLV">
    <ExposeIterator
      flags="CanAssignActivity,ActivityTeamView"
      valueType="entity.ActivityTeamView"
      widget="TeamGroupActivitiesLV"/>
    <Require
      name="ActivityTeamViewList"
      type="gw.api.database.IQueryBeanResult&lt;ActivityTeamView&gt;"/>
    <Require
      name="FilterSet"
      type="gw.api.team.TeamGroupActivityFilterSet"/>
    <RowIterator
      checkBoxVisible="true"
      editable="false"
      elementName="ActivityTeamView"
      hasCheckBoxes="true"
      value="ActivityTeamViewList"
      valueType="gw.api.database.IQueryBeanResult&lt;entity.ActivityTeamView&gt;">
      <ToolbarFlag
        condition="ActivityTeamView.canAssign() &amp;&amp; !gw.api.activity.ActivityUtil.isWorksheetOpen(ActivityTeamView.ID)"
        name="CanAssignActivity"/>
      <ToolbarFlag
        name="ActivityTeamView"/>
      <ToolbarFilter
        name="TeamGroupActivitiesFilter">
        <ToolbarFilterOption
          filter="FilterSet.OpenFilter"
          label="DisplayKey.get(&quot;Java.ToolBar.Activities.AllOpen&quot;)"/>
        <ToolbarFilterOption
          filter="FilterSet.OpenDueTodayFilter"
          label="DisplayKey.get(&quot;Java.ToolBar.Activities.CurrentOpenTeam&quot;)"/>
        <ToolbarFilterOption
          filter="FilterSet.getOpenDueInNDaysFilter(7)"
          label="DisplayKey.get(&quot;Java.ToolBar.Activities.DueNDays&quot;, 7)"/>
        <ToolbarFilterOption
          filter="FilterSet.OpenOverdueFilter"
          label="DisplayKey.get(&quot;Java.ToolBar.Activities.Overdue&quot;)"
          selectOnEnter="true"/>
        <ToolbarFilterOption
          filter="FilterSet.OpenEscalatedFilter"
          label="DisplayKey.get(&quot;Java.ToolBar.Activities.Escalated&quot;)"
          visible="!FilterSet.QueueOrPending"/>
        <ToolbarFilterOption
          filter="FilterSet.getCompletedLastNDaysFilter(30)"
          label="DisplayKey.get(&quot;Java.ToolBar.Activities.ClosedLastNDays&quot;, 30)"
          visible="!FilterSet.QueueOrPending"/>
        <ToolbarFilterOption
          filter="FilterSet.getSkippedLastNDaysFilter(30)"
          label="DisplayKey.get(&quot;Java.ToolBar.Activities.SkippedLastNDays&quot;, 30)"
          visible="!FilterSet.QueueOrPending"/>
        <ToolbarFilterOption
          filter="FilterSet.NotReviewExternalOpenFilter"
          label="DisplayKey.get(&quot;Java.ToolBar.Activities.AllOpenExternal&quot;)"
          visible="!FilterSet.QueueOrPending"/>
      </ToolbarFilter>
      <Row>
        <BooleanRadioCell
          enableSort="false"
          icon="&quot;escalated.png&quot;"
          iconLabel="DisplayKey.get(&quot;LV.Activity.Escalated.Tip&quot;)"
          id="Escalated"
          printWidth="0.02"
          tooltip="DisplayKey.get(&quot;LV.Activity.Escalated.Tip&quot;)"
          value="ActivityTeamView.Escalated"/>
        <DateCell
          fontColor="ActivityTeamView.Overdue ? &quot;Red&quot; : &quot;&quot;"
          id="DueDate"
          label="DisplayKey.get(&quot;LV.Activity.TeamGroupActivities.Activities.DueDate&quot;)"
          printWidth="0.1"
          sortOrder="2"
          value="ActivityTeamView.TargetDate"/>
        <TypeKeyCell
          id="Priority"
          label="DisplayKey.get(&quot;LV.Activity.TeamGroupActivities.Activities.Priority&quot;)"
          printWidth="0.075"
          sortOrder="1"
          value="ActivityTeamView.Priority"
          valueType="typekey.Priority"/>
        <TextCell
          action="ClaimWorkplan.go(ActivityTeamView.Claim); ActivityDetailForward.goInWorkspace(ActivityTeamView.Claim, ActivityTeamView.Activity)"
          id="Subject"
          label="DisplayKey.get(&quot;LV.Activity.TeamGroupActivities.Activities.Subject&quot;)"
          printWidth="0.23"
          value="ActivityTeamView.Subject"/>
        <TextCell
          action="pcf.Claim.go(ActivityTeamView.Claim)"
          id="CaseID"
          label="DisplayKey.get(&quot;LV.Activity.TeamGroupActivities.Activities.CaseID&quot;)"
          printWidth="0.15"
          sortOrder="3"
          value="ActivityTeamView.ClaimNumber"/>
        <TextCell
          action="ClaimContactDetailPopup.push(ActivityTeamView.ClaimInsured, ActivityTeamView.Claim)"
          id="Insured"
          label="DisplayKey.get(&quot;LV.Activity.TeamGroupActivities.Activities.Insured&quot;)"
          printWidth="0.1"
          value="ActivityTeamView.ClaimInsuredName"/>
        <TextCell
          id="AssignedUser"
          label="DisplayKey.get(&quot;LV.Activity.TeamGroupActivities.Activities.AssignedUser&quot;)"
          printWidth="0.1"
          sortBy="ActivityTeamView.AssignedUserName"
          value="ActivityTeamView.ActivityAssignedUser"/>
        <BooleanRadioCell
          id="ExternallyOwned"
          label="DisplayKey.get(&quot;LV.Activity.TeamGroupActivities.Activities.ExternallyOwned&quot;)"
          printWidth="0.075"
          value="ActivityTeamView.ExternallyOwned"/>
        <TypeKeyCell
          id="LOB"
          label="DisplayKey.get(&quot;LV.Activity.TeamGroupActivities.Activities.LOB&quot;)"
          printWidth="0.075"
          value="ActivityTeamView.LOBCode"
          valueType="typekey.LOBCode"/>
        <TypeKeyCell
          id="State"
          label="DisplayKey.get(&quot;LV.Activity.TeamGroupActivities.Activities.State&quot;)"
          printWidth="0.075"
          value="ActivityTeamView.JurisdictionState"
          valueType="typekey.Jurisdiction"/>
      </Row>
    </RowIterator>
  </ListViewPanel>
</PCF>