<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <!-- This file automatically generated from nvv_policy.xml -->
  <PanelSet
    id="PolicyGeneralPanelSet"
    mode="Wc">
    <Require
      name="Policy"
      type="Policy"/>
    <Require
      name="Claim"
      type="Claim"/>
    <Variable
      initialValue="CustomerServiceTier.findAvailableCustomerTiers()"
      name="availableCustomerServiceTiers"
      recalculateOnRefresh="true"
      type="java.util.List&lt;typekey.CustomerServiceTier&gt;"/>
    <DetailViewPanel
      id="PolicyGeneralDV">
      <InputColumn>
        <Label
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Basics&quot;)"/>
        <TextInput
          id="PolicyNumber"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.PolicyNumber&quot;)"
          required="true"
          value="Policy.PolicyNumber"/>
        <TypeKeyInput
          id="Type"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Type&quot;)"
          required="true"
          value="Policy.PolicyType"
          valueType="typekey.PolicyType"/>
        <DateInput
          editable="!Policy.Verified"
          id="EffectiveDate"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.EffectiveDate&quot;)"
          required="true"
          value="Policy.EffectiveDate"/>
        <DateInput
          editable="!Policy.Verified"
          id="ExpirationDate"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.ExpirationDate&quot;)"
          required="true"
          value="Policy.ExpirationDate"/>
        <DateInput
          editable="!Policy.Verified"
          id="CancellationDate"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.CancellationDate&quot;)"
          value="Policy.CancellationDate"/>
        <DateInput
          editable="!Policy.Verified"
          id="OrigEffectiveDate"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.OrigEffectiveDate&quot;)"
          value="Policy.OrigEffectiveDate"/>
        <TypeKeyInput
          editable="!Policy.Verified"
          id="Status"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Status&quot;)"
          value="Policy.Status"
          valueType="typekey.PolicyStatus"/>
        <TypeKeyInput
          editable="!Policy.Verified and Policy.CurrencyEditable"
          id="Currency"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Currency&quot;)"
          value="Policy.Currency"
          valueType="typekey.Currency"
          visible="gw.api.util.CurrencyUtil.isMultiCurrencyMode()">
          <PostOnChange/>
        </TypeKeyInput>
        <InputDivider/>
        <Label
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Insured&quot;)"/>
        <ClaimContactInput
          claim="Policy.Claim"
          editable="!Policy.Verified"
          id="Insured_Name"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Insured.Name&quot;)"
          required="true"
          value="Policy.insured"
          valueRange="Policy.Claim.RelatedContacts"/>
        <TextInput
          id="Insured_Address"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Insured.Address&quot;)"
          value="Policy.insured.PrimaryAddressDisplayValue">
          <Reflect
            triggerIds="Insured_Name"
            value="VALUE.PrimaryAddressDisplayValue"/>
        </TextInput>
        <TextInput
          id="AccountName"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Account.Name&quot;)"
          required="false"
          value="Policy.PolicyAccount.AccountHolder.DisplayName"/>
        <TextInput
          editable="!Policy.Verified"
          id="AccountNumber"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Account.Number&quot;)"
          required="false"
          value="Policy.AccountNumber">
          <PostOnChange/>
        </TextInput>
        <RangeInput
          editable="true"
          id="CustomerServiceTierRange"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.CustomerServiceTier&quot;)"
          value="Policy.CustomerServiceTier"
          valueRange="availableCustomerServiceTiers"
          valueType="typekey.CustomerServiceTier"/>
        <!-- Will only display for Commercial policies -->
        <ClaimContactInput
          claim="Policy.Claim"
          editable="!Policy.Verified"
          id="PolicyHolder"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.PolicyHolder&quot;)"
          value="Policy.policyholder"
          valueRange="Policy.Claim.RelatedContacts"
          visible="Policy.CommercialPolicy"/>
        <ClaimContactInput
          claim="Policy.Claim"
          editable="!Policy.Verified"
          id="DBA"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.DBA&quot;)"
          value="Policy.doingbusinessas"
          valueRange="Policy.Claim.RelatedCompanyArray"
          valueType="entity.Company"
          visible="Policy.CommercialPolicy"/>
      </InputColumn>
      <InputColumn>
        <ListViewInput
          boldLabel="true"
          def="EditableAdditionalInsuredLV(Policy.getClaimContactRolesByRole(TC_COVEREDPARTY), Policy.Claim, Policy, TC_COVEREDPARTY)"
          editable="!Policy.Verified"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.AdditionalInsured&quot;)"
          validationExpression="Policy.checkCoveredPartyConstraints()">
          <Toolbar>
            <IteratorButtons
              iterator="EditableAdditionalInsuredLV.EditableAdditionalInsuredLV"/>
          </Toolbar>
        </ListViewInput>
        <InputDivider/>
        <ListViewInput
          boldLabel="true"
          def="EditableExcludedPartiesLV(Policy.getClaimContactRolesByRole(TC_EXCLUDEDPARTY), Policy, TC_EXCLUDEDPARTY)"
          editable="!Policy.Verified"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.ExcludedParties&quot;)"
          validationExpression="Policy.checkExcludedPartyConstraints()">
          <Toolbar>
            <IteratorButtons
              iterator="EditableExcludedPartiesLV.EditableExcludedPartiesLV"/>
          </Toolbar>
        </ListViewInput>
        <InputDivider/>
        <Label
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Agent&quot;)"/>
        <ClaimContactInput
          claim="Policy.Claim"
          editable="!Policy.Verified"
          id="Agent_Name"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Agent.Name&quot;)"
          value="Policy.agent"
          valueRange="Policy.Claim.RelatedContacts"/>
        <TextInput
          editable="!Policy.Verified"
          id="ProducerCode"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.ProducerCode&quot;)"
          value="Policy.ProducerCode"/>
        <InputDivider/>
        <Label
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting&quot;)"/>
        <ClaimContactInput
          claim="Policy.Claim"
          editable="!Policy.Verified"
          id="Underwriter_Name"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Underwriter.Name&quot;)"
          newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
          required="false"
          value="Policy.underwriter"
          valueRange="Policy.Claim.RelatedPersonArray"
          valueType="entity.Person"/>
        <TypeKeyInput
          editable="!Policy.Verified"
          id="Underwriting_Company"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.Company&quot;)"
          value="Policy.UnderwritingCo"
          valueType="typekey.UnderwritingCompanyType"/>
        <TypeKeyInput
          editable="!Policy.Verified"
          id="Underwriting_Group"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Underwriting.Group&quot;)"
          value="Policy.UnderwritingGroup"
          valueType="typekey.UnderwritingGroupType"/>
        <InputDivider/>
        <Label
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Other&quot;)"/>
        <BooleanRadioInput
          id="Other_VerifiedPolicy"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Other.VerifiedPolicy&quot;)"
          value="Policy.Verified"/>
        <BooleanRadioInput
          editable="!Policy.Verified"
          id="Other_ForeignCoverage"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Other.ForeignCoverage&quot;)"
          value="Policy.ForeignCoverage"/>
        <TextInput
          editable="!Policy.Verified"
          id="Other_OtherFinancialInterests"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Other.OtherFinancialInterests&quot;)"
          value="Policy.FinancialInterests"/>
        <BooleanRadioInput
          editable="!Policy.Verified"
          id="Other_AssignedRisk"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Other.AssignedRisk&quot;)"
          value="Policy.AssignedRisk"/>
        <TextInput
          editable="!Policy.Verified"
          id="Other_Notes"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Other.Notes&quot;)"
          value="Policy.Notes"/>
        <InputDivider/>
        <Label
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneralWorkersComp.Policy.WorkersComp&quot;)"/>
        <TextInput
          editable="!Policy.Verified"
          id="WorkersComp_InsuredSicCode"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneralWorkersComp.Policy.WorkersComp.InsuredSicCode&quot;)"
          value="Policy.InsuredSICCode"/>
        <TypeKeyInput
          editable="!Policy.Verified"
          id="WorkersComp_PolicyRatingPlan"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneralWorkersComp.Policy.WorkersComp.PolicyRatingPlan&quot;)"
          value="Policy.PolicyRatingPlan"
          valueType="typekey.PolicyRatingPlan"/>
        <TextInput
          editable="!Policy.Verified"
          id="WorkersComp_States"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneralWorkersComp.Policy.WorkersComp.States&quot;)"
          value="Policy.WCStates"/>
        <TextInput
          editable="!Policy.Verified"
          id="WorkersComp_OtherStates"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneralWorkersComp.Policy.WorkersComp.OtherStates&quot;)"
          value="Policy.WCOtherStates"/>
        <BooleanRadioInput
          editable="!Policy.Verified"
          id="WorkersComp_ReturnToWorkPrgm"
          label="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneralWorkersComp.Policy.WorkersComp.ReturnToWorkPrgm&quot;)"
          value="Policy.ReturnToWorkPrgm"/>
      </InputColumn>
    </DetailViewPanel>
    <ListDetailPanel
      id="PolicyCoverageListDetail"
      selectionName="Coverage"
      selectionType="Coverage">
      <PanelRef
        def="EditableWorkersCompPolicyCoveragesLV(Policy)"
        editable="!Policy.Verified">
        <TitleBar
          subtitle="DisplayKey.get(&quot;NVV.Policy.PolicyVehicleDetail.Vehicle.Coverages.Subtitle&quot;)"
          title="DisplayKey.get(&quot;NVV.Policy.SubView.PolicyGeneral.Policy.Coverages&quot;)"/>
        <Toolbar
          visible="!Policy.Verified">
          <IteratorButtons
            addVisible="!Policy.Verified"
            iterator="EditableWorkersCompPolicyCoveragesLV.EditableWorkersCompPolicyCoveragesLV"
            removeVisible="!Policy.Verified"/>
        </Toolbar>
      </PanelRef>
      <PanelRef
        def="ClaimPolicyCovTermsCV(Coverage)"
        editable="true"/>
    </ListDetailPanel>
  </PanelSet>
</PCF>
