<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <DetailViewPanel
    id="CheckDV">
    <Require
      name="Check"
      type="Check"/>
    <InputColumn>
      <Label
        label="DisplayKey.get(&quot;NVV.Financials.Check&quot;)"/>
      <TextInput
        id="PayTo"
        label="DisplayKey.get(&quot;NVV.Financials.Check.PayTo&quot;)"
        value="Check.PayTo"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT"/>
      <TextInput
        id="MailingAddress"
        label="DisplayKey.get(&quot;NVV.Financials.Check.MailingAddress&quot;)"
        value="Check.FormatAddressSummary(true)"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT"/>
      <CurrencyInput
        formatType="currency"
        id="Amount_Net"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Amount.Net&quot;)"
        value="Check.NetAmountPair"
        valueType="gw.api.financials.CurrencyAmountPair"/>
      <TextInput
        id="Memo"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Memo&quot;)"
        value="Check.Memo"/>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;NVV.Financials.Check.PaymentDetails&quot;)"/>
      <TextInput
        id="Portion_Percentage"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Portion.Percentage&quot;)"
        value="Check.Portion.Percentage"
        valueType="java.math.BigDecimal"
        visible="Check.Portion.Percentage != null"/>
      <TextInput
        formatType="currency"
        id="Portion_FixedAmount"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Portion.FixedAmount&quot;)"
        value="Check.Portion.getMultiCurrencyDisplayName(Check)"
        visible="Check.Portion.FixedTransactionAmount != null"/>
      <CurrencyInput
        formatType="currency"
        id="Amount_Gross"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Amount.Gross&quot;)"
        value="Check.GrossAmountPair"
        valueType="gw.api.financials.CurrencyAmountPair"/>
      <InputSetRef
        def="CheckExchangeRateInputSet(Check,null)"
        editable="false"/>
      <TextInput
        id="Transfer_Check"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Transfer.Check&quot;)"
        value="Check.getTransferredToCheck().Claim.ClaimNumber"
        visible="Check.isTransferred()"/>
      <CurrencyInput
        formatType="currency"
        id="Transfer_Amount"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Transfer.Amount&quot;)"
        value="Check.getTransferredAmount()"
        visible="Check.isTransferred()"/>
      <TypeKeyInput
        id="TaxReporting"
        label="DisplayKey.get(&quot;NVV.Financials.Check.TaxReporting&quot;)"
        value="Check.Reportability"
        valueType="typekey.ReportabilityType"/>
      <TextInput
        id="Amount_Reportable"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Amount.Reportable&quot;)"
        value="(Check.Reportability == ReportabilityType.TC_NOTREPORTABLE) ? DisplayKey.get(&quot;Web.NA&quot;) : gw.api.util.CurrencyUtil.renderAsCurrency(Check.ReportableAmount, Check.Currency)"/>
      <ListViewInput
        def="PaymentDeductionsLV(Check)"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Deductions&quot;)">
        <Toolbar/>
      </ListViewInput>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;NVV.Financials.Check.Details&quot;)"/>
      <TextInput
        id="CheckNumber"
        label="DisplayKey.get(&quot;NVV.Financials.Check.CheckNumber&quot;)"
        value="Check.CheckNumber"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT"/>
      <TypeKeyInput
        id="BankAccount"
        label="DisplayKey.get(&quot;NVV.Financials.Check.BankAccount&quot;)"
        value="Check.BankAccount"
        valueType="typekey.BankAccount"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT"/>
      <InputSet
        id="EFTDataInputSet"
        visible="Check.PaymentMethod == PaymentMethod.TC_EFT">
        <RangeInput
          editable="true"
          id="EFTRecords"
          label="DisplayKey.get(&quot;Web.Financials.Check.BankData.SelectEFT&quot;)"
          value="Check.EFTData"
          valueRange="Check.FirstPayee.Payee.EFTRecords"
          valueType="entity.EFTData"
          visible="CurrentLocation.InEditMode"/>
        <TextAreaInput
          editable="true"
          id="PayTo"
          label="DisplayKey.get(&quot;Web.Financials.Check.BankData.BankAcctHolderName&quot;)"
          numRows="1"
          value="Check.PayTo">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.AccountName"/>
        </TextAreaInput>
        <TextInput
          editable="true"
          id="BankName"
          label="DisplayKey.get(&quot;Web.Financials.Check.BankData.BankName&quot;)"
          value="Check.BankName">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.BankName"/>
        </TextInput>
        <RangeRadioInput
          editable="true"
          id="BankAccountType"
          label="DisplayKey.get(&quot;Web.Financials.Check.BankData.BankAccountType&quot;)"
          required="true"
          value="Check.BankAccountType"
          valueRange="BankAccountType.getTypeKeys( false )"
          valueType="typekey.BankAccountType">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.BankAccountType"/>
        </RangeRadioInput>
        <PrivacyInput
          editable="true"
          encryptionExpression="Check.maskBankAccountNumber(VALUE)"
          id="BankAccountNumber"
          label="DisplayKey.get(&quot;Web.Financials.Check.BankData.BankAccountNumber&quot;)"
          required="true"
          value="Check.BankAccountNumber">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.BankAccountNumber"/>
        </PrivacyInput>
        <TextInput
          editable="true"
          id="BankRoutingNumber"
          label="DisplayKey.get(&quot;Web.Financials.Check.BankData.BankRoutingNumber&quot;)"
          required="true"
          value="Check.BankRoutingNumber">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.BankRoutingNumber"/>
        </TextInput>
      </InputSet>
      <TextInput
        id="InvoiceNumber"
        label="DisplayKey.get(&quot;NVV.Financials.Check.InvoiceNumber&quot;)"
        value="Check.InvoiceNumber"/>
      <TextInput
        action="EditBulkInvoiceDetail.go(Check.BulkInvoiceItem.BulkInvoice)"
        available="Check.isBulked()"
        id="BulkInvoice"
        label="DisplayKey.get(&quot;Java.Financials.BulkInvoice&quot;)"
        value="Check.BulkInvoiceNumber"/>
      <ClaimContactInput
        claim="Check.Claim"
        id="Claimant"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Claimant&quot;)"
        value="Check.Claimant"
        valueRange="Check.Claim.RelatedContacts"/>
      <DateInput
        id="DateOfService"
        label="DisplayKey.get(&quot;NVV.Financials.Check.DateOfService&quot;)"
        value="Check.DateOfService"
        visible="!Check.hasExposureWithServicePeriod()"/>
      <TextInput
        id="ServicePeriod"
        label="DisplayKey.get(&quot;NVV.Financials.Check.ServicePeriod&quot;)"
        value="Check.ServicePeriodString"
        visible="Check.hasExposureWithServicePeriod()"/>
      <TextInput
        id="Comments"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Comments&quot;)"
        value="Check.Comments"/>
      <ListViewInput
        def="CheckPayeesLV(Check)"
        editable="true"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Payees&quot;)">
        <Toolbar/>
      </ListViewInput>
    </InputColumn>
    <InputColumn>
      <Label
        label="DisplayKey.get(&quot;NVV.Financials.Check.Instructions&quot;)"/>
      <TextInput
        id="MailToContact"
        label="DisplayKey.get(&quot;NVV.Financials.Check.MailToContact&quot;)"
        value="Check.MailTo"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT"/>
      <TypeKeyInput
        id="PaymentMethod"
        label="DisplayKey.get(&quot;NVV.Financials.Check.PaymentMethod&quot;)"
        value="Check.PaymentMethod"
        valueType="typekey.PaymentMethod"/>
      <TypeKeyInput
        id="CheckBatching"
        label="DisplayKey.get(&quot;NVV.Financials.Check.CheckBatching&quot;)"
        value="Check.CheckBatching"
        valueType="typekey.CheckBatching"/>
      <TypeKeyInput
        id="DeliveryMethod"
        label="DisplayKey.get(&quot;NVV.Financials.Check.DeliveryMethod&quot;)"
        value="Check.DeliveryMethod"
        valueType="typekey.DeliveryMethod"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT"/>
      <TypeKeyInput
        id="CheckInstructions"
        label="DisplayKey.get(&quot;NVV.Financials.Check.CheckInstructions&quot;)"
        value="Check.CheckInstructions"
        valueType="typekey.CheckHandlingInstructions"/>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;NVV.Financials.Check.Tracking&quot;)"/>
      <TypeKeyInput
        id="Status"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Status&quot;)"
        value="Check.Status"
        valueType="typekey.TransactionStatus"/>
      <DateInput
        id="IssueDate"
        label="DisplayKey.get(&quot;NVV.Financials.Check.IssueDate&quot;)"
        value="Check.IssueDate"/>
      <DateInput
        id="ScheduledSendDate"
        label="DisplayKey.get(&quot;NVV.Financials.Check.ScheduledSendDate&quot;)"
        value="Check.ScheduledSendDate"/>
      <ClaimContactInput
        claim="Check.Claim"
        id="CreateUser"
        label="DisplayKey.get(&quot;NVV.Financials.Check.CreateUser&quot;)"
        value="Check.CreateUser.Contact"
        valueRange="Check.Claim.RelatedUserContactArray"
        valueType="entity.UserContact"/>
      <DateInput
        id="CreateTime"
        label="DisplayKey.get(&quot;NVV.Financials.Check.CreateTime&quot;)"
        value="Check.CreateTime"/>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;NVV.Financials.Check.CheckSet.Recurrence&quot;)"/>
      <TextInput
        id="Recurrence_Description"
        label="DisplayKey.get(&quot;NVV.Financials.Check.CheckSet.Recurrence.Description&quot;)"
        value="Check.CheckSet.Recurrence.Description != null ? Check.CheckSet.Recurrence.Description : DisplayKey.get(&quot;Web.NA&quot;)"/>
      <CurrencyInput
        id="Recurrence_Total"
        label="DisplayKey.get(&quot;NVV.Financials.Check.CheckSet.Recurrence.Total&quot;)"
        value="Check.CheckSet.Recurrence.TotalPair"
        valueType="gw.api.financials.CurrencyAmountPair"/>
      <InputDivider/>
      <ListViewInput
        boldLabel="true"
        def="ApprovalHistoryLV(Check.CheckSet.ApprovalHistory?.toTypedArray())"
        label="DisplayKey.get(&quot;NVV.Financials.Check.ApprovalHistory&quot;)"
        labelAbove="true">
        <Toolbar/>
      </ListViewInput>
    </InputColumn>
    <InputFooterSection>
      <ListViewInput
        boldLabel="true"
        def="CheckSummaryPaymentsLV((Check.Group == null ? Check.Payments : Check.Group.PrimaryCheck.Payments))"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Payments&quot;)"
        labelAbove="true">
        <Toolbar/>
      </ListViewInput>
      <ListViewInput
        boldLabel="true"
        def="CheckGroupChecksLV(Check.Group)"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Group.Checks&quot;)"
        labelAbove="true"
        visible="Check.Group != null">
        <Toolbar/>
      </ListViewInput>
      <ListViewInput
        boldLabel="true"
        def="RecurrenceChecksLV(Check.CheckSet)"
        label="DisplayKey.get(&quot;NVV.Financials.Check.CheckSet.Checks&quot;)"
        labelAbove="true"
        visible="Check.CheckSet.Recurrence != null">
        <Toolbar/>
      </ListViewInput>
      <ListViewInput
        boldLabel="true"
        def="UnmodifiableTransactionSetDocumentsLV(Check.CheckSet.LinkedDocuments)"
        label="DisplayKey.get(&quot;NVV.Financials.Check.CheckSet.Documents&quot;)"
        labelAbove="true"
        visible="perm.System.viewdocs">
        <Toolbar/>
      </ListViewInput>
      <ListViewInput
        boldLabel="true"
        label="DisplayKey.get(&quot;NVV.Financials.Check.CheckSet.Invoices&quot;)"
        labelAbove="true"
        visible="Check.ServiceRequestInvoices.HasElements">
        <Toolbar/>
        <ListViewPanel
          id="ServiceRequestInvoicesLV">
          <RowIterator
            editable="false"
            elementName="invoice"
            value="Check.ServiceRequestInvoices"
            valueType="entity.ServiceRequestInvoice[]">
            <Row>
              <TextCell
                action="ClaimServiceRequests.go(invoice.Check.Claim, invoice.ServiceRequest, invoice)"
                id="InvoiceReferenceNumber"
                label="DisplayKey.get(&quot;LV.Financials.Check.Invoices.InvoiceReferenceNumber&quot;)"
                sortOrder="3"
                value="invoice.ReferenceNumber.HasContent ? invoice.ReferenceNumber : DisplayKey.get(&quot;LV.Financials.Check.Invoices.InvoiceReferenceNumberMissing&quot;)"/>
              <TextCell
                id="ServiceRequestNumber"
                label="DisplayKey.get(&quot;LV.Financials.Check.Invoices.ServiceRequestNumber&quot;)"
                sortOrder="2"
                value="invoice.ServiceRequest.ServiceRequestNumber"/>
              <DateCell
                id="SubmittedDate"
                label="DisplayKey.get(&quot;LV.Financials.Check.Invoices.SubmittedDate&quot;)"
                sortDirection="descending"
                sortOrder="1"
                value="invoice.StatementCreationTime"/>
              <CurrencyCell
                id="Amount"
                label="DisplayKey.get(&quot;LV.Financials.Check.Invoices.Amount&quot;)"
                value="invoice.Amount"/>
              <TextCell
                id="Description"
                label="DisplayKey.get(&quot;LV.Financials.Check.Invoices.Description&quot;)"
                value="invoice.Description.elide(28)"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
    </InputFooterSection>
  </DetailViewPanel>
</PCF>