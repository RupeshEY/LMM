<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <DetailViewPanel
    id="LossDetailsDV"
    mode="Wc">
    <Require
      name="Claim"
      type="Claim"/>
    <InputColumn>
      <Label
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.OccurrenceDetails&quot;)"/>
      <TextAreaInput
        checkSpelling="true"
        editable="true"
        id="OccurrenceDescription"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.OccurrenceDescription&quot;)"
        numCols="35"
        numRows="3"
        required="false"
        value="Claim.Description"/>
      <TextInput
        editable="true"
        id="Claim_ActivityPerformed"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.ActivityPerformed&quot;)"
        value="Claim.ActivityPerformed"/>
      <TextInput
        editable="true"
        helpText="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EquipmentUsed.HelpText&quot;)"
        id="Claim_EquipmentUsed"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EquipmentUsed&quot;)"
        value="Claim.EquipmentUsed"/>
      <InputSetRef
        def="CCAddressInputSet(Claim.AddressOwner)"/>
      <RangeInput
        editable="true"
        id="LocationCode"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.LocationCode&quot;)"
        numCols="30"
        value="Claim.LocationCode"
        valueRange="Claim.PolicyProperties"
        valueType="entity.PolicyLocation">
        <PostOnChange
          target="EmploymentData_ClassCode"/>
      </RangeInput>
      <TypeKeyInput
        editable="true"
        id="AccidentPremises"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.AccidentPremises&quot;)"
        value="Claim.ClaimWorkComp.AccidentPremises"
        valueType="typekey.AccidentPremises"/>
      <TypeKeyInput
        editable="true"
        filter="VALUE.hasCategory(JurisdictionType.TC_INSURANCE)"
        id="JurisdictionState"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.JurisdictionState&quot;)"
        value="Claim.JurisdictionState"
        valueType="typekey.Jurisdiction"/>
      <TextInput
        id="JurisdictionClaimNumber"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.JurisdictionClaimNumber&quot;)"
        required="false"
        value="Claim.ClaimWorkComp.JurisdictionClaimNumber"/>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.Claimant&quot;)"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="Claimant_Picker"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.Claimant.Picker&quot;)"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        required="true"
        value="Claim.claimant"
        valueRange="Claim.RelatedPersonArray"
        valueType="entity.Person"/>
      <BooleanRadioInput
        editable="true"
        id="Claimant_ContactProhibited"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.Claimant.ContactProhibited&quot;)"
        value="ContactProhibited"/>
      <TextInput
        id="Claimant_Phone"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.Claimant.Phone&quot;)"
        value="Claim.claimant.PrimaryPhoneValue">
        <Reflect
          triggerIds="Claimant_Picker"
          value="VALUE.PrimaryPhoneValue"/>
      </TextInput>
      <TextInput
        id="Claimant_Address"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.Claimant.Address&quot;)"
        value="Claim.claimant.PrimaryAddressDisplayValue">
        <Reflect
          triggerIds="Claimant_Picker"
          value="VALUE.PrimaryAddressDisplayValue"/>
      </TextInput>
      <DateInput
        id="Claimant_DateOfBirth"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.Claimant.DateOfBirth&quot;)"
        value="Claim.claimant.DateOfBirth">
        <Reflect
          triggerIds="Claimant_Picker"
          value="VALUE.DateOfBirth"/>
      </DateInput>
      <PrivacyInput
        encryptionExpression="Claim.claimant.maskTaxId(VALUE)"
        id="Claimant_TaxNumber"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.Claimant.TaxNumber&quot;)"
        value="Claim.claimant.TaxID">
        <Reflect
          triggerIds="Claimant_Picker"
          value="VALUE.TaxID"/>
      </PrivacyInput>
      <TextInput
        id="EmploymentData_Occupation"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.Occupation&quot;)"
        value="Claim.claimant.Occupation">
        <Reflect
          triggerIds="Claimant_Picker"
          value="VALUE.Occupation"/>
      </TextInput>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.Injury&quot;)"/>
      <TextInput
        editable="true"
        id="InjuryDescription"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.InjuryDescription&quot;)"
        value="Claim.ensureClaimInjuryIncident().Description"/>
      <TypeKeyInput
        editable="true"
        filter="VALUE.hasCategory(LossType.TC_WC)"
        id="Claim_Severity"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Severity&quot;)"
        value="Claim.ensureClaimInjuryIncident().Severity"
        valueType="typekey.SeverityType"/>
      <DateInput
        dateFormat="short"
        editable="true"
        id="Claim_ExposureBegan"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.ExposureBegan&quot;)"
        required="false"
        timeFormat="short"
        validationExpression="Claim.ExposureBegan == null || Claim.ExposureBegan &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
        value="Claim.ExposureBegan"/>
      <DateInput
        dateFormat="short"
        editable="true"
        id="Claim_ExposureEnded"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.ExposureEnded&quot;)"
        required="false"
        timeFormat="short"
        value="Claim.ExposureEnded"/>
      <BooleanRadioInput
        editable="true"
        id="InjurySeverity_DeathReport"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjurySeverity.DeathReport&quot;)"
        required="false"
        value="Claim.DeathReport"/>
      <DateInput
        editable="true"
        id="DeathDate"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.DeathDate&quot;)"
        value="Claim.DeathDate"
        visible="Claim.DeathReport == true "/>
      <TypeKeyInput
        editable="true"
        id="Claim_InjuryIllnessCause"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.InjuryIllnessCause&quot;)"
        numCols="30"
        required="true"
        value="Claim.LossCause"
        valueType="typekey.LossCause"/>
      <TypeKeyInput
        editable="true"
        id="Claim_AccidentType"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.AccidentType&quot;)"
        value="Claim.AccidentType"
        valueType="typekey.AccidentType"/>
      <TypeKeyInput
        editable="true"
        id="Claim_PrimaryInjury"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.PrimaryInjury&quot;)"
        required="true"
        value="Claim.ensureClaimInjuryIncident().GeneralInjuryType"
        valueType="typekey.InjuryType"/>
      <TypeKeyInput
        editable="true"
        id="Claim_DetailedInjury"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.DetailedInjury&quot;)"
        required="true"
        value="Claim.ensureClaimInjuryIncident().DetailedInjuryType"
        valueType="typekey.DetailedInjuryType"/>
      <ListViewInput
        boldLabel="true"
        def="EditableBodyPartDetailsLV(Claim.ensureClaimInjuryIncident(), true)"
        editable="true"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.BodyPartDetails&quot;)"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            iterator="EditableBodyPartDetailsLV.EditableBodyPartDetailsLV"
            refreshTarget="DATA_ONLY"/>
          <CheckedValuesToolbarButton
            checkedRowAction="Claim.ensureClaimInjuryIncident().FirstBodyPart = CheckedValue"
            flags="one NotFirstBP"
            hideIfReadOnly="true"
            id="MakeFirstButton"
            iterator="EditableBodyPartDetailsLV.EditableBodyPartDetailsLV"
            label="DisplayKey.get(&quot;LV.Incident.Injury.BodyPartDetails.MakeFirstButton&quot;)"
            showConfirmMessage="false"
            tooltip="DisplayKey.get(&quot;LV.Incident.Injury.BodyPartDetails.MakeFirstButton.Tooltip&quot;)"/>
        </Toolbar>
      </ListViewInput>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData&quot;)"/>
      <CurrencyInput
        editable="true"
        id="EmploymentData_WorkCompAWW"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.WorkCompAWW&quot;)"
        value="Claim.EmploymentData.WageAmount"/>
      <BooleanRadioInput
        editable="true"
        id="EmploymentData_ClassCodeByLocation"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.ClassCodeByLocation&quot;)"
        value="Claim.ClaimWorkComp.ClassCodeByLocation">
        <PostOnChange
          target="EmploymentData_ClassCode"/>
      </BooleanRadioInput>
      <RangeInput
        editable="true"
        id="EmploymentData_ClassCode"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.ClassCode&quot;)"
        value="Claim.EmploymentData.ClassCode"
        valueRange="FilteredClassCodes"
        valueType="entity.ClassCode"/>
      <TextInput
        editable="true"
        id="EmploymentData_DepartmentCode"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.DepartmentCode&quot;)"
        value="Claim.EmploymentData.DepartmentCode"/>
      <DateInput
        dateFormat="short"
        editable="true"
        id="EmploymentData_HireDate"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.HireDate&quot;)"
        timeFormat="short"
        validationExpression="Claim.EmploymentData.HireDate == null || Claim.EmploymentData.HireDate &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
        value="Claim.EmploymentData.HireDate"/>
      <TypeKeyInput
        editable="true"
        id="EmploymentData_HireState"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.HireState&quot;)"
        value="Claim.EmploymentData.HireState"
        valueType="typekey.State"/>
      <TypeKeyInput
        editable="true"
        id="EmploymentData_EmploymentStatus"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.EmploymentStatus&quot;)"
        value="Claim.EmploymentData.EmploymentStatus"
        valueType="typekey.EmploymentStatusType"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="EmploymentData_SupervisorPicker"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.SupervisorPicker&quot;)"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        value="Claim.supervisor"
        valueRange="Claim.RelatedPersonArray"
        valueType="entity.Person"/>
      <TextInput
        editable="true"
        id="EmploymentData_NumDaysWorkedPerWeek"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.NumDaysWorkedPerWeek&quot;)"
        value="Claim.EmploymentData.NumDaysWorked"
        valueType="java.math.BigDecimal"/>
      <TextInput
        editable="true"
        id="EmploymentData_NumHoursWorkedPerDay"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.NumHoursWorkedPerDay&quot;)"
        value="Claim.EmploymentData.NumHoursWorked"
        valueType="java.math.BigDecimal"/>
      <TypeKeyInput
        editable="true"
        id="EmploymentData_PayPeriod"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.PayPeriod&quot;)"
        value="Claim.EmploymentData.PayPeriod"
        valueType="typekey.PayPeriodType"/>
      <BooleanRadioInput
        editable="true"
        id="EmploymentData_PaidFullWages"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.PaidFullWages&quot;)"
        value="Claim.EmploymentData.PaidFull"/>
      <BooleanRadioInput
        editable="true"
        id="EmploymentData_WagePaymentContinued"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.WagePaymentContinued&quot;)"
        value="Claim.EmploymentData.WagePaymentCont"/>
      <BooleanRadioInput
        editable="true"
        id="ModifiedDutyAvailable"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.ModifiedDutyAvailable&quot;)"
        value="Claim.ModifiedDutyAvail"/>
      <CurrencyInput
        editable="true"
        id="EmploymentData_DiscontinuedFringeBenefits"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.DiscontinuedFringeBenefits&quot;)"
        required="false"
        value="Claim.ClaimWorkComp.DiscontinuedFringeBenefits"
        valueType="gw.api.financials.CurrencyAmount"/>
      <TypeKeyInput
        editable="true"
        id="ConcurrentEmployment"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.ConcurrentEmployment&quot;)"
        value="Claim.ConcurrentEmp"
        valueType="typekey.YesNo">
        <PostOnChange
          target="ConcurrentEmploymentLV"/>
      </TypeKeyInput>
    </InputColumn>
    <InputColumn>
      <Label
        id="CompensabilityFactors"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.CompensabilityFactors&quot;)"/>
      <InputSet
        id="CompensabilityFactorsInputSet">
        <BooleanRadioInput
          editable="true"
          id="Claim_EmploymentInjury"
          label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.EmploymentInjury&quot;)"
          value="Claim.EmploymentInjury">
          <PostOnChange
            target="CompensabilityFactorsInputSet"/>
        </BooleanRadioInput>
        <BooleanRadioInput
          editable="true"
          id="InjuredOnRegularJob"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.InjuredOnRegularJob&quot;)"
          value="Claim.InjuredRegularJob">
          <PostOnChange
            target="CompensabilityFactorsInputSet"/>
        </BooleanRadioInput>
        <TypeKeyRadioInput
          editable="true"
          id="EmployerQuestionsValidity"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmployerQuestionsValidity&quot;)"
          value="Claim.EmpQusValidity"
          valueType="typekey.YesNo">
          <PostOnChange
            target="CompensabilityFactorsInputSet"/>
        </TypeKeyRadioInput>
        <TextInput
          editable="true"
          id="EmployerValidityReason"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmployerValidityReason&quot;)"
          value="Claim.EmployerValidityReason"
          visible="Claim.EmpQusValidity == TC_YES"/>
        <BooleanRadioInput
          editable="true"
          id="SafetyEquipmentProvided"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.SafetyEquipmentProvided&quot;)"
          value="Claim.SafetyEquipProv">
          <PostOnChange
            target="CompensabilityFactorsInputSet"/>
        </BooleanRadioInput>
        <BooleanRadioInput
          editable="true"
          id="SafetyEquipmentUsed"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.SafetyEquipmentUsed&quot;)"
          value="Claim.SafetyEquipUsed">
          <PostOnChange
            target="CompensabilityFactorsInputSet"/>
        </BooleanRadioInput>
        <TypeKeyRadioInput
          editable="true"
          id="DrugsInvolved"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.DrugsInvolved&quot;)"
          value="Claim.DrugsInvolved"
          valueType="typekey.YesNo">
          <PostOnChange
            target="CompensabilityFactorsInputSet"/>
        </TypeKeyRadioInput>
        <InputSetRef
          def="CompensableInputSet(Claim)"/>
      </InputSet>
      <InputDivider/>
      <Label
        id="Classification"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Classification&quot;)"/>
      <BooleanRadioInput
        editable="true"
        helpText="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjurySeverity.MedicalReport.HelpText&quot;)"
        id="InjurySeverity_MedicalReport"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjurySeverity.MedicalReport&quot;)"
        required="false"
        value="Claim.MedicalReport"/>
      <BooleanRadioInput
        editable="true"
        helpText="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjurySeverity.TimeLossReport.HelpText&quot;)"
        id="InjurySeverity_TimeLossReport"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjurySeverity.TimeLossReport&quot;)"
        required="false"
        value="Claim.TimeLossReport"/>
      <BooleanRadioInput
        editable="true"
        helpText="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjurySeverity.EmployerLiability.HelpText&quot;)"
        id="InjurySeverity_EmployerLiability"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjurySeverity.EmployerLiability&quot;)"
        required="false"
        value="Claim.EmployerLiability"/>
      <RangeInput
        editable="true"
        id="Catastrophe_CatastropheNumber"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.Catastrophe.CatastropheNumber&quot;)"
        numCols="30"
        required="false"
        value="Claim.Catastrophe"
        valueRange="gw.api.admin.CatastropheUtil.getCatastrophes()"
        valueType="entity.Catastrophe"/>
      <InputDivider/>
      <Label
        id="KeyWCDates"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.KeyWCDates&quot;)"/>
      <DateInput
        dateFormat="short"
        editable="true"
        id="Claim_InjuryIllnessDate"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.InjuryIllnessDate&quot;)"
        required="true"
        validationExpression="Claim.LossDate == null || Claim.LossDate &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
        value="Claim.LossDate">
        <PostOnChange
          onChange="gw.pcf.ClaimLossDetailsUtil.changedLossDate(Claim)"/>
      </DateInput>
      <DateInput
        editable="true"
        id="Claim_lossTime"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.InjuryIllnessTime&quot;)"
        timeFormat="short"
        validationExpression="Claim.LossDate != null || Claim.LossDate &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
        value="Claim.LossDate"/>
      <DateInput
        dateFormat="short"
        editable="true"
        id="EmploymentData_InjuryStartDate"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.InjuryStartDate&quot;)"
        validationExpression="Claim.EmploymentData.InjuryStartTime == null || Claim.EmploymentData.InjuryStartTime &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
        value="Claim.EmploymentData.InjuryStartTime"/>
      <DateInput
        editable="true"
        id="EmploymentData_InjuryStartTime"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.InjuryStartTime&quot;)"
        timeFormat="short"
        validationExpression="Claim.EmploymentData.InjuryStartTime == null || Claim.EmploymentData.InjuryStartTime &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
        value="Claim.EmploymentData.InjuryStartTime"/>
      <DateInput
        dateFormat="short"
        editable="true"
        id="Claim_DateReportedtoEmployer"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.DateReportedtoEmployer&quot;)"
        required="true"
        timeFormat="short"
        value="Claim.DateRptdToEmployer"/>
      <DateInput
        dateFormat="short"
        editable="true"
        id="ClaimFormGiven"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.ClaimFormGiven&quot;)"
        timeFormat="short"
        value="Claim.DateFormGivenToEmp"/>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.Notification&quot;)"/>
      <BooleanRadioInput
        editable="true"
        id="Notification_FirstNoticeSuit"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Notification.FirstNoticeSuit&quot;)"
        value="Claim.FirstNoticeSuit">
        <PostOnChange
          onChange="Claim.clearDateNotifiedOfEmployeeRepresentation()"
          target="Notification_DateNotifiedOfEmployeeRepresentation"/>
      </BooleanRadioInput>
      <DateInput
        editable="true"
        id="Notification_DateNotifiedOfEmployeeRepresentation"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Notification.DateNotifiedOfEmployeeRepresentation&quot;)"
        required="true"
        value="Claim.ClaimWorkComp.DateOfEmployeeRepresentation"
        visible="Claim.FirstNoticeSuit == true"/>
      <TypeKeyInput
        editable="true"
        id="Claim_HowReported"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.HowReported&quot;)"
        value="Claim.HowReported"
        valueType="typekey.HowReportedType"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="ReportedBy_Picker"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.ReportedBy.Picker&quot;)"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        required="true"
        value="Claim.reporter"
        valueRange="Claim.RelatedPersonArray"/>
      <TypeKeyInput
        editable="true"
        filter="VALUE.hasCategory(Claim.Policy.PolicyType)"
        id="Claim_ReportedByType"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.ReportedByType&quot;)"
        required="true"
        value="Claim.ReportedByType"
        valueType="typekey.PersonRelationType">
        <Reflect
          triggerIds="ReportedBy_Picker">
          <ReflectCondition
            condition="VALUE==Claim.Insured"
            value="&quot;self&quot;"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </TypeKeyInput>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="MainContact_Picker"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.MainContact.Picker&quot;)"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        value="Claim.maincontact"
        valueRange="Claim.RelatedPersonArray"
        valueType="entity.Person"/>
      <TypeKeyInput
        editable="true"
        filter="VALUE.hasCategory(Claim.Policy.PolicyType)"
        id="Claim_MainContactType"
        label="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.MainContactType&quot;)"
        value="Claim.MainContactType"
        valueType="typekey.PersonRelationType"/>
      <TextInput
        id="Notification_InsuredReportNumber"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Notification.InsuredReportNumber&quot;)"
        value="Claim.ClaimWorkComp.InsuredReportNumber"/>
      <InputDivider/>
    </InputColumn>
    <InputFooterSection>
      <InputSet
        id="ConcurrentEmploymentLV">
        <ListViewInput
          boldLabel="true"
          def="EditableConcurrentEmploymentLV(Claim)"
          editable="true"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.ConcurrentEmploymentArray&quot;)"
          labelAbove="true"
          visible="Claim.ConcurrentEmp == YesNo.TC_YES ">
          <Toolbar>
            <IteratorButtons
              iterator="EditableConcurrentEmploymentLV.EditableConcurrentEmploymentLV"
              refreshTarget="DATA_ONLY"/>
          </Toolbar>
        </ListViewInput>
        <InputDivider/>
      </InputSet>
      <ListViewInput
        boldLabel="true"
        def="EditableOtherBenefitsLV(Claim)"
        editable="true"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.OtherBenefits&quot;)"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            iterator="EditableOtherBenefitsLV.EditableOtherBenefitsLV"
            refreshTarget="DATA_ONLY"/>
        </Toolbar>
      </ListViewInput>
      <ListViewInput
        boldLabel="true"
        def="EditableOfficialsLV(Claim)"
        editable="true"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.Officials&quot;)"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            iterator="EditableOfficialsLV.EditableOfficialsLV"
            refreshTarget="DATA_ONLY"/>
        </Toolbar>
      </ListViewInput>
      <ListViewInput
        boldLabel="true"
        def="MetroReportsLV(Claim)"
        editable="true"
        label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsAuto.Claim.MetroReports&quot;)"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            addLabel="DisplayKey.get(&quot;Button.Metro.New&quot;)"
            iterator="MetroReportsLV.MetroReportsLV"
            removeFlags="any RemovableMetroReport, no NotRemovableMetroReport"/>
        </Toolbar>
      </ListViewInput>
    </InputFooterSection>
    <Code><![CDATA[property get ContactProhibited() : boolean {
  return Claim.getClaimContact(Claim.claimant).ContactProhibited
}
property set ContactProhibited(prohibited : boolean) {
  var claimContact = Claim.getClaimContact(Claim.claimant)
  if (claimContact != null) claimContact.ContactProhibited = prohibited
}

property get FilteredClassCodes() : ClassCode[] {
  if(Claim.ClaimWorkComp.ClassCodeByLocation) {
    return Claim.Policy.ClassCodes.where( \ code -> Claim.LocationCode.LocationBasedRisks*.ClassCode.contains(code) )
  }
  else {
    return Claim.Policy.ClassCodes
  }
}]]></Code>
  </DetailViewPanel>
</PCF>