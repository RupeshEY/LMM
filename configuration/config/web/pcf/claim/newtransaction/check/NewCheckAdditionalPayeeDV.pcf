<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../../pcf.xsd">
  <DetailViewPanel
    id="NewCheckAdditionalPayeeDV">
    <Require
      name="Check"
      type="Check"/>
    <Require
      name="Wizard"
      type="gw.api.financials.CheckWizardInfo"/>
    <Variable
      initialValue="Check.ShowAddressFields"
      name="showAddressFields"
      type="boolean"/>
    <InputColumn>
      <Label
        label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.AdditionalPayee&quot;)"
        visible="Check.Payees.length &lt;= 1 and Check.PaymentMethod == PaymentMethod.TC_CHECK"/>
      <ClaimContactInput
        claim="Check.Claim"
        editable="true"
        id="PrimaryPayee_Name"
        label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.PrimaryPayee.Name&quot;)"
        onPick="Check.handleOnPickForPayee(Check.FirstPayee); showAddressFields = !Check.addressRequiredFieldsValid();"
        required="true"
        searchLocation="NewCheckWizardAddressBookPickerPopup.push(statictypeof(Check.FirstPayee.Payee), Check.Claim)"
        value="Check.FirstPayee.Payee"
        valueRange="Check.Claim.PayeeCandidates"
        visible="Check.Payees.length &lt;= 1">
        <PostOnChange
          onChange="Check.handleOnPickForPayee(Check.FirstPayee); showAddressFields = !Check.addressRequiredFieldsValid();"/>
      </ClaimContactInput>
      <RangeInput
        editable="true"
        id="PrimaryPayee_Type"
        label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.PrimaryPayee.Type&quot;)"
        required="true"
        value="Check.FirstPayee.PayeeType"
        valueRange="Check.getAllowedPayeeTypes(Check.FirstPayee.Payee)"
        valueType="typekey.ContactRole"
        visible="Check.Payees.length &lt;= 1"/>
      <ButtonInput
        action="Check.addNewPayee()"
        id="AddJointPayees"
        value="DisplayKey.get(&quot;NVV.Financials.Check.AddJointPayees&quot;)"
        visible="Check.Payees.length &lt;= 1"/>
      <ListViewInput
        boldLabel="true"
        editable="true"
        label="DisplayKey.get(&quot;NVV.Financials.Check.Payees&quot;)"
        labelAbove="true"
        visible="Check.Payees.length &gt; 1">
        <Toolbar>
          <IteratorButtons
            iterator="NewCheckPayeeDVPayeesLV"/>
        </Toolbar>
        <ListViewPanel
          id="NewCheckPayeeDVPayeesLV"
          validationExpression="Check.validateCheckPayees(); return null">
          <RowIterator
            editable="true"
            elementName="CheckPayee"
            toCreateAndAdd="Check.addNewPayee()"
            toRemove="Check.removeFromPayees(CheckPayee); Check.handleOnPickForPayee(null);"
            value="Check.Payees"
            valueType="entity.CheckPayee[]">
            <Row>
              <ClaimContactCell
                claim="Check.Claim"
                editable="true"
                id="PayeeName"
                label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.PrimaryPayee.Name&quot;)"
                onPick="Check.handleOnPickForPayee(CheckPayee)"
                required="true"
                value="CheckPayee.Payee"
                valueRange="Check.Claim.PayeeCandidates">
                <PostOnChange
                  onChange="Check.handleOnPickForPayee(CheckPayee)"/>
              </ClaimContactCell>
              <TypeKeyCell
                editable="true"
                id="PayeeType"
                label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.PrimaryPayee.Type&quot;)"
                required="true"
                validationExpression="CheckPayee.PayeeType == TC_CLAIMANT &amp;&amp; !CheckPayee.ClaimContact.isClaimant() ? DisplayKey.get(&quot;Java.NewPayment.Error.PayeeIsNotClaimant&quot;) : null"
                value="CheckPayee.PayeeType"
                valueType="typekey.ContactRole"/>
            </Row>
          </RowIterator>
        </ListViewPanel>
      </ListViewInput>
      <InputDivider/>
      <RangeRadioInput
        boldLabel="true"
        editable="true"
        filter="VALUE !=  PaymentMethod.TC_MANUAL"
        id="PaymentMethod"
        label="DisplayKey.get(&quot;NVV.Financials.NewPaymentInstructions.Check.PaymentMethod&quot;)"
        value="Check.PaymentMethod"
        valueRange="PaymentMethod.getTypeKeys( false )"
        valueType="typekey.PaymentMethod">
        <PostOnChange
          onChange="Check.handleOnPickForPayee(null)"/>
      </RangeRadioInput>
      <TextAreaInput
        boldLabel="true"
        editable="true"
        id="PayTo"
        label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.PayTo&quot;)"
        numCols="60"
        numRows="1"
        value="Check.PayTo"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT">
      </TextAreaInput>
    </InputColumn>
    <InputColumn>
      <Label
        label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.MailTo&quot;)"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT"/>
      <TypeKeyInput
        editable="true"
        id="DeliveryMethod"
        label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.DeliveryMethod&quot;)"
        value="Check.DeliveryMethod"
        valueType="typekey.DeliveryMethod"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT"/>
      <TextInput
        editable="true"
        id="MailToContact"
        label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.MailToContact&quot;)"
        required="true"
        value="Check.MailTo"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT">
      </TextInput>
      <TextInput
        id="OldMailingAddress"
        label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.OldMailToAddress&quot;)"
        value="Check.OldMailToAddress"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT and Check.OldMailToAddress != null"/>
      <TextInput
        id="MailingAddress"
        label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.MailingAddress&quot;)"
        value="Check.CheckAddressOwner.Address"
        valueType="entity.Address"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT"/>
      <CheckBoxInput
        editable="true"
        id="ToggleAddressEdit"
        labelAbove="true"
        value="showAddressFields"
        valueLabel="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.EditMailingAddress&quot;)"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT and Check.FirstPayee.Payee != null">
        <PostOnChange
          target="MailingAddressInputSet"/>
      </CheckBoxInput>
      <InputSetRef
        def="CCAddressInputSet(Check.CheckAddressOwner)"
        id="MailingAddressInputSet"
        visible="Check.PaymentMethod != PaymentMethod.TC_EFT and showAddressFields"/>
      <InputSet
        id="EFTDataInputSet"
        visible="Check.PaymentMethod == PaymentMethod.TC_EFT">
        <RangeInput
          editable="true"
          id="EFTRecords"
          label="DisplayKey.get(&quot;Web.Financials.Check.BankData.SelectEFT&quot;)"
          value="Check.EFTData"
          valueRange="Check.FirstPayee.Payee.EFTRecords"
          valueType="entity.EFTData"/>
        <TextAreaInput
          editable="true"
          id="PayTo"
          label="DisplayKey.get(&quot;Web.Financials.Check.BankData.BankAcctHolderName&quot;)"
          numRows="1"
          value="Check.PayTo">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.AccountName"/>
        </TextAreaInput>
        <TextInput
          editable="true"
          id="BankName"
          label="DisplayKey.get(&quot;Web.Financials.Check.BankData.BankName&quot;)"
          value="Check.BankName">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.BankName"/>
        </TextInput>
        <RangeRadioInput
          editable="true"
          id="BankAccountType"
          label="DisplayKey.get(&quot;Web.Financials.Check.BankData.BankAccountType&quot;)"
          required="true"
          value="Check.BankAccountType"
          valueRange="BankAccountType.getTypeKeys( false )"
          valueType="typekey.BankAccountType">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.BankAccountType"/>
        </RangeRadioInput>
        <PrivacyInput
          editable="true"
          encryptionExpression="Check.maskBankAccountNumber(VALUE)"
          id="BankAccountNumber"
          label="DisplayKey.get(&quot;Web.Financials.Check.BankData.BankAccountNumber&quot;)"
          required="true"
          value="Check.BankAccountNumber">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.BankAccountNumber"/>
        </PrivacyInput>
        <TextInput
          editable="true"
          id="BankRoutingNumber"
          label="DisplayKey.get(&quot;Web.Financials.Check.BankData.BankRoutingNumber&quot;)"
          required="true"
          value="Check.BankRoutingNumber">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.BankRoutingNumber"/>
        </TextInput>
      </InputSet>
      <InputDivider/>
      <TypeKeyInput
        boldLabel="true"
        editable="true"
        id="DeductionType"
        label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.DeductionType&quot;)"
        required="true"
        value="Check.DeductionType"
        valueType="typekey.DeductionType"/>
      <InputDivider/>
      <InputSet
        editable="true"
        id="CheckPortion">
        <Label
          label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.CheckPortion&quot;)"
          visible="Check.PaymentMethod == PaymentMethod.TC_CHECK"/>
        <Label
          id="TransactionPortion"
          label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.TransactionPortion&quot;)"
          visible="Check.PaymentMethod == PaymentMethod.TC_EFT"/>
        <Choice
          id="PortionPercentageChoice"
          option="true"
          value="checkPortionType"
          valueType="java.lang.Boolean">
          <TextInput
            editable="true"
            formatType="percentagePoints"
            id="PortionPercentage"
            label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.CheckPortion.Percentage&quot;)"
            numCols="10"
            required="checkPortionType"
            validationExpression="((Check.Portion.FixedTransactionAmount == null and Check.Portion.Percentage == null) ? DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.CheckPortion.NoValueError&quot;) : null)"
            value="Check.Portion.Percentage"
            valueType="java.math.BigDecimal"/>
        </Choice>
        <Choice
          id="PortionFixedAmountChoice"
          option="false"
          value="checkPortionType"
          valueType="java.lang.Boolean">
          <CurrencyInput
            editable="true"
            formatType="general"
            helpText="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.CheckPortion.FixedAmount.Tip&quot;)"
            id="PortionFixedAmount"
            label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.CheckPortion.FixedAmount&quot;)"
            numCols="10"
            required="!checkPortionType"
            validationExpression="((Check.Portion.FixedTransactionAmount == null and Check.Portion.Percentage == null) ? DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.CheckPortion.NoValueError&quot;) : (Check.Portion.FixedTransactionAmount != null and Check.Portion.FixedTransactionAmount.Amount &lt; 0 ) ? DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.CheckPortion.FixedAmtNegValueError&quot;) : null)"
            value="Check.Portion.FixedTransactionAmount"/>
        </Choice>
      </InputSet>
    </InputColumn>
    <Code><![CDATA[property get checkPortionType() : boolean {
  return Wizard.isCheckPortionPercentage( Check );
}

property set checkPortionType(isPercentage : boolean) {
  Wizard.setCheckPortionPercentage( Check, isPercentage );
}]]></Code>
  </DetailViewPanel>
</PCF>
