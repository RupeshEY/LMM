package gw.sampledata

uses gw.pl.persistence.core.Bundle
uses java.util.HashMap
uses gw.api.databuilder.AccountBuilder
uses gw.api.databuilder.AccountSpecialHandlingBuilder

@Export
class SampleCommercialAutoClaims extends SampleDataBase 
{
  var accountHolders = new HashMap<String,Company>()
  
  construct(inCache : SampleDataCache) {
    super(inCache)
  }

  override property get Description() : String {
    return "Commercial Auto Claims and associated Contacts, Policies, Exposures, Notes, ClaimContacts, Activities and Financials"
  }
  
  private function createAccountHolders(bundle:Bundle) 
  {
    var pryWay = getPryWayTruckingCompany("ab:8000", bundle)
    accountHolders[pryWay.PublicID] = pryWay
    
    var bison = getBisonTruckingCompany("ab:8899", bundle)
    accountHolders[bison.PublicID] = bison
    
    var trucksRUs = new gw.api.databuilder.CompanyBuilder()
          .withPublicId("ab:8001")
          .withLocalizedTaxID()
          //.withTaxID("777-54-1997")
          .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
            .withAddressLine1("2020 Airport Blvd.")
            .withCountry(TC_US)
            .withPostalCode("94602")
            .withState(State.TC_CA)
            .withAddressType(TC_BUSINESS)
            .withCity("Oakland"))
            .withWorkPhone("510-687-5963")
          .withName("Trucks-R-Us")
          .create(bundle)
     accountHolders.put(trucksRUs.PublicID, trucksRUs)
     var acmeRentals = new gw.api.databuilder.CompanyBuilder()
          .withPublicId("ab:8002")
          .withLocalizedTaxID()
          //.withTaxID("999-88-7423")
          .withPrimaryPhone(TC_WORK)
          .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
            .withAddressLine1("1247 Fair Oaks Ave")
            .withCountry(TC_US)
            .withPostalCode("91101")
            .withState(State.TC_CA)
            .withAddressType(TC_BUSINESS)
            .withCity("Pasadena"))
          .withWorkPhone("847-279-3401")
          .withName("ACME Rentals")
          .create(bundle)
      accountHolders.put(acmeRentals.PublicID, acmeRentals)
  }

  private function getPryWayTruckingCompany(publicId:String, bundle:Bundle):Company {
    return new gw.api.databuilder.CompanyBuilder()
        .withPublicId(publicId)
        .withLocalizedTaxID()
        //.withTaxID("141-11-8783")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withCounty("Cleveland")
          .withAddressLine1("3150 Old School Rd.")
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Shelby"))
        .withWorkPhone("704-434-2007")
        .withName("Pry-Way Trucking Company")
        .create(bundle)
  }

  private function getBisonTruckingCompany(publicId:String, bundle:Bundle):Company {
    return new gw.api.databuilder.CompanyBuilder()
        .withPublicId(publicId)
        .withLocalizedTaxID()
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withCounty("Cleveland")
          .withAddressLine1("3160 Juniper Rd.,")
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Shelby"))
        .withWorkPhone("704-434-2008")
        .withName("Bison Trucking Company")
        .create(bundle)
  }
    
  override function testSampleData(bundle : Bundle) {
     //create Account holder contacts in AB
     createAccountHolders(bundle)
    
    {  //inner block
      
      var vehicleTrucking21 = new gw.api.databuilder.VehicleBuilder()
        .withYear(1990)
        .withLicensePlate("1839460")
        .withPublicId("trucking:21")
        .withMake("WhiteGMC")
        .withState(Jurisdiction.TC_NC)
        .withModel("Tractor-2")
        .withVin("4V1WDBJF8LN623310")
        .create(bundle)

      var contactTrucking1002 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Bevel")
        .withPublicId("trucking:1002")
        .withFirstName("Charles Stephen")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withCounty("Cleveland")
          .withAddressLine1("3150 Old School Rd.")
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Shelby"))
        .withWorkPhone("704-434-2007")
        .create(bundle)

      var contactTrucking2000 = getPryWayTruckingCompany("trucking:2000", bundle)

      var contactTrucking1004 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Armstrong")
        .withPublicId("trucking:1004")
        .withFirstName("Cynthia D")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withCounty("Cleveland")
          .withAddressLine1("3150 Old School Rd.")
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Shelby"))
        .withWorkPhone("704-434-2007")
        .create(bundle)

      var contactTrucking25 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Beard")
        .withPublicId("trucking:25")
        .withFirstName("James Howard")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withCounty("Cleveland")
          .withAddressLine1("3150 Old School Rd.")
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Shelby"))
        .withWorkPhone("704-434-2007")
        .create(bundle)

      var contactTrucking26 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Bearden")
        .withPublicId("trucking:26")
        .withFirstName("Rodney Joe")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withCounty("Cleveland")
          .withAddressLine1("3150 Old School Rd.")
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Shelby"))
        .withWorkPhone("704-434-2007")
        .create(bundle)

      var contactTrucking28 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Brown")
        .withPublicId("trucking:28")
        .withFirstName("Ronald Glenn")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withCounty("Cleveland")
          .withAddressLine1("3150 Old School Rd.")
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Shelby"))
        .withWorkPhone("704-434-2007")
        .create(bundle)

      var contactTrucking29 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Burt")
        .withPublicId("trucking:29")
        .withFirstName("Ronald Keith")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withCounty("Cleveland")
          .withAddressLine1("3150 Old School Rd.")
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Shelby"))
        .withWorkPhone("704-434-2007")
        .create(bundle)

      var contactTrucking30 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Dove")
        .withPublicId("trucking:30")
        .withFirstName("James Robert")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withCounty("Cleveland")
          .withAddressLine1("3150 Old School Rd.")
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Shelby"))
        .withWorkPhone("704-434-2007")
        .create(bundle)
            
     var accountDemoPryWay = gw.api.databuilder.AccountBuilder
         .forHolder(createLocalFromAB("trucking:8117", accountHolders["ab:8000"], bundle))
         .withPublicId("trucking_acct:8117")
         .withAccountNumber("ACC12234")
         .withSpecialHandling(new AccountSpecialHandlingBuilder())
         .create(bundle)

      var claim = new gw.api.databuilder.ClaimBuilder()
        .withIncidentReport(false)
        .withWeather(TC_CL)
        .withAssignmentStatus(TC_ASSIGNED)
        .withLossDate(BaseDate.addDays(-90))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withStrategy(TC_AUTO_NORMAL)
        .withAssignmentDate(BaseDate.addDays(0))
        .withFlagged(TC_NEVERFLAGGED)
        .withLossLocation(new gw.api.databuilder.AddressBuilder()
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Lenoir"))
        .withLossCause(TC_VEHCOLLISION)
        .withClaimNumber("000-00-332881")
        .withMainContactType(TC_EMPLOYEE)
        .withReportedByType(TC_EMPLOYEE)
        .withLossType(TC_AUTO)
        .withValidationLevel(TC_NEWLOSS)
        .withPolicy( new gw.api.databuilder.PolicyBuilder()
          .withExpirationDate(BaseDate.addDays(185))
          .withUnderwritingCo(TC_PARENT)
          .withVerified(true)
          .withOrigEffectiveDate(BaseDate.addDays(-2005))
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withUnderwritingGroup(TC_ACME_AUTO)
          .withEffectiveDate(BaseDate.addDays(-180))
          .withStatus(TC_INFORCE)
          .withPolicyNumber("64-318764")
          .withPublicId("trucking:5")
          .withTotalProperties(0)
          .withPolicyType(TC_BUSINESSAUTO)
          .withTotalVehicles(6)
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("12-91")
            .withFormNumber("E-69L"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("12-91")
            .withFormNumber("E-1"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("12-91")
            .withFormNumber("E-4"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("12-91")
            .withFormNumber("E-5"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("1-94")
            .withFormNumber("E-18"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("12-91")
            .withFormNumber("E-45"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("12-95")
            .withFormNumber("E-70 SC"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("7-95")
            .withFormNumber("E-96 SC"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("11-93")
            .withFormNumber("E-102"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("7-96")
            .withFormNumber("E-103"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("7-97")
            .withFormNumber("E-114 SC"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("3-97")
            .withFormNumber("E-115"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("4-99")
            .withFormNumber("E-125"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("6-71")
            .withFormNumber("Form F"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withFormNumber("A101"))
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("3-99")
            .withFormNumber("D-101 SC"))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(1)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1989)
              .withLicensePlate("4964846")
              .withPublicId("trucking:20")
              .withMake("Freightliner")
              .withState(Jurisdiction.TC_NC)
              .withModel("Tractor-1")
              .withVin("1FUPACYBXKH341308"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(9000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(2)
            .withVehicle(vehicleTrucking21)
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(10000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(3)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1990)
              .withLicensePlate("8364725")
              .withPublicId("trucking:22")
              .withMake("WhiteGMC")
              .withState(Jurisdiction.TC_NC)
              .withModel("Tractor-3")
              .withVin("4V1WDBJF6LN623306"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(10000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(4)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1993)
              .withLicensePlate("8478367")
              .withPublicId("trucking:23")
              .withMake("Freightliner")
              .withState(Jurisdiction.TC_NC)
              .withModel("Tractor-4")
              .withVin("1FUYDPYB5PH479736"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(15000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(5)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1993)
              .withLicensePlate("2920984")
              .withPublicId("trucking:24")
              .withMake("Freightliner")
              .withState(Jurisdiction.TC_NC)
              .withModel("Tractor-5")
              .withVin("1FUYDPYB3PH479749"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(18500bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(6)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1995)
              .withLicensePlate("3009274")
              .withPublicId("trucking:25")
              .withMake("Freightliner")
              .withState(Jurisdiction.TC_NC)
              .withModel("Tractor-6")
              .withVin("1FUY3MCB8SH671914"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(22000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withPolicyAccount(accountDemoPryWay)
          .withContactInRole(contactTrucking2000, TC_INSURED)
          .withCoveredParty(contactTrucking1004, 1, null)
          .withCoveredParty(contactTrucking25, 2, null)
          .withCoveredParty(contactTrucking26, 3, null)
          .withCoveredParty(contactTrucking1002, 4, null)
          .withCoveredParty(contactTrucking28, 5, null)
          .withCoveredParty(contactTrucking29, 6, null)
          .withCoveredParty(contactTrucking30, 7, null))
        .withFault(100)
        .withAssignedGroup(findGroupByName("Eastern Auto Group"))
        .withJurisdictionState(TC_NC)
        .withSegment(TC_AUTO_LOW)
        .withReportedDate(BaseDate.addDays(-90))
        .withCoverageInQuestion(false)
        .withLOBCode(TC_BUSINESSAUTOLINE)
        .withPublicID("trucking:6")
        .withDescription("Vehicle side-swiped passenger sedan on curve; property damage only")
        .withState(TC_OPEN)
        .withAssignedUser(findUserByUserName("wgompers"))
        .withContactInRole(contactTrucking1002, TC_MAINCONTACT)
        .withContactInRole(contactTrucking1002, TC_REPORTER)
        .withNote( new gw.api.databuilder.NoteBuilder()
          .withTopic(TC_GENERAL)
          .withAuthoringDate(BaseDate.addDays(-83))
          .withSubject("Initial phone call with claimant")
          .withAuthor(findUserByUserName("wgompers"))
          .withBody("Contacted claimant; appears not to have been injured"))
        .withActivity( new gw.api.databuilder.ActivityBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withAssignmentDate(BaseDate.addDays(0))
          .withEscalated(false)
          .withRecurring(false)
          .withImportance(TC_NOTONCALENDAR)
          .withCloseDate(BaseDate.addDays(-89))
          .withMandatory(true)
          .withPriority(TC_HIGH)
          .withActivityClass(TC_TASK)
          .withAssignedGroup(findGroupByName("Eastern Auto Group"))
          .withType(TC_GENERAL)
          .withEscalationDate(BaseDate.addDays(-82))
          .withStatus(TC_COMPLETE)
          .withLastViewedDate(BaseDate.addDays(-2415))
          .withActivityPattern(findActivityPatternByCode("contact_insured"))
          .withSubject("Contact insured")
          .withAssignedUser(findUserByUserName("wgompers"))
          .withTargetDate(BaseDate.addDays(-89)))
        .withActivity( new gw.api.databuilder.ActivityBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withAssignmentDate(BaseDate.addDays(0))
          .withEscalated(false)
          .withRecurring(false)
          .withImportance(TC_NOTONCALENDAR)
          .withCloseDate(BaseDate.addDays(-89))
          .withMandatory(true)
          .withPriority(TC_HIGH)
          .withActivityClass(TC_TASK)
          .withAssignedGroup(findGroupByName("Eastern Auto Group"))
          .withType(TC_GENERAL)
          .withEscalationDate(BaseDate.addDays(-82))
          .withStatus(TC_COMPLETE)
          .withLastViewedDate(BaseDate.addDays(-2415))
          .withActivityPattern(findActivityPatternByCode("contact_claimant"))
          .withSubject("Contact claimant")
          .withAssignedUser(findUserByUserName("wgompers"))
          .withTargetDate(BaseDate.addDays(-89)))
        .withActivity( new gw.api.databuilder.ActivityBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withAssignmentDate(BaseDate.addDays(0))
          .withEscalated(false)
          .withRecurring(false)
          .withImportance(TC_NOTONCALENDAR)
          .withCloseDate(BaseDate.addDays(-83))
          .withMandatory(true)
          .withPriority(TC_HIGH)
          .withActivityClass(TC_TASK)
          .withAssignedGroup(findGroupByName("Eastern Auto Group"))
          .withType(TC_GENERAL)
          .withEscalationDate(BaseDate.addDays(-76))
          .withStatus(TC_COMPLETE)
          .withLastViewedDate(BaseDate.addDays(-2415))
          .withActivityPattern(findActivityPatternByCode("coverage"))
          .withSubject("Verify coverage")
          .withAssignedUser(findUserByUserName("wgompers"))
          .withTargetDate(BaseDate.addDays(-83)))
        .withActivity( new gw.api.databuilder.ActivityBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withAssignmentDate(BaseDate.addDays(0))
          .withEscalated(false)
          .withRecurring(false)
          .withImportance(TC_NOTONCALENDAR)
          .withCloseDate(BaseDate.addDays(-83))
          .withMandatory(false)
          .withPriority(TC_NORMAL)
          .withActivityClass(TC_TASK)
          .withAssignedGroup(findGroupByName("Eastern Auto Group"))
          .withType(TC_GENERAL)
          .withEscalationDate(BaseDate.addDays(-76))
          .withStatus(TC_COMPLETE)
          .withLastViewedDate(BaseDate.addDays(-2415))
          .withActivityPattern(findActivityPatternByCode("scene_inspection"))
          .withSubject("Inspect accident scene")
          .withAssignedUser(findUserByUserName("wgompers"))
          .withTargetDate(BaseDate.addDays(-83)))
        .withActivity( new gw.api.databuilder.ActivityBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withAssignmentDate(BaseDate.addDays(0))
          .withEscalated(false)
          .withRecurring(false)
          .withImportance(TC_NOTONCALENDAR)
          .withCloseDate(BaseDate.addDays(-83))
          .withMandatory(false)
          .withPriority(TC_NORMAL)
          .withActivityClass(TC_TASK)
          .withAssignedGroup(findGroupByName("Eastern Auto Group"))
          .withType(TC_GENERAL)
          .withEscalationDate(BaseDate.addDays(-76))
          .withStatus(TC_COMPLETE)
          .withLastViewedDate(BaseDate.addDays(-2415))
          .withActivityPattern(findActivityPatternByCode("vehicle_inspection"))
          .withSubject("Inspect vehicle")
          .withAssignedUser(findUserByUserName("wgompers"))
          .withTargetDate(BaseDate.addDays(-83)))
        .withActivity( new gw.api.databuilder.ActivityBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withAssignmentDate(BaseDate.addDays(0))
          .withEscalated(false)
          .withRecurring(false)
          .withImportance(TC_NOTONCALENDAR)
          .withMandatory(true)
          .withPriority(TC_NORMAL)
          .withActivityClass(TC_TASK)
          .withAssignedGroup(findGroupByName("Eastern Auto Group"))
          .withType(TC_GENERAL)
          .withEscalationDate(BaseDate.addDays(97))
          .withStatus(TC_OPEN)
          .withLastViewedDate(BaseDate.addDays(-2415))
          .withActivityPattern(findActivityPatternByCode("settlement_offer"))
          .withSubject("Settle claim")
          .withAssignedUser(findUserByUserName("wgompers"))
          .withTargetDate(BaseDate.addDays(90)))
        .create(bundle)

       var claimInfoTrucking6 = new gw.api.databuilder.ClaimInfoBuilder()
        .withRootPublicId("trucking:6")
        .withClaimNumber("000-00-332881")
        .onClaim(claim)
        .create(bundle)

      var policyPeriodTrucking70005 = new gw.api.databuilder.PolicyPeriodBuilder()
        .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoTrucking6))
        .withPolicyPeriodType(TC_POLICY)
        .withExpirationDate(BaseDate.addDays(185))
        .withPolicyNumber("64-318764")
        .withPublicId("trucking:70005")
        .withPolicyType(TC_BUSINESSAUTO)
        .withEffectiveDate(BaseDate.addDays(-180))
        .create(bundle)

      var exposureTrucking106 = new gw.api.databuilder.ExposureBuilder()
        .withOtherCoverage(false)
        .withLossParty(TC_THIRD_PARTY)
        .withExposureType(TC_VEHICLEDAMAGE)
        .withAssignedGroup(findGroupByName("Eastern Auto Group"))
        .withAssignmentStatus(TC_ASSIGNED)
        .withStrategy(TC_AUTO_NORMAL)
        .withProgress(TC_INVESTIGATION)
        .withJurisdictionState(TC_NC)
        .withAssignmentDate(BaseDate.addDays(0))
        .withPrimaryCoverage(TC_BAOWNEDLIABILITYCOV)
        .withSegment(TC_AUTO_LOW)
        .withClaimantType(TC_VEH_OTHER_OWNER)
        .withClaimOrder(1)
        .withPublicID("trucking:106")
        .withState(TC_OPEN)
        .withAssignedUser(findUserByUserName("wgompers"))
        .onClaim(claim)
        .withCoverageSubType(TC_BAOWNEDLIABILITYCOV_VD)
        .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
          .withSpeed(40)
          .withSeverity(TC_MINOR)
          .withCollisionPoint(TC_LEFTSIDE)
          .withDriverRelation(TC_SELF)
          .withDescription("Damage to side panels")
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(1998)
            .withLicensePlate("7FDG745")
            .withPublicId("trucking:103")
            .withMake("Jaguar")
            .withState(Jurisdiction.TC_NC)
            .withModel("XJ6")
            .withVin("6GYF54637HD642271"))
          .withOwnersPermission(true)
          .withVehicleDirection(TC_FORWARD)
          .withContactInRole(contactTrucking1004, TC_DRIVER))
        .withContactInRole(contactTrucking1004, TC_CLAIMANT)
        .create(bundle)
    }


    {
      var contactTrucking1001 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Beard")
        .withPublicId("trucking:1001")
        .withFirstName("James Howard")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withCounty("Cleveland")
          .withAddressLine1("3150 Old School Rd.")
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Shelby"))
        .withWorkPhone("704-434-2007")
        .create(bundle)

      var contactTrucking1003 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Sorenson")
        .withPublicId("trucking:1003")
        .withFirstName("Michelle")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("1075 Aspen Lane")
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Cofield"))
        .withWorkPhone("704-446-2929")
        .create(bundle)

      var contactTrucking2001 = getPryWayTruckingCompany("trucking:2001", bundle)
      var contactTrucking2009 = getBisonTruckingCompany("trucking:2009", bundle)

      var contactDemoSample10196 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Arlington")
        .withPublicId("demo_sample:10196")
        .withFirstName("Annabelle")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("2050 Eagle Landing Blvd.")
          .withCountry(TC_US)
          .withPostalCode("29406")
          .withState(State.TC_SC)
          .withAddressType(TC_BUSINESS)
          .withCity("Charleston"))
        .withWorkPhone("843-553-2001")
        .create(bundle)

      var contactTrucking24 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Armstrong")
        .withPublicId("trucking:24")
        .withFirstName("Cynthia D")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withCounty("Cleveland")
          .withAddressLine1("3150 Old School Rd.")
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Shelby"))
        .withWorkPhone("704-434-2007")
        .create(bundle)
        
      var pryWayDemoAccount2 = AccountBuilder
        .forHolder(createLocalFromAB("acct_holder:9020", accountHolders["ab:8000"], bundle))
        .withAccountNumber("ACC12234B")
        .withPublicId("trucking_acct:9020")
        .withSpecialHandling(new AccountSpecialHandlingBuilder())
        .create(bundle)
        
      var bisonDemoAccount = AccountBuilder
        .forHolder(createLocalFromAB("acct_holder:9021", accountHolders["ab:8899"], bundle))
        .withPublicId("trucking_acct:9021")
        .withAccountNumber("ACC12234BC")
        .withSpecialHandling(new AccountSpecialHandlingBuilder())
        .create(bundle)

      var claim = new gw.api.databuilder.ClaimBuilder()
        .withIncidentReport(false)
        .withWeather(TC_CL)
        .withAssignmentStatus(TC_ASSIGNED)
        .withLossDate(BaseDate.addDays(-5))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withStrategy(TC_AUTO_NORMAL)
        .withAssignmentDate(BaseDate.addDays(0))
        .withFlagged(TC_NEVERFLAGGED)
        .withLossLocation(new gw.api.databuilder.AddressBuilder()
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Charlotte"))
        .withLossCause(TC_FIXEDOBJCOLL)
        .withClaimNumber("345-53-343195")
        .withMainContactType(TC_EMPLOYEE)
        .withReportedByType(TC_EMPLOYEE)
        .withLossType(TC_AUTO)
        .withValidationLevel(TC_NEWLOSS)
        .withPolicy( new gw.api.databuilder.PolicyBuilder()
          .withExpirationDate(BaseDate.addDays(185))
          .withUnderwritingCo(TC_PARENT)
          .withVerified(true)
          .withOrigEffectiveDate(BaseDate.addDays(-2005))
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withUnderwritingGroup(TC_ACME_AUTO)
          .withEffectiveDate(BaseDate.addDays(-180))
          .withStatus(TC_INFORCE)
          .withPolicyNumber("64-318765")
          .withPublicId("trucking:6")
          .withTotalProperties(0)
          .withPolicyType(TC_BUSINESSAUTO)
          .withTotalVehicles(6)
          .withEndorsement( new gw.api.databuilder.EndorsementBuilder()
            .withDescription("12-91")
            .withFormNumber("E-69L"))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(1)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1989)
              .withLicensePlate("4964846")
              .withPublicId("trucking:26")
              .withMake("Freightliner")
              .withState(Jurisdiction.TC_NC)
              .withModel("Tractor-1")
              .withVin("1FUPACYBXKH341308"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(9000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(2)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1990)
              .withLicensePlate("1839460")
              .withPublicId("trucking:27")
              .withMake("WhiteGMC")
              .withState(Jurisdiction.TC_NC)
              .withModel("Tractor-2")
              .withVin("4V1WDBJF8LN623310"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(10000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(3)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1990)
              .withLicensePlate("8364725")
              .withPublicId("trucking:28")
              .withMake("WhiteGMC")
              .withState(Jurisdiction.TC_NC)
              .withModel("Tractor-3")
              .withVin("4V1WDBJF6LN623306"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(10000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(4)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1993)
              .withLicensePlate("8478367")
              .withPublicId("trucking:29")
              .withMake("Freightliner")
              .withState(Jurisdiction.TC_NC)
              .withModel("Tractor-4")
              .withVin("1FUYDPYB5PH479736"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(15000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(5)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1993)
              .withLicensePlate("2920984")
              .withPublicId("trucking:30")
              .withMake("Freightliner")
              .withState(Jurisdiction.TC_NC)
              .withModel("Tractor-5")
              .withVin("1FUYDPYB3PH479749"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(18500bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(6)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1995)
              .withLicensePlate("3009274")
              .withPublicId("trucking:31")
              .withMake("Freightliner")
              .withState(Jurisdiction.TC_NC)
              .withModel("Tractor-6")
              .withVin("1FUY3MCB8SH671914"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(22000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withPolicyAccount(bisonDemoAccount)
          .withContactInRole(contactTrucking2009, TC_INSURED)
          .withContactInRole(contactDemoSample10196, TC_AGENT)
          .withCoveredParty(contactTrucking24, 1, null)
          .withCoveredParty(contactTrucking1001, 2, null))
        .withFault(100)
        .withAssignedGroup(findGroupByName("Eastern Auto Group"))
        .withJurisdictionState(TC_NC)
        .withSegment(TC_AUTO_LOW)
        .withReportedDate(BaseDate.addDays(-1))
        .withCoverageInQuestion(false)
        .withLOBCode(TC_BUSINESSAUTOLINE)
        .withPublicID("trucking:8")
        .withDescription("Vehicle overturned in tight traffic circle")
        .withState(TC_OPEN)
        .withAssignedUser(findUserByUserName("wgompers"))
        .withContactInRole(contactTrucking1003, TC_MAINCONTACT)
        .withContactInRole(contactTrucking1003, TC_REPORTER)
        .withNote( new gw.api.databuilder.NoteBuilder()
          .withTopic(TC_GENERAL)
          .withAuthoringDate(BaseDate.addDays(6))
          .withSubject("Initial phone call with insured")
          .withAuthor(findUserByUserName("wgompers"))
          .withBody("Left message with insured to discuss occurrence"))
        .withActivity( new gw.api.databuilder.ActivityBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withAssignmentDate(BaseDate.addDays(0))
          .withEscalated(false)
          .withRecurring(false)
          .withImportance(TC_NOTONCALENDAR)
          .withMandatory(true)
          .withPriority(TC_HIGH)
          .withActivityClass(TC_TASK)
          .withAssignedGroup(findGroupByName("Eastern Auto Group"))
          .withType(TC_GENERAL)
          .withEscalationDate(BaseDate.addDays(7))
          .withStatus(TC_OPEN)
          .withLastViewedDate(BaseDate.addDays(-2415))
          .withActivityPattern(findActivityPatternByCode("contact_insured"))
          .withSubject("Contact insured")
          .withAssignedUser(findUserByUserName("wgompers"))
          .withTargetDate(BaseDate.addDays(0)))
        .withActivity( new gw.api.databuilder.ActivityBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withAssignmentDate(BaseDate.addDays(0))
          .withEscalated(false)
          .withRecurring(false)
          .withImportance(TC_NOTONCALENDAR)
          .withMandatory(true)
          .withPriority(TC_HIGH)
          .withActivityClass(TC_TASK)
          .withAssignedGroup(findGroupByName("Eastern Auto Group"))
          .withType(TC_GENERAL)
          .withEscalationDate(BaseDate.addDays(7))
          .withStatus(TC_OPEN)
          .withLastViewedDate(BaseDate.addDays(-2415))
          .withActivityPattern(findActivityPatternByCode("contact_claimant"))
          .withSubject("Contact claimant")
          .withAssignedUser(findUserByUserName("wgompers"))
          .withTargetDate(BaseDate.addDays(0)))
        .withActivity( new gw.api.databuilder.ActivityBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withAssignmentDate(BaseDate.addDays(0))
          .withEscalated(false)
          .withRecurring(false)
          .withImportance(TC_NOTONCALENDAR)
          .withMandatory(true)
          .withPriority(TC_HIGH)
          .withActivityClass(TC_TASK)
          .withAssignedGroup(findGroupByName("Eastern Auto Group"))
          .withType(TC_GENERAL)
          .withEscalationDate(BaseDate.addDays(13))
          .withStatus(TC_OPEN)
          .withLastViewedDate(BaseDate.addDays(-2415))
          .withActivityPattern(findActivityPatternByCode("coverage"))
          .withSubject("Verify coverage")
          .withAssignedUser(findUserByUserName("wgompers"))
          .withTargetDate(BaseDate.addDays(6)))
        .withActivity( new gw.api.databuilder.ActivityBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withAssignmentDate(BaseDate.addDays(0))
          .withEscalated(false)
          .withRecurring(false)
          .withImportance(TC_NOTONCALENDAR)
          .withMandatory(false)
          .withPriority(TC_NORMAL)
          .withActivityClass(TC_TASK)
          .withAssignedGroup(findGroupByName("Eastern Auto Group"))
          .withType(TC_GENERAL)
          .withEscalationDate(BaseDate.addDays(21))
          .withStatus(TC_OPEN)
          .withLastViewedDate(BaseDate.addDays(-2415))
          .withActivityPattern(findActivityPatternByCode("scene_inspection"))
          .withSubject("Inspect accident scene")
          .withAssignedUser(findUserByUserName("wgompers"))
          .withTargetDate(BaseDate.addDays(14)))
        .withActivity( new gw.api.databuilder.ActivityBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withAssignmentDate(BaseDate.addDays(0))
          .withEscalated(false)
          .withRecurring(false)
          .withImportance(TC_NOTONCALENDAR)
          .withMandatory(false)
          .withPriority(TC_NORMAL)
          .withActivityClass(TC_TASK)
          .withAssignedGroup(findGroupByName("Eastern Auto Group"))
          .withType(TC_GENERAL)
          .withEscalationDate(BaseDate.addDays(21))
          .withStatus(TC_OPEN)
          .withLastViewedDate(BaseDate.addDays(-2415))
          .withActivityPattern(findActivityPatternByCode("vehicle_inspection"))
          .withSubject("Inspect vehicle")
          .withAssignedUser(findUserByUserName("wgompers"))
          .withTargetDate(BaseDate.addDays(14)))
        .withActivity( new gw.api.databuilder.ActivityBuilder()
          .withAssignmentStatus(TC_ASSIGNED)
          .withAssignmentDate(BaseDate.addDays(0))
          .withEscalated(false)
          .withRecurring(false)
          .withImportance(TC_NOTONCALENDAR)
          .withMandatory(true)
          .withPriority(TC_NORMAL)
          .withActivityClass(TC_TASK)
          .withAssignedGroup(findGroupByName("Eastern Auto Group"))
          .withType(TC_GENERAL)
          .withEscalationDate(BaseDate.addDays(186))
          .withStatus(TC_OPEN)
          .withLastViewedDate(BaseDate.addDays(-2415))
          .withActivityPattern(findActivityPatternByCode("settlement_offer"))
          .withSubject("Settle claim")
          .withAssignedUser(findUserByUserName("wgompers"))
          .withTargetDate(BaseDate.addDays(179)))
        .create(bundle)

      var claimInfoTrucking8 = new gw.api.databuilder.ClaimInfoBuilder()
        .withRootPublicId("trucking:8")
        .withClaimNumber("345-53-343195")
        .onClaim(claim)
        .create(bundle)

      var policyPeriodTrucking70006 = new gw.api.databuilder.PolicyPeriodBuilder()
        .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoTrucking8))
        .withPolicyPeriodType(TC_POLICY)
        .withExpirationDate(BaseDate.addDays(185))
        .withPolicyNumber("64-318765")
        .withPublicId("trucking:70006")
        .withEffectiveDate(BaseDate.addDays(-180))
        .create(bundle)

      var exposureTrucking108 = new gw.api.databuilder.ExposureBuilder()
        .withOtherCoverage(false)
        .withLossParty(TC_INSURED)
        .withExposureType(TC_VEHICLEDAMAGE)
        .withAssignedGroup(findGroupByName("Eastern Auto Group"))
        .withAssignmentStatus(TC_ASSIGNED)
        .withStrategy(TC_AUTO_FAST)
        .withProgress(TC_INVESTIGATION)
        .withJurisdictionState(TC_NC)
        .withAssignmentDate(BaseDate.addDays(0))
        .withPrimaryCoverage(TC_BACOLLISIONCOV)
        .withSegment(TC_AUTO_LOW)
        .withClaimantType(TC_INSURED)
        .withClaimOrder(1)
        .withPublicID("trucking:108")
        .withState(TC_OPEN)
        .withAssignedUser(findUserByUserName("wgompers"))
        .onClaim(claim)
        .withCoverageSubType(TC_BACOLLISIONCOV)
        .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
          .withSpeed(30)
          .withVehicleUseReason(TC_BUSINESS)
          .withSeverity(TC_MINOR)
          .withCollisionPoint(TC_RIGHTSIDE)
          .withDriverRelation(TC_EMPLOYEE)
          .withDescription("Minor body damage")
          .withVehicle(new gw.api.databuilder.VehicleBuilder()
            .withYear(1990)
            .withLicensePlate("1839460")
            .withMake("WhiteGMC")
            .withState(Jurisdiction.TC_NC)
            .withModel("Tractor-2")
            .withVin("4V1WDBJF8LN623310"))
          .withOwnersPermission(true)
          .withVehicleDirection(TC_TURNINGRIGHT)
          .withContactInRole(contactTrucking1001, TC_DRIVER))
        .withContactInRole(contactTrucking2001, TC_CLAIMANT)
        .create(bundle)
    }
    {
      var contactDemoSample10197 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Arlington")
        .withPublicId("demo_sample:10197")
        .withFirstName("Annabelle")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("2050 Eagle Landing Blvd.")
          .withCountry(TC_US)
          .withPostalCode("29406")
          .withState(State.TC_SC)
          .withAddressType(TC_BUSINESS)
          .withCity("Charleston"))
        .withWorkPhone("843-553-2001")
        .create(bundle)

      var contactTrucking106 = new gw.api.databuilder.CompanyBuilder()
        .withPublicId("trucking:106")
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("2020 Airport Blvd.")
          .withCountry(TC_US)
          .withPostalCode("94602")
          .withState(State.TC_CA)
          .withAddressType(TC_BUSINESS)
          .withCity("Oakland"))
        .withWorkPhone("510-687-5963")
        .withName("Trucks-R-Us")
        .create(bundle)
        
      var accountDemoSample8119 = gw.api.databuilder.AccountBuilder
        .forHolder(createLocalFromAB("trucking_acct:106", accountHolders["ab:8001"], bundle))
        .withPublicId("trucking:8119")
        .withAccountNumber("ACC12236")
        .withSpecialHandling(new AccountSpecialHandlingBuilder())
        .create(bundle)

      var contactDemoSample2364 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Egertson")
        .withPublicId("demo_sample:2364")
        .withFirstName("Karen")
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("60 Dove Ct.")
          .withCountry(TC_US)
          .withPostalCode("91006")
          .withState(State.TC_CA)
          .withAddressType(TC_HOME)
          .withCity("Riverside"))
        .withWorkPhone("213-457-6540")
        .create(bundle)

      var claim = new gw.api.databuilder.ClaimBuilder()
        .withIncidentReport(false)
        .withWeather(TC_CL)
        .withAssignmentStatus(TC_ASSIGNED)
        .withLossDate(BaseDate.addDays(-5))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withStrategy(TC_AUTO_NORMAL)
        .withAssignmentDate(BaseDate.addDays(0))
        .withFlagged(TC_NEVERFLAGGED)
        .withLossLocation(new gw.api.databuilder.AddressBuilder()
          .withCountry(TC_US)
          .withPostalCode("28150")
          .withState(State.TC_NC)
          .withAddressType(TC_BUSINESS)
          .withCity("Charlotte"))
        .withLossCause(TC_FIXEDOBJCOLL)
        .withClaimNumber("345-53-343196")
        .withMainContactType(TC_EMPLOYEE)
        .withReportedByType(TC_EMPLOYEE)
        .withLossType(TC_AUTO)
        .withValidationLevel(TC_NEWLOSS)
        .withPolicy( new gw.api.databuilder.PolicyBuilder()
          .withExpirationDate(BaseDate.addDays(185))
          .withUnderwritingCo(TC_PARENT)
          .withVerified(true)
          .withOrigEffectiveDate(BaseDate.addDays(-2005))
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withUnderwritingGroup(TC_ACME_AUTO)
          .withEffectiveDate(BaseDate.addDays(-180))
          .withStatus(TC_INFORCE)
          .withPolicyNumber("74-123784")
          .withPublicId("trucking:7")
          .withTotalProperties(0)
          .withPolicyType(TC_BUSINESSAUTO)
          .withTotalVehicles(100)
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(1)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542800")
              .withPublicId("trucking:1000")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL004329"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(2)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542801")
              .withPublicId("trucking:1001")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL017933"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(3)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542802")
              .withPublicId("trucking:1002")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL027460"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(4)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542803")
              .withPublicId("trucking:1003")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL031593"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(5)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542804")
              .withPublicId("trucking:1004")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL040832"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(6)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542805")
              .withPublicId("trucking:1005")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL050122"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(7)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542806")
              .withPublicId("trucking:1006")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL060245"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(8)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542807")
              .withPublicId("trucking:1007")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL078066"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(9)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542808")
              .withPublicId("trucking:1008")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL083398"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(10)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542809")
              .withPublicId("trucking:1009")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL092722"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(11)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542810")
              .withPublicId("trucking:1010")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL105244"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(12)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542811")
              .withPublicId("trucking:1011")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL118643"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(13)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542812")
              .withPublicId("trucking:1012")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL123333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(14)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542813")
              .withPublicId("trucking:1013")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL133333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(15)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542814")
              .withPublicId("trucking:1014")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL143333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(16)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542815")
              .withPublicId("trucking:1015")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL153333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(17)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542816")
              .withPublicId("trucking:1016")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL163333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(18)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542817")
              .withPublicId("trucking:1017")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL173333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(19)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542818")
              .withPublicId("trucking:1018")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL183333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(20)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542819")
              .withPublicId("trucking:1019")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL193333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(21)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542820")
              .withPublicId("trucking:1020")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL203333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(22)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542821")
              .withPublicId("trucking:1021")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL213333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(23)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542822")
              .withPublicId("trucking:1022")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL223333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(24)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542823")
              .withPublicId("trucking:1023")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL233333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(25)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542824")
              .withPublicId("trucking:1024")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL243333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(26)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542825")
              .withPublicId("trucking:1025")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL253333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(27)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542826")
              .withPublicId("trucking:1026")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL263333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(28)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542827")
              .withPublicId("trucking:1027")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL273333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(29)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542828")
              .withPublicId("trucking:1028")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL283333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(30)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542829")
              .withPublicId("trucking:1029")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL293333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(31)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542830")
              .withPublicId("trucking:1030")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL303333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(32)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542831")
              .withPublicId("trucking:1031")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL313333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(33)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542832")
              .withPublicId("trucking:1032")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL323333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(34)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542833")
              .withPublicId("trucking:1033")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL333333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(35)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542834")
              .withPublicId("trucking:1034")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL343333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(36)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542835")
              .withPublicId("trucking:1035")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL353333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(37)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542836")
              .withPublicId("trucking:1036")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL363333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(38)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542837")
              .withPublicId("trucking:1037")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL373333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(39)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542838")
              .withPublicId("trucking:1038")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL383333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(40)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542839")
              .withPublicId("trucking:1039")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL393333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(41)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542840")
              .withPublicId("trucking:1040")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL403333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(42)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542841")
              .withPublicId("trucking:1041")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL413333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(43)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542842")
              .withPublicId("trucking:1042")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL423333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(44)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542843")
              .withPublicId("trucking:1043")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL433333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(45)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542844")
              .withPublicId("trucking:1044")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL443333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(46)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542845")
              .withPublicId("trucking:1045")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL453333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(47)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542846")
              .withPublicId("trucking:1046")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL463333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(48)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542847")
              .withPublicId("trucking:1047")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL473333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(49)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542848")
              .withPublicId("trucking:1048")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL483333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(50)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542849")
              .withPublicId("trucking:1049")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL493333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(51)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542850")
              .withPublicId("trucking:1050")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL503333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(52)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542851")
              .withPublicId("trucking:1051")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL513333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(53)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542852")
              .withPublicId("trucking:1052")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL523333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(54)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542853")
              .withPublicId("trucking:1053")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL533333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(55)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542854")
              .withPublicId("trucking:1054")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL543333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(56)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542855")
              .withPublicId("trucking:1055")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL553333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(57)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542856")
              .withPublicId("trucking:1056")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL563333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(58)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542857")
              .withPublicId("trucking:1057")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL573333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(59)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542858")
              .withPublicId("trucking:1058")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL583333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(60)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542859")
              .withPublicId("trucking:1059")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL593333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(61)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542860")
              .withPublicId("trucking:1060")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL603333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(62)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542861")
              .withPublicId("trucking:1061")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL613333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(63)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542862")
              .withPublicId("trucking:1062")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL623333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(64)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542863")
              .withPublicId("trucking:1063")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL633333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(65)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542864")
              .withPublicId("trucking:1064")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL643333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(66)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542865")
              .withPublicId("trucking:1065")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL653333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(67)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542866")
              .withPublicId("trucking:1066")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL663333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(68)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542867")
              .withPublicId("trucking:1067")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL673333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(69)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542868")
              .withPublicId("trucking:1068")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL683333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(70)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542869")
              .withPublicId("trucking:1069")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL693333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(71)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542870")
              .withPublicId("trucking:1070")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL703333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(72)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542871")
              .withPublicId("trucking:1071")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL713333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(73)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542872")
              .withPublicId("trucking:1072")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL723333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(74)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542873")
              .withPublicId("trucking:1073")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL733333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(75)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542874")
              .withPublicId("trucking:1074")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL743333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(76)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542875")
              .withPublicId("trucking:1075")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL753333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(77)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542876")
              .withPublicId("trucking:1076")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL763333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(78)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542877")
              .withPublicId("trucking:1077")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL773333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(79)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542878")
              .withPublicId("trucking:1078")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL783333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(80)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542879")
              .withPublicId("trucking:1079")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL793333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(81)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542880")
              .withPublicId("trucking:1080")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL803333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(82)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542881")
              .withPublicId("trucking:1081")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL813333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(83)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542882")
              .withPublicId("trucking:1082")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL823333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(84)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542883")
              .withPublicId("trucking:1083")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL833333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(85)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542884")
              .withPublicId("trucking:1084")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL843333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(86)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542885")
              .withPublicId("trucking:1085")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL853333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(87)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542886")
              .withPublicId("trucking:1086")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL863333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(88)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542887")
              .withPublicId("trucking:1087")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL873333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(89)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542888")
              .withPublicId("trucking:1088")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL883333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(90)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542889")
              .withPublicId("trucking:1089")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL893333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(91)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542890")
              .withPublicId("trucking:1090")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL903333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(92)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542891")
              .withPublicId("trucking:1091")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL913333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(93)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542892")
              .withPublicId("trucking:1092")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL923333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(94)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542893")
              .withPublicId("trucking:1093")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL933333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(95)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542894")
              .withPublicId("trucking:1094")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL943333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(96)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542895")
              .withPublicId("trucking:1095")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL953333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(97)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542896")
              .withPublicId("trucking:1096")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL963333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(98)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542897")
              .withPublicId("trucking:1097")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL973333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(99)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542898")
              .withPublicId("trucking:1098")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL983333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(100)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(2003)
              .withLicensePlate("4542899")
              .withPublicId("trucking:1099")
              .withMake("Mack")
              .withState(Jurisdiction.TC_CA)
              .withModel("CX603")
              .withVin("2JKF54823SL993333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BAOWNEDLIABILITYCOV)
              .withDeductible(1000bd.ofDefaultCurrency()))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withContactInRole(contactDemoSample10197, TC_AGENT)
          .withPolicyAccount(accountDemoSample8119)
          .withContactInRole(contactTrucking106, TC_INSURED))
        .withFault(100)
        .withAssignedGroup(findGroupByName("Eastern Auto Group"))
        .withJurisdictionState(TC_NC)
        .withSegment(TC_AUTO_LOW)
        .withReportedDate(BaseDate.addDays(-1))
        .withCoverageInQuestion(false)
        .withLOBCode(TC_BUSINESSAUTOLINE)
        .withPublicID("trucking:7")
        .withDescription("Vehicle overturned in tight traffic circle")
        .withState(TC_OPEN)
        .withAssignedUser(findUserByUserName("wgompers"))
        .withContactInRole(contactDemoSample2364, TC_REPORTER)
        .create(bundle)

      var claimInfoTrucking7 = new gw.api.databuilder.ClaimInfoBuilder()
        .withRootPublicId("trucking:7")
        .withClaimNumber("345-53-343196")
        .onClaim(claim)
        .create(bundle)

      var policyPeriodTrucking70007 = new gw.api.databuilder.PolicyPeriodBuilder()
        .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoTrucking7))
        .withPolicyPeriodType(TC_POLICY)
        .withExpirationDate(BaseDate.addDays(185))
        .withPolicyNumber("74-123784")
        .withPublicId("trucking:70007")
        .withPolicyType(TC_BUSINESSAUTO)
        .withEffectiveDate(BaseDate.addDays(-180))
        .create(bundle)
    }
    {
      var contactDemoSample30003 = new gw.api.databuilder.CompanyBuilder()
        .withPublicId("demo_sample:30003")
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("1247 Fair Oaks Ave")
          .withCountry(TC_US)
          .withPostalCode("91101")
          .withState(State.TC_CA)
          .withAddressType(TC_BUSINESS)
          .withCity("Pasadena"))
        .withWorkPhone("847-279-3401")
        .withName("ACME Rentals")
        .create(bundle)
        
      var accountDemoSample8119 = gw.api.databuilder.AccountBuilder
        .forHolder(createLocalFromAB("demo_acct:30003", accountHolders["ab:8002"], bundle))
        .withPublicId("demo_sample:8119")
        .withAccountNumber("ACC12237")
        .withSpecialHandling(new AccountSpecialHandlingBuilder())
        .create(bundle)

      var claim = new gw.api.databuilder.ClaimBuilder()
        .withIncidentReport(false)
        .withWeather(TC_CL)
        .withAssignmentStatus(TC_ASSIGNED)
        .withLossDate(BaseDate.addDays(-5))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withStrategy(TC_AUTO_NORMAL)
        .withAssignmentDate(BaseDate.addDays(0))
        .withFlagged(TC_NEVERFLAGGED)
        .withLossLocation(new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("3232 Brooklyn Drive")
          .withCountry(TC_US)
          .withPostalCode("60706")
          .withState(State.TC_IL)
          .withAddressType(TC_BUSINESS)
          .withCity("Norridge"))
        .withLossCause(TC_FIXEDOBJCOLL)
        .withClaimNumber("345-53-300196")
        .withMainContactType(TC_EMPLOYEE)
        .withReportedByType(TC_EMPLOYEE)
        .withLossType(TC_AUTO)
        .withValidationLevel(TC_NEWLOSS)
        .withPolicy( new gw.api.databuilder.PolicyBuilder()
          .withExpirationDate(BaseDate.addDays(185))
          .withUnderwritingCo(TC_PARENT)
          .withVerified(true)
          .withOrigEffectiveDate(BaseDate.addDays(-2005))
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withUnderwritingGroup(TC_ACME_AUTO)
          .withEffectiveDate(BaseDate.addDays(-180))
          .withStatus(TC_INFORCE)
          .withPolicyNumber("64-307784")
          .withPublicId("trucking:307")
          .withTotalProperties(0)
          .withPolicyType(TC_BUSINESSAUTO)
          .withTotalVehicles(3)
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(1)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1997)
              .withLicensePlate("8454211")
              .withPublicId("trucking:3001")
              .withMake("Volvo")
              .withState(Jurisdiction.TC_CA)
              .withModel("Aero")
              .withVin("2JKF54824SL103333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(2)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1997)
              .withLicensePlate("8454212")
              .withPublicId("trucking:3002")
              .withMake("Volvo")
              .withState(Jurisdiction.TC_CA)
              .withModel("Aero")
              .withVin("2JKF54824SL113333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
            .withRUNumber(3)
            .withVehicle( new gw.api.databuilder.VehicleBuilder()
              .withYear(1997)
              .withLicensePlate("8454213")
              .withPublicId("trucking:3003")
              .withMake("Volvo")
              .withState(Jurisdiction.TC_CA)
              .withModel("Aero")
              .withVin("2JKF54824SL123333"))
            .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
              .withIncidentLimit(30000bd.ofDefaultCurrency())
              .withType(TC_BACOLLISIONCOV)
              .withDeductible(1000bd.ofDefaultCurrency())))
          .withPolicyAccount(accountDemoSample8119)
          .withContactInRole(contactDemoSample30003, TC_INSURED))
        .withFault(100)
        .withAssignedGroup(findGroupByName("Eastern Auto Group"))
        .withJurisdictionState(TC_NC)
        .withSegment(TC_AUTO_LOW)
        .withReportedDate(BaseDate.addDays(-1))
        .withCoverageInQuestion(false)
        .withLOBCode(TC_BUSINESSAUTOLINE)
        .withPublicID("demo_sample:30002")
        .withDescription("Vehicle overturned in tight traffic circle")
        .withState(TC_OPEN)
        .withAssignedUser(findUserByUserName("wgompers"))
        .withContactInRole(contactDemoSample30003, TC_REPORTER)
        .create(bundle)

      var claimInfoDemoSample30002 = new gw.api.databuilder.ClaimInfoBuilder()
        .withRootPublicId("demo_sample:30002")
        .withClaimNumber("345-53-300196")
        .onClaim(claim)
        .create(bundle)
    }
  }
}
