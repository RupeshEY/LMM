package gw.sampledata
uses gw.sampledata.SampleDataBase
uses gw.pl.persistence.core.Bundle

@Export
class SampleAllenRobertsonClaim extends SampleDataBase {

  construct(inCache : SampleDataCache) {
    super(inCache)
  }

  override property get Description() : String {
    return "Allen Robertson Personal Auto Claim and associated Contacts, Policy, Exposures, Notes, ClaimContacts, Activities and Financials"
  }
   
  override function testSampleData(bundle : Bundle) {
    create(bundle)
  }
     
  function create(bundle : Bundle) : ClaimInfo {
    var documentDemoSample2 = new gw.api.databuilder.DocumentBuilder()
      .withDMS(false)
      .withObsolete(false)
      .withStatus(TC_FINAL)
      .withInbound(false)
      .withDateModified(BaseDate.addDays(0))
      .withName("AutoAccident3OCQYM0000.tif")
      .withAuthor("ClaimCenter")
      .create(bundle)

    var documentDemoSample3 = new gw.api.databuilder.DocumentBuilder()
      .withDMS(false)
      .withObsolete(false)
      .withStatus(TC_FINAL)
      .withInbound(false)
      .withDateModified(BaseDate.addDays(0))
      .withName("RegistrationCheckDMV3OCQYM0001.tif")
      .withAuthor("ClaimCenter")
      .create(bundle)

    var documentDemoSample4 = new gw.api.databuilder.DocumentBuilder()
      .withType(TC_ISO)
      .withDMS(false)
      .withObsolete(false)
      .withStatus(TC_FINAL)
      .withInbound(false)
      .withDateModified(BaseDate.addDays(0))
      .withName("ISOMatchReport-2007-02-01-19-20-20.xml")
      .withAuthor("ClaimCenter")
      .create(bundle)

    var contactDemoSample3023 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Newton")
      .withPublicId("demo_sample:3023")
      .withFirstName("Ray")
      .withPrimaryPhone(TC_WORK)
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("287 Kensington Rd. #1A")
        .withCountry(TC_US)
        .withPostalCode("91145")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("South Pasadena"))
      .withWorkPhone("818-446-1206")
      .withTaxID("123-45-6789")
      .create(bundle)

    var contactDemoSample10 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Robertson")
      .withPublicId("demo_sample:10")
      .withFirstName("Allen")
      .withPrimaryPhone(TC_WORK)
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("4263 Live Oak Blvd.")
        .withCountry(TC_US)
        .withPostalCode("91101")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("San Gabriel"))
      .withWorkPhone("213-475-9465")
      .create(bundle)

    var contactDemoSample10012 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Egertson")
      .withPublicId("demo_sample:10012")
      .withFirstName("Karen")
      .withPrimaryPhone(TC_WORK)
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("908 Angels Landing Rd.")
        .withCountry(TC_US)
        .withPostalCode("91352")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("Anaheim"))
      .withWorkPhone("213-457-6378")
      .create(bundle)

    var contactDemoSample503 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Henderson")
      .withPublicId("demo_sample:503")
      .withFirstName("Bill")
      .withPrimaryPhone(TC_WORK)
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("345 Fir Lane")
        .withCountry(TC_US)
        .withPostalCode("91352")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("La Canada"))
      .withWorkPhone("213-457-6378")
      .create(bundle)

    var contactDemoSample502 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Robertson")
      .withPublicId("demo_sample:502")
      .withFirstName("Dan")
      .withPrimaryPhone(TC_WORK)
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("1243 Fair Oaks Ave")
        .withCountry(TC_US)
        .withPostalCode("91101")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("Pasadena"))
      .withWorkPhone("619-275-2346")
      .create(bundle)

    var claim = new gw.api.databuilder.ClaimBuilder()
      .withIncidentReport(false)
      .withWeather(TC_CL)
      .withAssignmentStatus(TC_ASSIGNED)
      .withLossDate(BaseDate.addDays(-115))
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStrategy(TC_AUTO_FAST)
      .withAssignmentDate(BaseDate.addDays(0))
      .withFlagged(TC_NEVERFLAGGED)
      .withLossLocation(new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("345 Fir Lane")
        .withCountry(TC_US)
        .withPostalCode("91352")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("La Canada"))
      .withLossCause(TC_VEHCOLLISION)
      .withClaimNumber("235-53-365871")
      .withMainContactType(TC_SELF)
      .withReportedByType(TC_SELF)
      .withLossType(TC_AUTO)
      .withValidationLevel(TC_NEWLOSS)
      .withPolicy( new gw.api.databuilder.PolicyBuilder()
        .withExpirationDate(BaseDate.addDays(274))
        .withUnderwritingCo(TC_PARENT)
        .withVerified(true)
        .withOrigEffectiveDate(BaseDate.addDays(-3266))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withUnderwritingGroup(TC_ACME_AUTO)
        .withEffectiveDate(BaseDate.addDays(-120))
        .withStatus(TC_INFORCE)
        .withPolicyNumber("54-253465")
        .withPublicId("demo_sample:9")
        .withTotalProperties(0)
        .withPolicyType(TC_PERSONALAUTO)
        .withTotalVehicles(2)
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(1)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(1997)
            .withLicensePlate("1HGJ465")
            .withPublicId("demo_sample:28")
            .withMake("Saturn")
            .withState(Jurisdiction.TC_CA)
            .withModel("SL")
            .withVin("1GV234TV347463345")))
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(2)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(1996)
            .withLicensePlate("2GDH967")
            .withPublicId("demo_sample:30")
            .withMake("Toyota")
            .withState(Jurisdiction.TC_CA)
            .withModel("Corolla")
            .withVin("3DGF78575GD892534")))
        .withContactInRole(contactDemoSample10, TC_INSURED)
        .withContactInRole(contactDemoSample10012, TC_AGENT)
        .withCoveredParty(contactDemoSample502, 1, null)
        .withContactInRole(contactDemoSample503, TC_EXCLUDEDPARTY))
      .withFault(80)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withJurisdictionState(TC_CA)
      .withSegment(TC_AUTO_LOW)
      .withReportedDate(BaseDate.addDays(-115))
      .withCoverageInQuestion(false)
      .withLOBCode(TC_PERSONALAUTOLINE)
      .withPublicId("demo_sample:2")
      .withDescription("Car plowed into a fire hydrant")
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .withMetroReport( new gw.api.databuilder.MetroReportBuilder()
        .withMetroReportType(TC_A)
        .withDoc(documentDemoSample2)
        .withAgentState(State.TC_CA)
        .withAgentCity("South Pasadena")
        .withStatus(TC_RECEIVED))
      .withMetroReport( new gw.api.databuilder.MetroReportBuilder()
        .withMetroReportType(TC_R)
        .withDoc(documentDemoSample3)
        .withAgentState(State.TC_CA)
        .withAgentCity("South Pasadena")
        .withStatus(TC_RECEIVED))
      .withDocument(documentDemoSample2)
      .withDocument(documentDemoSample3)
      .withDocument(documentDemoSample4)
      .withContactInRole(contactDemoSample3023, TC_MAINCONTACT)
      .withContactInRole(contactDemoSample3023, TC_REPORTER)
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic(TC_GENERAL)
        .withAuthoringDate(BaseDate.addDays(-115))
        .withSubject("Claim update")
        .withAuthor(findUserByUserName("aapplegate"))
        .withBody("After the claim was initially reported, I have not heard anything further from the claimant despite repeated calls and messages.  Plan is to check back in 90 days.  If no response by then, I will just close the claim."))
      .withActivity( new gw.api.databuilder.ActivityBuilder()
        .withAssignmentStatus(TC_ASSIGNED)
        .withAssignmentDate(BaseDate.addDays(-90))
        .withEscalated(false)
        .withRecurring(false)
        .withImportance(TC_NOTONCALENDAR)
        .withMandatory(false)
        .withPriority(TC_NORMAL)
        .withActivityClass(TC_TASK)
        .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
        .withType(TC_GENERAL)
        .withStatus(TC_OPEN)
        .withAutoGenerated(true)
        .withLastViewedDate(BaseDate.addDays(-2415))
        .withActivityPattern(findActivityPatternByCode("90_day_diary"))
        .withSubject("90 day diary")
        .withAssignedUser(findUserByUserName("aapplegate"))
        .withTargetDate(BaseDate.addDays(0)))
      .withActivity( new gw.api.databuilder.ActivityBuilder()
        .withAssignmentStatus(TC_ASSIGNED)
        .withAssignmentDate(BaseDate.addDays(-9))
        .withEscalated(false)
        .withRecurring(false)
        .withImportance(TC_NOTONCALENDAR)
        .withMandatory(true)
        .withPriority(TC_HIGH)
        .withActivityClass(TC_TASK)
        .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
        .withType(TC_GENERAL)
        .withEscalationDate(BaseDate.addDays(5))
        .withStatus(TC_COMPLETE)
        .withAutoGenerated(true)
        .withLastViewedDate(BaseDate.addDays(-2415))
        .withActivityPattern(findActivityPatternByCode("coverage"))
        .withSubject("Check coverage")
        .withAssignedUser(findUserByUserName("aapplegate"))
        .withTargetDate(BaseDate.addDays(0)))
      .withActivity( new gw.api.databuilder.ActivityBuilder()
        .withAssignmentStatus(TC_ASSIGNED)
        .withAssignmentDate(BaseDate.addDays(-9))
        .withEscalated(false)
        .withRecurring(false)
        .withImportance(TC_NOTONCALENDAR)
        .withMandatory(true)
        .withPriority(TC_HIGH)
        .withActivityClass(TC_TASK)
        .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
        .withType(TC_GENERAL)
        .withEscalationDate(BaseDate.addDays(11))
        .withStatus(TC_COMPLETE)
        .withAutoGenerated(true)
        .withLastViewedDate(BaseDate.addDays(-2415))
        .withActivityPattern(findActivityPatternByCode("contact_insured"))
        .withSubject("Contact insured")
        .withAssignedUser(findUserByUserName("aapplegate"))
        .withTargetDate(BaseDate.addDays(6)))
      .withActivity( new gw.api.databuilder.ActivityBuilder()
        .withAssignmentStatus(TC_ASSIGNED)
        .withAssignmentDate(BaseDate.addDays(-9))
        .withEscalated(false)
        .withRecurring(false)
        .withImportance(TC_NOTONCALENDAR)
        .withMandatory(true)
        .withPriority(TC_NORMAL)
        .withActivityClass(TC_TASK)
        .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
        .withType(TC_GENERAL)
        .withEscalationDate(BaseDate.addDays(6))
        .withStatus(TC_COMPLETE)
        .withAutoGenerated(true)
        .withLastViewedDate(BaseDate.addDays(-2415))
        .withActivityPattern(findActivityPatternByCode("new_mail"))
        .withSubject("Review new mail")
        .withAssignedUser(findUserByUserName("aapplegate"))
        .withTargetDate(BaseDate.addDays(1)))
      .withActivity( new gw.api.databuilder.ActivityBuilder()
        .withAssignmentStatus(TC_ASSIGNED)
        .withAssignmentDate(BaseDate.addDays(-9))
        .withEscalated(false)
        .withRecurring(false)
        .withImportance(TC_NOTONCALENDAR)
        .withMandatory(false)
        .withPriority(TC_NORMAL)
        .withActivityClass(TC_TASK)
        .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
        .withType(TC_GENERAL)
        .withEscalationDate(BaseDate.addDays(6))
        .withStatus(TC_COMPLETE)
        .withAutoGenerated(true)
        .withLastViewedDate(BaseDate.addDays(-2415))
        .withActivityPattern(findActivityPatternByCode("60_day_diary"))
        .withSubject("60 day review")
        .withAssignedUser(findUserByUserName("ssmith"))
        .withTargetDate(BaseDate.addDays(1)))
      .withActivity( new gw.api.databuilder.ActivityBuilder()
        .withAssignmentStatus(TC_ASSIGNED)
        .withAssignmentDate(BaseDate.addDays(-9))
        .withEscalated(false)
        .withRecurring(false)
        .withImportance(TC_NOTONCALENDAR)
        .withMandatory(true)
        .withPriority(TC_HIGH)
        .withActivityClass(TC_TASK)
        .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
        .withType(TC_GENERAL)
        .withEscalationDate(BaseDate.addDays(6))
        .withStatus(TC_COMPLETE)
        .withAutoGenerated(true)
        .withLastViewedDate(BaseDate.addDays(-2415))
        .withActivityPattern(findActivityPatternByCode("general_reminder"))
        .withSubject("Payment authority request")
        .withAssignedUser(findUserByUserName("ssmith"))
        .withTargetDate(BaseDate.addDays(1)))
        .withISOKnown(true)
        .withISOSendDate( BaseDate.addDays(-5) )
        .withISOReceiveDate( BaseDate.addDays(-3))
        .withISOStatus(ISOStatus.TC_SENT)
        .withISOMatchReport( new gw.api.databuilder.ClaimISOMatchReportBuilder()
          .withInsurerAddressPostalCode("94403")
          .withReceivedDate(BaseDate.addDays(0))
          .withInsurerAddressState("CA")
          .withInsurerAddressCity("SAN MATEO")
          .withInsurerAddress1("2121 S EL CAMINO REAL")
          .withInsuringCompany("GUIDEWIRE")
          .withPolicyNumber("541234565")
          .withMatchReasons("N,A")
          .withDateOfLoss(BaseDate.addDays(0))
          .withPolicyType("PAPP")
          .withClaimNumber("2355336587025")
          .withInsurerPhone("+1-650-3579100"))
      .create(bundle)

    var claimInfoDemoSample2 = new gw.api.databuilder.ClaimInfoBuilder()
      .withRootPublicId("demo_sample:2")
      .withClaimNumber("235-53-365871")
      .onClaim(claim)
      .create(bundle)

    var policyPeriodDemoSample70009 = new gw.api.databuilder.PolicyPeriodBuilder()
      .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoDemoSample2))
      .withPolicyPeriodType(TC_POLICY)
      .withExpirationDate(BaseDate.addDays(274))
      .withPolicyNumber("54-253465")
      .withPublicId("demo_sample:70009")
      .withPolicyType(TC_PERSONALAUTO)
      .withEffectiveDate(BaseDate.addDays(-90))
      .create(bundle)

    var exposureDemoSample70001 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_INSURED)
      .withExposureType(TC_VEHICLEDAMAGE)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_AUTO_FAST)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_PALIABILITYCOV)
      .withSegment(TC_AUTO_LOW)
      .withClaimantType(TC_VEH_OTHER_OWNER)
      .withClaimOrder(1)
      .withPublicId("demo_sample:70001")
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim)
      .withCoverageSubType(TC_PALIABILITYCOV_VD)
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSeverity(TC_MINOR)
        .withDriverRelation(TC_SELF)
        .withDescription("Minor damage")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(1992)
          .withLicensePlate("1HGJ465")
          .withPublicId("demo_sample:10")
          .withMake("Hyundai")
          .withState(Jurisdiction.TC_CA)
          .withModel("Excel")
          .withVin("1GV234TV347463945"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample3023, TC_DRIVER))
      .withContactInRole(contactDemoSample3023, TC_CLAIMANT)
      .create(bundle)

    var exposureDemoSample11001 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_INSURED)
      .withExposureType(TC_PERSONALPROPERTYDAMAGE)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_CONTENTS_FAST)
      .withBreakIn(true)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_BOPPERSONALEFFECTS)
      .withSegment(TC_CONTENTS_LOW)
      .withClaimantType(TC_INSURED)
      .withLocked(false)
      .withClaimOrder(2)
      .withPublicId("demo_sample:11001")
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim)
      .withCoverageSubType(TC_BOPPERSONALEFFECTS)
      .withIncident( new gw.api.databuilder.MobilePropertyIncidentBuilder()
        .withSeverity(TC_MINOR)
        .withDescription("The car stereo was stolen after the accident"))
      .withContactInRole(contactDemoSample3023, TC_CLAIMANT)
      .create(bundle)
      
    return claimInfoDemoSample2
  }
}
