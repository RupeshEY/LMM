package gw.vendormanagement.servicerequeststate

/**
 * A definition of an operation that can be performed on a Service Request Invoice.
 */
@Export
class ServiceRequestInvoiceOperationDefinition {

    /**
     * a block that returns whether the operation should be available based on the current state of the service request invoice<br>
     * Note: all operations are automatically unavailable on a service request that has been promoted, regardless of the value
     * of this expression.
     * Note: in the current implementation, OperationContext is always null
     */
    var availableExpression : block(i: ServiceRequestInvoice, context : OperationContext = null) : boolean as AvailableExpression = \sr, context -> true

    /**
     * a block that returns whether the operation should be available to specialists when AvailableExpression also evaluates to
     * true; an operation is never available when AvailableExpression is false, regardless of the value of this expression;
     * a specialist will usually perform operations through the ServiceRequestAPI webservice
     * Note: in the current implementation, OperationContext is always null
     */
    var availableToSpecialistExpression : block(sr: ServiceRequestInvoice, context : OperationContext = null) : boolean as AvailableToSpecialistExpression = \sr, context -> true

    /** a block that returns the ServiceRequestInvoiceStatus to transition to; returns the existing value if it should not change */
    var newInvoiceStatusExpression : block(i: ServiceRequestInvoice, context : OperationContext) : ServiceRequestInvoiceStatus as NewInvoiceStatusExpression = \sr, context -> sr.Status

    /** an optional block to execute when performing this operation */
    var actionExpression : block(i: ServiceRequestInvoice, context: OperationContext) as ActionExpression = \ i,c -> {}

    /** a block that returns the message that will appear in the service request history event generated by invoice.performOperation */
    var descriptionExpression : block(i: ServiceRequestInvoice, context: OperationContext) : String as DescriptionExpression = \ i,c -> c.Operation.DisplayName
    
    /**
     * A set of fields that are available for use by certain operations. Each ServiceRequestOperation defines which context fields
     * it expects, and callers of performOperation are expected to pass a context with the fields for that operation populated.
     * <b>Important: The values provided through the context are for read-only use only -- action expressions should not modify them.</b>
     */
    static class OperationContext {
      /**
       * The operation being performed. This field is set automatically; it should not be
       * set on the context passed to performOperation and it should not be declared as required by any ServiceRequestOperation.
       */
      var _operation: ServiceRequestOperation as Operation
      /**
       * True if the operation is being performed by a specialist. This field is set automatically; it should not be
       * set on the context passed to performOperation and it should not be declared as required by any ServiceRequestOperation.
       */
      var _performedBySpecialist: Boolean as PerformedBySpecialist

      var _performedBySystem:     Boolean as PerformedBySystem

      var _reason: String as Reason

      construct() {
      }

      construct(originalContext : OperationContext) {
        for (field in OperationContext.Type.TypeInfo.DeclaredProperties) {
          var accessor = field.Accessor
          accessor.setValue(this, accessor.getValue(originalContext))
        }
      }
    }
}
