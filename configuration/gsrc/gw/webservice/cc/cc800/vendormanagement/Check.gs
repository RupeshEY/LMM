package gw.webservice.cc.cc800.vendormanagement

uses gw.xml.ws.annotation.WsiExportable
uses java.math.BigDecimal
uses java.util.Date
uses java.util.ArrayList
uses java.util.List

/**
 * Contains information about a check used to pay an invoice. An instance of this class is
 * created and returned for every invoice that has been paid, so it should have
 * only a minimal set of fields about the check.
 */
@Export
@WsiExportable("http://guidewire.com/cc/ws/gw/webservice/cc/cc800/vendormanagement/Check")
final class Check {

  /**
   * A unique number generated by ClaimCenter to identify this check.
   */
  var _checkNumber : String as CheckNumber

  /**
   * The check gross amount.
   * Note: it uses the Service Request currency
   */
  var _grossAmount : BigDecimal as GrossAmount

  /**
   * The check net amount.
   * Note: it uses the Service Request currency
   */
  var _netAmount : BigDecimal as NetAmount

  /**
   * The date this check is scheduled to be sent.
   */
  var _scheduledSendDate : Date as ScheduledSendDate

  /**
   * The current check status.
   */
  var _status : typekey.TransactionStatus as Status

  /**
   * The name of the status in the current locale.
   */
  var _statusName : String as StatusName

  /**
   * The current check status.
   */
  var _relatedInvoices : List<InvoiceView> as RelatedInvoices

  construct() {}

  construct(check : Check) {
    CheckNumber = check.CheckNumber
    GrossAmount = check.GrossAmount.Amount
    NetAmount = check.NetAmount.Amount
    ScheduledSendDate = check.ScheduledSendDate
    Status = check.Status
    StatusName = check.Status.DisplayName
    if (check.ServiceRequestInvoices.HasElements) {
      RelatedInvoices = new ArrayList<InvoiceView>()
      for (i in check.ServiceRequestInvoices) {
        RelatedInvoices.add(new InvoiceView (i))
      }
    }
  }
}