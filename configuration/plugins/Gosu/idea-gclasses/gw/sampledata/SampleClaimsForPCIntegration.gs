package gw.sampledata

uses gw.api.database.Query
uses gw.api.databuilder.CompanyBuilder
uses gw.api.databuilder.DocumentBuilder
uses gw.api.databuilder.PersonBuilder
uses gw.api.databuilder.SubroAdversePartyBuilder
uses gw.api.databuilder.SubrogationBuilder
uses gw.api.databuilder.SubrogationSummaryBuilder
uses gw.api.util.CurrencyUtil
uses gw.api.util.DateUtil
uses gw.pl.persistence.core.Bundle

uses java.util.Date
uses gw.api.databuilder.WorkStatusBuilder
uses gw.api.financials.CurrencyAmount

@Export
class SampleClaimsForPCIntegration extends SampleDataBase {

  construct(inCache : SampleDataCache) {
    super(inCache)
  }

  override property get Description() : String {
    return "Personal Auto Claims and associated Contacts, Policies, Exposures, Notes, ClaimContacts, Activities and Financials for PC integration"
  }
    
  override function testSampleData(bundle : Bundle) {
    create(bundle)
  }
     
  function create(bundle : Bundle)  {
    var lossDateBaseDate = Date.Today.addYears(-2)
    createClaim1(bundle, lossDateBaseDate)
    createClaim2WithFinancials(bundle, lossDateBaseDate)
    createClaim3(bundle, lossDateBaseDate)
    createClaim4WithFinancials(bundle, lossDateBaseDate)
    createClaim5WithFinancials(bundle, lossDateBaseDate)
    createClaim6WC(bundle, lossDateBaseDate)
  }   

  function createClaim1(bundle : Bundle, lossDateBaseDate : Date) {
    var addressSample = new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("0000 Bridgepointe Parkway")
        .withCountry(TC_US)
        .withPostalCode("94404")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("San Mateo")
        .create(bundle)

    var contactDemoSample3038 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Kinman")
      .withFirstName("Bill")
      .withPrimaryPhone(TC_WORK)
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("0000 Bridgepointe Parkway")
        .withCountry(TC_US)
        .withPostalCode("94404")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("San Mateo"))
      .withWorkPhone("818-446-1206")
      .withTaxID("123-45-6789")
      .create(bundle)

    var claim = new gw.api.databuilder.ClaimBuilder()
      .withIncidentReport(false)
      .withWeather(TC_CL)
      .withAssignmentStatus(TC_ASSIGNED)
      .withLossDate(lossDateBaseDate.addMonths(6))
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStrategy(TC_AUTO_FAST)
      .withAssignmentDate(BaseDate.addDays(0))
      .withFlagged(TC_NEVERFLAGGED)
      .withLossLocation(new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("345 Fir Lane")
        .withCountry(TC_US)
        .withPostalCode("91352")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("La Canada"))
      .withLossCause(TC_VEHCOLLISION)
      .withClaimNumber("235-53-425888")
      .withMainContactType(TC_SELF)
      .withReportedByType(TC_SELF)
      .withLossType(TC_AUTO)
      .withValidationLevel(TC_NEWLOSS)
      .withPolicy( new gw.api.databuilder.PolicyBuilder()
        .withExpirationDate(BaseDate.addDays(274))
        .withUnderwritingCo(TC_PARENT)
        .withVerified(true)
        .withOrigEffectiveDate(BaseDate.addDays(-3266))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withUnderwritingGroup(TC_ACME_AUTO)
        .withEffectiveDate(BaseDate.addDays(-90))
        .withStatus(TC_INFORCE)
        .withPolicyNumber("4775949863-01")
        .withTotalProperties(0)
        .withPolicyType(TC_PERSONALAUTO)
        .withTotalVehicles(2)
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(1)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(1997)
            .withLicensePlate("1HGJ465")
            .withMake("Saturn")
            .withState(Jurisdiction.TC_CA)
            .withModel("SL")
            .withVin("1GV234TV347463377")))
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(2)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(1996)
            .withLicensePlate("2GDH967")
            .withMake("Toyota")
            .withState(Jurisdiction.TC_CA)
            .withModel("Corolla")
            .withVin("3DGF78575GD892577")))
        .withContactInRole(contactDemoSample3038, TC_INSURED))
      .withFault(80)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withJurisdictionState(TC_CA)
      .withSegment(TC_AUTO_LOW)
      .withReportedDate(BaseDate.addDays(-115))
      .withCoverageInQuestion(false)
      .withLOBCode(TC_PERSONALAUTOLINE)
      .withDescription("Car plowed into a fire hydrant")
      .closed()
      .withCloseDate(BaseDate.addDays(-1))
      .withAssignedUser(findUserByUserName("aapplegate"))
      .withContactInRole(contactDemoSample3038, TC_MAINCONTACT)
      .withContactInRole(contactDemoSample3038, TC_REPORTER)
      .withPermissionRequired(ClaimSecurityType.TC_UNSECUREDCLAIM)
      .create(bundle)

    var claimInfoDemoSample22 = new gw.api.databuilder.ClaimInfoBuilder()
      .withRootPublicId("demo_sample:22")
      .withClaimNumber("235-53-425888")
      .onClaim(claim)
      .create(bundle)

    var policyPeriodDemoSample70015 = new gw.api.databuilder.PolicyPeriodBuilder()
      .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoDemoSample22))
      .withPolicyPeriodType(TC_POLICY)
      .withExpirationDate(BaseDate.addDays(274))
      .withPolicyNumber("4775949863-01")
      .withPolicyType(TC_PERSONALAUTO)
      .withEffectiveDate(BaseDate.addDays(-90))
      .create(bundle)

    var exposureDemoSample70021 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_INSURED)
      .withExposureType(TC_VEHICLEDAMAGE)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_AUTO_FAST)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_PALIABILITYCOV)
      .withSegment(TC_AUTO_LOW)
      .withClaimantType(TC_VEH_OTHER_OWNER)
      .withClaimOrder(1)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim)
      .withCoverageSubType(TC_PALIABILITYCOV_VD)
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSeverity(TC_MINOR)
        .withDriverRelation(TC_SELF)
        .withDescription("Minor damage")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(1992)
          .withLicensePlate("1HGJ465")
          .withMake("Hyundai")
          .withState(Jurisdiction.TC_CA)
          .withModel("Excel")
          .withVin("1GV234TV347463988"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample3038, TC_DRIVER))
      .withContactInRole(contactDemoSample3038, TC_CLAIMANT)
      .create(bundle)

    var exposureDemoSample11002 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_INSURED)
      .withExposureType(TC_PERSONALPROPERTYDAMAGE)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_CONTENTS_FAST)
      .withBreakIn(true)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_BOPPERSONALEFFECTS)
      .withSegment(TC_CONTENTS_LOW)
      .withClaimantType(TC_INSURED)
      .withLocked(false)
      .withClaimOrder(2)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim)
      .withCoverageSubType(TC_BOPPERSONALEFFECTS)
      .withIncident( new gw.api.databuilder.MobilePropertyIncidentBuilder()
        .withSeverity(TC_MINOR)
        .withDescription("The car stereo was stolen after the accident"))
      .withContactInRole(contactDemoSample3038, TC_CLAIMANT)
      .create(bundle)
  }

  function createClaim2WithFinancials(bundle : Bundle, lossDateBaseDate : Date) {
    var billKinman2 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Kinman")
      .withFirstName("Bill")
      .withPrimaryPhone(TC_WORK)
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("0000 Bridgepointe Parkway")
        .withCountry(TC_US)
        .withPostalCode("94404")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("San Mateo"))
      .withWorkPhone("818-446-1206")
      .withTaxID("123-45-6789")
      .create(bundle)

    var coverageDemoSample10 = new gw.api.databuilder.VehicleCoverageBuilder()
        .withIncidentLimit(300000bd.ofDefaultCurrency())
        .withType(TC_PALIABILITYCOV)
        .withExposureLimit(150000bd.ofDefaultCurrency())
        .create(bundle)

    var contactDemoSample10020 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Egertson")
      .withFirstName("Karen")
      .withPrimaryPhone(TC_WORK)
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("908 Angels Landing Rd.")
        .withCountry(TC_US)
        .withPostalCode("91352")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("Anaheim"))
      .withWorkPhone("213-457-6378")
      .create(bundle)

    var claim1 = new gw.api.databuilder.ClaimBuilder()
      .withIncidentReport(false)
      .withWeather(TC_CL)
      .withAssignmentStatus(TC_ASSIGNED)
      .withLossDate(lossDateBaseDate.addMonths(16))
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStrategy(TC_AUTO_NORMAL)
      .withAssignmentDate(BaseDate.addDays(0))
      .withFlagged(TC_NEVERFLAGGED)
      .withLossLocation(new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("506 2nd Ave.")
        .withCountry(TC_US)
        .withPostalCode("92101")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("San Diego"))
      .withLossCause(TC_VEHCOLLISION)
      .withClaimNumber("235-53-425889")
      .withMainContactType(TC_SELF)
      .withReportedByType(TC_OTHER)
      .withLossType(TC_AUTO)
      .withValidationLevel(TC_NEWLOSS)
      .withPolicy( new gw.api.databuilder.PolicyBuilder()
        .withExpirationDate(BaseDate.addDays(74))
        .withUnderwritingCo(TC_PARENT)
        .withVerified(true)
        .withOrigEffectiveDate(BaseDate.addDays(-3266))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withUnderwritingGroup(TC_ACME_AUTO)
        .withEffectiveDate(BaseDate.addDays(-290))
        .withStatus(TC_INFORCE)
        .withPolicyNumber("4775949863-01")
        .withTotalProperties(0)
        .withPolicyType(TC_PERSONALAUTO)
        .withTotalVehicles(1)
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(1)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(2002)
            .withLicensePlate("2GDH967")
            .withMake("Pontiac")
            .withState(Jurisdiction.TC_CA)
            .withModel("Grand Prix")
            .withVin("3DGF78575GD891525"))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(20000bd.ofDefaultCurrency())
            .withType(TC_PACOLLISIONCOV)
            .withDeductible(0bd.ofDefaultCurrency()))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(20000bd.ofDefaultCurrency())
            .withType(TC_PACOMPREHENSIVECOV)
            .withDeductible(0bd.ofDefaultCurrency()))
          .withCoverage(coverageDemoSample10)
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(1000bd.ofDefaultCurrency())
            .withType(TC_PAMEDPAYCOV)))
        .withContactInRole(billKinman2, TC_INSURED))
      .withFault(80)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withJurisdictionState(TC_CA)
      .withSegment(TC_AUTO_MID)
      .withReportedDate(BaseDate.addDays(-3))
      .withCoverageInQuestion(false)
      .withLOBCode(TC_PERSONALAUTOLINE)
      .withDescription("Insured swerved to avoid an animal, struck claimant's car head-on")
      .closed()
      .withCloseDate(BaseDate.addDays(-1))
      .withAssignedUser(findUserByUserName("aapplegate"))
      .withContactInRole(billKinman2, TC_CHECKPAYEE)
      .withContactInRole(billKinman2, TC_MAINCONTACT)
      .withContactInRole(billKinman2, TC_REPORTER)
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic(TC_GENERAL)
        .withAuthoringDate(BaseDate.addDays(-2))
        .withSubject("Initial phone call with insured")
        .withAuthor(findUserByUserName("cclark"))
        .withBody("Insured claims he swerved to avoid a dog in the road, then hit an oncoming car in the other lane."))
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic(TC_GENERAL)
        .withAuthoringDate(BaseDate.addDays(-1))
        .withSubject("Initial phone call with claimant")
        .withAuthor(findUserByUserName("aapplegate"))
        .withBody("Spoke to claimant - he was hospitalized due to a fracture in a bone behind his eye and is under observation, and may need to undergo surgery.  Because claimant does not have other insurance, authorized a check to cover vehicle towing and initial hospital stay."))
      .withActivity( new gw.api.databuilder.ActivityBuilder()
        .withAssignmentStatus(TC_ASSIGNED)
        .withAssignmentDate(BaseDate.addDays(-3))
        .withEscalated(false)
        .withRecurring(false)
        .withImportance(TC_NOTONCALENDAR)
        .withCloseDate(BaseDate.addDays(-1))
        .withMandatory(true)
        .withPriority(TC_HIGH)
        .withActivityClass(TC_TASK)
        .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
        .withType(TC_GENERAL)
        .withEscalationDate(BaseDate.addDays(4))
        .withStatus(TC_COMPLETE)
        .withAutoGenerated(true)
        .withLastViewedDate(BaseDate.addDays(-2415))
        .withActivityPattern(findActivityPatternByCode("contact_insured"))
        .withSubject("Contact insured")
        .withAssignedUser(findUserByUserName("aapplegate"))
        .withTargetDate(BaseDate.addDays(-1)))
      .withPermissionRequired(ClaimSecurityType.TC_SENSITIVECLAIM)
      .create(bundle)

    var claimInfoDemoSample23 = new gw.api.databuilder.ClaimInfoBuilder()
      .withRootPublicId("demo_sample:23")
      .withClaimNumber("235-53-425889")
      .onClaim(claim1)
      .create(bundle)

    var policyPeriodDemoSample70016 = new gw.api.databuilder.PolicyPeriodBuilder()
      .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoDemoSample23))
      .withPolicyPeriodType(TC_POLICY)
      .withExpirationDate(BaseDate.addDays(54))
      .withPolicyNumber("4775949863-01")
      .withPolicyType(TC_PERSONALAUTO)
      .withEffectiveDate(BaseDate.addDays(-290))
      .create(bundle)

    var aggregateLimitDemoSample90007 = new gw.api.databuilder.AggregateLimitBuilder()
      .withLimitCurrencyAmount(300000bd.ofDefaultCurrency())
      .withCoverageLine( new gw.api.databuilder.CoverageLineLimitBuilder()
        .withCoverageLine( new gw.api.databuilder.CoverageLineBuilder()
          .withExposureUnitNumber(1)
          .withCoverageType(TC_PALIABILITYCOV)
          .withCoverageSubtype(TC_VEHICLECOVERAGE)
          .withCoverage(coverageDemoSample10)
          .onPolicyPeriod(policyPeriodDemoSample70016)) )
      .withLimitType(AggregateLimitType.TC_NONE)
      .onPolicyPeriod(policyPeriodDemoSample70016)
      .create(bundle)

    var exposureDemoSample11005 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_INSURED)
      .withExposureType(TC_VEHICLEDAMAGE)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_AUTO_FAST)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_PACOLLISIONCOV)
      .withSegment(TC_AUTO_LOW)
      .withClaimantType(TC_INSURED)
      .withClaimOrder(1)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim1)
      .withCoverageSubType(TC_PACOLLISIONCOV)
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSpeed(40)
        .withSeverity(TC_MODERATE_AUTO)
        .withCollisionPoint(TC_FRONT)
        .withDriverRelation(TC_SELF)
        .withDescription("Damage to bumper and front panels")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(1993)
          .withLicensePlate("7FDG745")
          .withMake("Mercury")
          .withState(Jurisdiction.TC_CA)
          .withModel("Sable")
          .withVin("6GYF54637HD645370"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample10020, TC_DRIVER))
      .withContactInRole(contactDemoSample10020, TC_CLAIMANT)
      .create(bundle)

    var exposureDemoSample11006 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_THIRD_PARTY)
      .withExposureType(TC_VEHICLEDAMAGE)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_AUTO_NORMAL)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_PALIABILITYCOV)
      .withSegment(TC_AUTO_MID)
      .withClaimantType(TC_VEH_OTHER_OWNER)
      .withClaimOrder(2)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim1)
      .withCoverageSubType(TC_PALIABILITYCOV_VD)
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSpeed(30)
        .withSeverity(TC_MAJOR_AUTO)
        .withCollisionPoint(TC_FRONT)
        .withDriverRelation(TC_SELF)
        .withDescription("Severely crumpled front end, not driveable")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(2003)
          .withLicensePlate("2GDH967")
          .withMake("BMW")
          .withState(Jurisdiction.TC_CA)
          .withModel("355i")
          .withVin("3DGF78575GD892534"))
        .withOwnersPermission(true)
        .withContactInRole(billKinman2, TC_DRIVER))
      .withContactInRole(billKinman2, TC_CLAIMANT)
      .create(bundle)

    var exposureDemoSample11007 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_THIRD_PARTY)
      .withExposureType(TC_BODILYINJURYDAMAGE)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_INJURY_NORMAL)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_PALIABILITYCOV)
      .withSegment(TC_INJURY_MID)
      .withClaimantType(TC_VEH_OTHER_OWNER)
      .withClaimOrder(3)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim1)
      .withCoverageSubType(TC_PALIABILITYCOV_BI)
      .withIncident( new gw.api.databuilder.InjuryIncidentBuilder()
        .withGeneralInjuryType(TC_SPECIFIC)
        .withSeverity(TC_MAJOR_INJURY)
        .withDescription("Bruises and lacerations to face and neck, broken orbital bone, potential vision loss")
        .withMedicalTreatmentType(TC_HOSPITAL)
        .withDetailedInjuryType(TC_58)
        .withLostWages(true)
        .withBodyPart( new gw.api.databuilder.BodyPartDetailsBuilder()
          .withPrimaryBodyPart(TC_HEAD)
          .withOrdering(100))
        .withContactInRole(billKinman2, TC_INJURED))
      .withContactInRole(billKinman2, TC_CLAIMANT)
      .create(bundle)

    var transactionSetDemoSample20006 = new gw.api.databuilder.CheckSetBuilder()
      .withApprovalDate(BaseDate.addDays(-7))
      .withRequestingUser(findUserByUserName("aapplegate"))
      .withApprovalStatus(TC_APPROVED)
      .onClaim(claim1)
      .create(bundle)

    var transactionSetDemoSample20007 = new gw.api.databuilder.ReserveSetBuilder()
      .withApprovalDate(BaseDate.addDays(-2))
      .withRequestingUser(findUserByUserName("aapplegate"))
      .withApprovalStatus(TC_APPROVED)
      .onClaim(claim1)
      .create(bundle)

    var reserveLineDemoSample14 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11005)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_BODY)
      .withClaim(claim1)
      .create(bundle)

    var reserveLineDemoSample15 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11006)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_BODY)
      .withClaim(claim1)
      .create(bundle)

    var reserveLineDemoSample16 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11007)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_MEDICAL)
      .withClaim(claim1)
      .create(bundle)

    var checkDemoSample10106 = new gw.api.databuilder.CheckBuilder()
      .onClaim(claim1)
      .withIssueDate(BaseDate.addDays(-6))
      .withScheduledSendDate(BaseDate.addDays(-6))
      .withBankAccount(TC_DEFAULT)
      .onCheckSet(transactionSetDemoSample20006)
      .withPayTo("William Weeks")
      .withStatus(TC_ISSUED)
      .withPaymentMethod(TC_CHECK)
      .withCheckNumber("11059")
      .withPayee(new gw.api.databuilder.CheckPayeeBuilder()
            .withPayee(billKinman2)
            .withPayeeType(TC_CLAIMANT))
      .withType(TC_PRIMARY)
      .create(bundle)

    var transactionDemoSample10016 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample14)
      .onExposure(exposureDemoSample11005)
      .onTransactionSet(transactionSetDemoSample20007)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_BODY)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .onClaim(claim1)
      .withTransToClaimExchangeRate( CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Repairs")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(2500bd.ofDefaultCurrency())
        .withClaimAmount(2500bd.ofDefaultCurrency())
        .withReservingAmount(2500bd.ofDefaultCurrency())
        .withTransactionAmount(2500bd.ofDefaultCurrency())
        .withLineCategory(TC_OTHER)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample10017 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample15)
      .onExposure(exposureDemoSample11006)
      .onTransactionSet(transactionSetDemoSample20007)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_BODY)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .onClaim(claim1)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Repairs")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(5000bd.ofDefaultCurrency())
        .withClaimAmount(5000bd.ofDefaultCurrency())
        .withReservingAmount(5000bd.ofDefaultCurrency())
        .withTransactionAmount(5000bd.ofDefaultCurrency())
        .withLineCategory(TC_OTHER)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample10018 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample16)
      .onExposure(exposureDemoSample11007)
      .onTransactionSet(transactionSetDemoSample20007)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_MEDICAL)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .onClaim(claim1)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Initial hospitalization costs")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(12000bd.ofDefaultCurrency())
        .withClaimAmount(12000bd.ofDefaultCurrency())
        .withReservingAmount(12000bd.ofDefaultCurrency())
        .withTransactionAmount(12000bd.ofDefaultCurrency())
        .withLineCategory(TC_DOCTOR)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample20014 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample15)
      .onTransactionSet(transactionSetDemoSample20006)
      .withCostCategory(TC_BODY)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .onCheck(checkDemoSample10106)
      .withPaymentType(TC_PARTIAL)
      .onExposure(exposureDemoSample11006)
      .withCostType(TC_CLAIMCOST)
      .onClaim(claim1)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Towing and inspection")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(300bd.ofDefaultCurrency())
        .withClaimAmount(300bd.ofDefaultCurrency())
        .withReservingAmount(300bd.ofDefaultCurrency())
        .withTransactionAmount(300bd.ofDefaultCurrency())
        .withLineCategory(TC_OTHER)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample20015 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample16)
      .onTransactionSet(transactionSetDemoSample20006)
      .withCostCategory(TC_MEDICAL)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .onCheck(checkDemoSample10106)
      .withPaymentType(TC_PARTIAL)
      .onExposure(exposureDemoSample11007)
      .withCostType(TC_CLAIMCOST)
      .onClaim(claim1)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Initial hospitalization and examination")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(9000bd.ofDefaultCurrency())
        .withClaimAmount(9000bd.ofDefaultCurrency())
        .withReservingAmount(9000bd.ofDefaultCurrency())
        .withTransactionAmount(9000bd.ofDefaultCurrency())
        .withLineCategory(TC_DOCTOR)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)
  }

  function createClaim3(bundle : Bundle, lossDateBaseDate : Date) {
   var contactDemoSample3039 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Kinman")
      .withFirstName("Bill")
      .withPrimaryPhone(TC_WORK)
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("0000 Bridgepointe Parkway")
        .withCountry(TC_US)
        .withPostalCode("94404")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("San Mateo"))
      .withWorkPhone("818-446-1206")
      .withTaxID("123-45-6789")
      .create(bundle)

    var claim3 = new gw.api.databuilder.ClaimBuilder()
      .withIncidentReport(false)
      .withWeather(TC_CL)
      .withAssignmentStatus(TC_ASSIGNED)
      .withLossDate(lossDateBaseDate.addYears(1).addMonths(3))
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStrategy(TC_AUTO_FAST)
      .withAssignmentDate(BaseDate.addDays(0))
      .withFlagged(TC_NEVERFLAGGED)
      .withLossLocation(new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("345 Fir Lane")
        .withCountry(TC_US)
        .withPostalCode("91352")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("La Canada"))
      .withLossCause(TC_VEHCOLLISION)
      .withClaimNumber("235-53-425891")
      .withMainContactType(TC_SELF)
      .withReportedByType(TC_SELF)
      .withLossType(TC_AUTO)
      .withValidationLevel(TC_NEWLOSS)
      .withPolicy( new gw.api.databuilder.PolicyBuilder()
        .withExpirationDate(BaseDate.addDays(274))
        .withUnderwritingCo(TC_PARENT)
        .withVerified(true)
        .withOrigEffectiveDate(BaseDate.addDays(-3266))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withUnderwritingGroup(TC_ACME_AUTO)
        .withEffectiveDate(BaseDate.addDays(-90))
        .withStatus(TC_INFORCE)
        .withPolicyNumber("4775949863-02")
        .withTotalProperties(0)
        .withPolicyType(TC_PERSONALAUTO)
        .withTotalVehicles(2)
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(1)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(1997)
            .withLicensePlate("1HGJ465")
            .withMake("Saturn")
            .withState(Jurisdiction.TC_CA)
            .withModel("SL")
            .withVin("1GV234TV347463377")))
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(2)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(1996)
            .withLicensePlate("2GDH967")
            .withMake("Toyota")
            .withState(Jurisdiction.TC_CA)
            .withModel("Corolla")
            .withVin("3DGF78575GD892577")))
        .withContactInRole(contactDemoSample3039, TC_INSURED))
      .withFault(80)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withJurisdictionState(TC_CA)
      .withSegment(TC_AUTO_LOW)
      .withReportedDate(BaseDate.addDays(-115))
      .withCoverageInQuestion(false)
      .withLOBCode(TC_PERSONALAUTOLINE)
      .withDescription("Car plowed into a fire hydrant")
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .withContactInRole(contactDemoSample3039, TC_MAINCONTACT)
      .withContactInRole(contactDemoSample3039, TC_REPORTER)
      .create(bundle)

    var claimInfoDemoSample24 = new gw.api.databuilder.ClaimInfoBuilder()
      .withRootPublicId("demo_sample:24")
      .withClaimNumber("235-53-425891")
      .onClaim(claim3)
      .create(bundle)

    var policyPeriodDemoSample70017 = new gw.api.databuilder.PolicyPeriodBuilder()
      .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoDemoSample24))
      .withPolicyPeriodType(TC_POLICY)
      .withExpirationDate(BaseDate.addDays(354))
      .withPolicyNumber("4775949863-02")
      .withPolicyType(TC_PERSONALAUTO)
      .withEffectiveDate(BaseDate.addDays(-40))
      .create(bundle)

    var exposureDemoSample70023 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_INSURED)
      .withExposureType(TC_VEHICLEDAMAGE)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_AUTO_FAST)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_PALIABILITYCOV)
      .withSegment(TC_AUTO_LOW)
      .withClaimantType(TC_VEH_OTHER_OWNER)
      .withClaimOrder(1)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim3)
      .withCoverageSubType(TC_PALIABILITYCOV_VD)
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSeverity(TC_MINOR)
        .withDriverRelation(TC_SELF)
        .withDescription("Minor damage")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(1992)
          .withLicensePlate("1HGJ465")
          .withMake("Hyundai")
          .withState(Jurisdiction.TC_CA)
          .withModel("Excel")
          .withVin("1GV234TV347463988"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample3039, TC_DRIVER))
      .withContactInRole(contactDemoSample3039, TC_CLAIMANT)
      .create(bundle)

    var exposureDemoSample11004 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_INSURED)
      .withExposureType(TC_PERSONALPROPERTYDAMAGE)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_CONTENTS_FAST)
      .withBreakIn(true)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_BOPPERSONALEFFECTS)
      .withSegment(TC_CONTENTS_LOW)
      .withClaimantType(TC_INSURED)
      .withLocked(false)
      .withClaimOrder(2)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim3)
      .withCoverageSubType(TC_BOPPERSONALEFFECTS)
      .withIncident( new gw.api.databuilder.MobilePropertyIncidentBuilder()
        .withSeverity(TC_MINOR)
        .withDescription("The car stereo was stolen after the accident"))
      .withContactInRole(contactDemoSample3039, TC_CLAIMANT)
      .create(bundle)
  }

  function createClaim4WithFinancials(bundle : Bundle, lossDateBaseDate : Date) {
    var coverageDemoSample11 = new gw.api.databuilder.VehicleCoverageBuilder()
      .withIncidentLimit(300000bd.ofDefaultCurrency())
      .withType(TC_PALIABILITYCOV)
      .withExposureLimit(150000bd.ofDefaultCurrency())
      .create(bundle)

    var contactDemoSample10021 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Egertson")
      .withFirstName("Karen")
      .withPrimaryPhone(TC_WORK)
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("908 Angels Landing Rd.")
        .withCountry(TC_US)
        .withPostalCode("91352")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("Anaheim"))
      .withWorkPhone("213-457-6378")
      .create(bundle)
      
    var policy4 = new gw.api.databuilder.PolicyBuilder()
        .withExpirationDate(BaseDate.addDays(74))
        .withUnderwritingCo(TC_PARENT)
        .withVerified(true)
        .withOrigEffectiveDate(BaseDate.addDays(-3266))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withUnderwritingGroup(TC_ACME_AUTO)
        .withEffectiveDate(BaseDate.addDays(-290))
        .withStatus(TC_INFORCE)
        .withPolicyNumber("4775949863-02")
        .withTotalProperties(0)
        .withPolicyType(TC_PERSONALAUTO)
        .withTotalVehicles(1)
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(1)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(2002)
            .withLicensePlate("2GDH967")
            .withMake("Pontiac")
            .withState(Jurisdiction.TC_CA)
            .withModel("Grand Prix")
            .withVin("3DGF78575GD891525"))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(20000bd.ofDefaultCurrency())
            .withType(TC_PACOLLISIONCOV)
            .withDeductible(0bd.ofDefaultCurrency()))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(20000bd.ofDefaultCurrency())
            .withType(TC_PACOMPREHENSIVECOV)
            .withDeductible(0bd.ofDefaultCurrency()))
          .withCoverage(coverageDemoSample11)
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(1000bd.ofDefaultCurrency())
            .withType(TC_PAMEDPAYCOV)))
          .withContactInRole(contactDemoSample10021, TC_INSURED)
          .create(bundle)

    var claim4 = new gw.api.databuilder.ClaimBuilder()
      .withIncidentReport(false)
      .withWeather(TC_CL)
      .withAssignmentStatus(TC_ASSIGNED)
      .withLossDate(lossDateBaseDate.addYears(1).addMonths(7))
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStrategy(TC_AUTO_NORMAL)
      .withAssignmentDate(BaseDate.addDays(0))
      .withFlagged(TC_NEVERFLAGGED)
      .withLossLocation(new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("506 2nd Ave.")
        .withCountry(TC_US)
        .withPostalCode("92101")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("San Diego"))
      .withLossCause(TC_VEHCOLLISION)
      .withFaultRating(FaultRating.TC_THIRDPARTY)
      .withClaimNumber("235-53-425892")
      .withMainContactType(TC_SELF)
      .withReportedByType(TC_OTHER)
      .withLossType(TC_AUTO)
      .withValidationLevel(TC_NEWLOSS)
      .withPolicy(policy4)
      .withFault(80)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withJurisdictionState(TC_CA)
      .withSegment(TC_AUTO_MID)
      .withReportedDate(BaseDate.addDays(-3))
      .withCoverageInQuestion(false)
      .withLOBCode(TC_PERSONALAUTOLINE)
      .withDescription("Insured swerved to avoid an animal, struck claimant's car head-on")
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .withContactInRole(contactDemoSample10021, TC_CHECKPAYEE)
      .withContactInRole(contactDemoSample10021, TC_MAINCONTACT)
      .withContactInRole(contactDemoSample10021, TC_REPORTER)
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic(TC_GENERAL)
        .withAuthoringDate(BaseDate.addDays(-2))
        .withSubject("Initial phone call with insured")
        .withAuthor(findUserByUserName("cclark"))
        .withBody("Insured claims he swerved to avoid a dog in the road, then hit an oncoming car in the other lane."))
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic(TC_GENERAL)
        .withAuthoringDate(BaseDate.addDays(-1))
        .withSubject("Initial phone call with claimant")
        .withAuthor(findUserByUserName("aapplegate"))
        .withBody("Spoke to claimant - he was hospitalized due to a fracture in a bone behind his eye and is under observation, and may need to undergo surgery.  Because claimant does not have other insurance, authorized a check to cover vehicle towing and initial hospital stay."))
      .withActivity( new gw.api.databuilder.ActivityBuilder()
        .withAssignmentStatus(TC_ASSIGNED)
        .withAssignmentDate(BaseDate.addDays(-3))
        .withEscalated(false)
        .withRecurring(false)
        .withImportance(TC_NOTONCALENDAR)
        .withCloseDate(BaseDate.addDays(-1))
        .withMandatory(true)
        .withPriority(TC_HIGH)
        .withActivityClass(TC_TASK)
        .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
        .withType(TC_GENERAL)
        .withEscalationDate(BaseDate.addDays(4))
        .withStatus(TC_COMPLETE)
        .withAutoGenerated(true)
        .withLastViewedDate(BaseDate.addDays(-2415))
        .withActivityPattern(findActivityPatternByCode("contact_insured"))
        .withSubject("Contact insured")
        .withAssignedUser(findUserByUserName("aapplegate"))
        .withTargetDate(BaseDate.addDays(-1)))
      .create(bundle)

    var claimInfoDemoSample25 = new gw.api.databuilder.ClaimInfoBuilder()
      .withRootPublicId("demo_sample:25")
      .withClaimNumber("235-53-425892")
      .onClaim(claim4)
      .create(bundle)

    var policyPeriodDemoSample70018 = new gw.api.databuilder.PolicyPeriodBuilder()
      .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoDemoSample25))
      .withPolicyPeriodType(TC_POLICY)
      .withExpirationDate(BaseDate.addDays(154))
      .withPolicyNumber("4775949863-02")
      .withPolicyType(TC_PERSONALAUTO)
      .withEffectiveDate(BaseDate.addDays(-190))
      .create(bundle)

    var aggregateLimitDemoSample90008 = new gw.api.databuilder.AggregateLimitBuilder()
      .withLimitCurrencyAmount(300000bd.ofDefaultCurrency())
      .withCoverageLine( new gw.api.databuilder.CoverageLineLimitBuilder()
        .withCoverageLine( new gw.api.databuilder.CoverageLineBuilder()
          .withExposureUnitNumber(1)
          .withCoverageType(TC_PALIABILITYCOV)
          .withCoverageSubtype(TC_VEHICLECOVERAGE)
          .withCoverage(coverageDemoSample11)
          .onPolicyPeriod(policyPeriodDemoSample70018)) )
      .withLimitType(AggregateLimitType.TC_NONE)
      .onPolicyPeriod(policyPeriodDemoSample70018)
      .create(bundle)

    var exposureDemoSample11008 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_INSURED)
      .withExposureType(TC_VEHICLEDAMAGE)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_AUTO_FAST)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_PACOLLISIONCOV)
      .withSegment(TC_AUTO_LOW)
      .withClaimantType(TC_INSURED)
      .withClaimOrder(1)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim4)
      .withCoverageSubType(TC_PACOLLISIONCOV)
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSpeed(40)
        .withSeverity(TC_MODERATE_AUTO)
        .withCollisionPoint(TC_FRONT)
        .withDriverRelation(TC_SELF)
        .withDescription("Damage to bumper and front panels")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(1993)
          .withLicensePlate("7FDG745")
          .withMake("Mercury")
          .withState(Jurisdiction.TC_CA)
          .withModel("Sable")
          .withVin("6GYF54637HD645370"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample10021, TC_DRIVER))
      .withContactInRole(contactDemoSample10021, TC_CLAIMANT)
      .create(bundle)

    var exposureDemoSample11009 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_THIRD_PARTY)
      .withExposureType(TC_VEHICLEDAMAGE)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_AUTO_NORMAL)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_PALIABILITYCOV)
      .withSegment(TC_AUTO_MID)
      .withClaimantType(TC_VEH_OTHER_OWNER)
      .withClaimOrder(2)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim4)
      .withCoverageSubType(TC_PALIABILITYCOV_VD)
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSpeed(30)
        .withSeverity(TC_MAJOR_AUTO)
        .withCollisionPoint(TC_FRONT)
        .withDriverRelation(TC_SELF)
        .withDescription("Severely crumpled front end, not driveable")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(2003)
          .withLicensePlate("2GDH967")
          .withMake("BMW")
          .withState(Jurisdiction.TC_CA)
          .withModel("355i")
          .withVin("3DGF78575GD892534"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample10021, TC_DRIVER))
      .withContactInRole(contactDemoSample10021, TC_CLAIMANT)
      .create(bundle)

    var exposureDemoSample11010 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_THIRD_PARTY)
      .withExposureType(TC_BODILYINJURYDAMAGE)
      .withAssignedGroup(findGroupByName("Auto1 - TeamA"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_INJURY_NORMAL)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_PALIABILITYCOV)
      .withSegment(TC_INJURY_MID)
      .withClaimantType(TC_VEH_OTHER_OWNER)
      .withClaimOrder(3)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("aapplegate"))
      .onClaim(claim4)
      .withCoverageSubType(TC_PALIABILITYCOV_BI)
      .withIncident( new gw.api.databuilder.InjuryIncidentBuilder()
        .withGeneralInjuryType(TC_SPECIFIC)
        .withSeverity(TC_MAJOR_INJURY)
        .withDescription("Bruises and lacerations to face and neck, broken orbital bone, potential vision loss")
        .withMedicalTreatmentType(TC_HOSPITAL)
        .withDetailedInjuryType(TC_58)
        .withLostWages(true)
        .withBodyPart( new gw.api.databuilder.BodyPartDetailsBuilder()
          .withPrimaryBodyPart(TC_HEAD)
          .withOrdering(100))
        .withContactInRole(contactDemoSample10021, TC_INJURED))
      .withContactInRole(contactDemoSample10021, TC_CLAIMANT)
      .create(bundle)

    var adversePartyContact = PersonBuilder.uiReadyPerson().withFirstName("Michelle").withLastName("Kellmen").create(bundle)
    adversePartyContact.Thirdpartyinsurer = CompanyBuilder.uiReadyCompany().withCompanyName("Archstone Insurance").create(bundle)

    var responsibleParty1 = new SubroAdversePartyBuilder()
        .withAdverseParty(adversePartyContact)
        .withPolicyNumber("12399-54")
        .withFault(60bd)
        .withExpectedRecovery(60bd)
        .withClassification(TC_INSURED)
        .withStrategy(SubroStrategy.TC_PURSUEINS)
        .withNoteSent(BaseDate.addDays(-1))
        .create(bundle)
    claim4.addRole(ContactRole.TC_ADVERSEPARTY, responsibleParty1.AdverseParty)

    var responsibleParty2 = new SubroAdversePartyBuilder()
        .withAdverseParty(PersonBuilder.uiReadyPerson().withFirstName("Bob").withLastName("Smith"))
        .withFault(40bd)
        .withExpectedRecovery(40bd)
        .withClassification(SubroClassification.TC_UNINSURED)
        .withStrategy(SubroStrategy.TC_COLLECTION)
        .create(bundle)
    claim4.addRole(ContactRole.TC_ADVERSEPARTY, responsibleParty2.AdverseParty)

    var doc = new DocumentBuilder()
        .withAuthor(AndyApplegate.Contact.DisplayName)
        .withDescription("Intent of Subrogation Recovery")
        .withStatus(TC_APPROVED)
        .withName("Subrogation Notice")
        .withSection(TC_SUBROGATION)
        .withType(TC_LETTER_SENT)
        .withDMS(false)
        .onClaim(claim4)
        .create(bundle)
    doc.RelatedTo = responsibleParty1.AdverseParty

    new gw.api.databuilder.NoteBuilder()
        .onClaim(claim4)
        .withTopic(NoteTopicType.TC_SUBROGATION)
        .withAuthoringDate(BaseDate.addDays(-1))
        .withSubject("Identified and contacted responsible parties")
        .withAuthor(AndyApplegate)
        .withBody("Identified exposures to be subrogated. Following up with responsible parties.")
        .create(bundle)

    var subrogationExp1 = new SubrogationBuilder().onExposure(exposureDemoSample11008).withStatus(TC_OPEN).create(bundle)
    var subrogationExp2 = new SubrogationBuilder().onExposure(exposureDemoSample11009).withStatus(TC_OPEN).create(bundle)
    var subrogationExp3 = new SubrogationBuilder().onExposure(exposureDemoSample11010).withStatus(TC_OPEN).create(bundle)

    var subrogationSummary = new SubrogationSummaryBuilder()
        .onClaim(claim4)
        .withSubrogation(subrogationExp1)
        .withSubrogation(subrogationExp2)
        .withSubrogation(subrogationExp3)
        .withExtOwned(false)
        .withEscalateSubro(false)
        .withSubroAdverseParties(responsibleParty1)
        .withSubroAdverseParties(responsibleParty2)
        .withSubroReferralComment("Referring to subro unit for further investigation")
        .create(bundle)

    subrogationSummary.referForSubrogation()

    var transactionSetDemoSample20008 = new gw.api.databuilder.CheckSetBuilder()
      .withApprovalDate(BaseDate.addDays(-7))
      .withRequestingUser(findUserByUserName("aapplegate"))
      .withApprovalStatus(TC_APPROVED)
      .onClaim(claim4)
      .create(bundle)

    var transactionSetDemoSample20009 = new gw.api.databuilder.ReserveSetBuilder()
      .withApprovalDate(BaseDate.addDays(-2))
      .withRequestingUser(findUserByUserName("aapplegate"))
      .withApprovalStatus(TC_APPROVED)
      .onClaim(claim4)
      .create(bundle)

    var reserveLineDemoSample17 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11008)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_BODY)
      .withClaim(claim4)
      .create(bundle)

    var reserveLineDemoSample18 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11009)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_BODY)
      .withClaim(claim4)
      .create(bundle)

    var reserveLineDemoSample19 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11010)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_MEDICAL)
      .withClaim(claim4)
      .create(bundle)

    var checkDemoSample10107 = new gw.api.databuilder.CheckBuilder()
      .onClaim(claim4)
      .withIssueDate(BaseDate.addDays(-6))
      .withScheduledSendDate(BaseDate.addDays(-6))
      .withBankAccount(TC_DEFAULT)
      .onCheckSet(transactionSetDemoSample20008)
      .withPayTo("William Weeks")
      .withStatus(TC_ISSUED)
      .withPaymentMethod(TC_CHECK)
      .withCheckNumber("11059")
      .withPayee(new gw.api.databuilder.CheckPayeeBuilder()
            .withPayee(contactDemoSample10021)
            .withPayeeType(TC_CLAIMANT))
      .withType(TC_PRIMARY)
      .create(bundle)

    var transactionDemoSample10020 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample17)
      .onExposure(exposureDemoSample11008)
      .onTransactionSet(transactionSetDemoSample20009)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_BODY)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .onClaim(claim4)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : Query.make(entity.ExchangeRate).compare("PublicID", Equals, "demo_sample:1000").select().FirstResult)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Repairs")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(2500bd.ofDefaultCurrency())
        .withClaimAmount(2500bd.ofDefaultCurrency())
        .withReservingAmount(2500bd.ofDefaultCurrency())
        .withTransactionAmount(2500bd.ofDefaultCurrency())
        .withLineCategory(TC_OTHER)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample10021 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample18)
      .onExposure(exposureDemoSample11009)
      .onTransactionSet(transactionSetDemoSample20009)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_BODY)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .onClaim(claim4)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Repairs")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(5000bd.ofDefaultCurrency())
        .withClaimAmount(5000bd.ofDefaultCurrency())
        .withReservingAmount(5000bd.ofDefaultCurrency())
        .withTransactionAmount(5000bd.ofDefaultCurrency())
        .withLineCategory(TC_OTHER)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample10022 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample19)
      .onExposure(exposureDemoSample11010)
      .onTransactionSet(transactionSetDemoSample20009)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_MEDICAL)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .onClaim(claim4)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Initial hospitalization costs")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(12000bd.ofDefaultCurrency())
        .withClaimAmount(12000bd.ofDefaultCurrency())
        .withReservingAmount(12000bd.ofDefaultCurrency())
        .withTransactionAmount(12000bd.ofDefaultCurrency())
        .withLineCategory(TC_DOCTOR)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample20023 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample18)
      .onTransactionSet(transactionSetDemoSample20008)
      .withCostCategory(TC_BODY)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .onCheck(checkDemoSample10107)
      .withPaymentType(TC_PARTIAL)
      .onExposure(exposureDemoSample11009)
      .withCostType(TC_CLAIMCOST)
      .onClaim(claim4)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Towing and inspection")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(300bd.ofDefaultCurrency())
        .withClaimAmount(300bd.ofDefaultCurrency())
        .withReservingAmount(300bd.ofDefaultCurrency())
        .withTransactionAmount(300bd.ofDefaultCurrency())
        .withLineCategory(TC_OTHER)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample20024 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample19)
      .onTransactionSet(transactionSetDemoSample20008)
      .withCostCategory(TC_MEDICAL)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .onCheck(checkDemoSample10107)
      .withPaymentType(TC_PARTIAL)
      .onExposure(exposureDemoSample11010)
      .withCostType(TC_CLAIMCOST)
      .onClaim(claim4)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Initial hospitalization and examination")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(9000bd.ofDefaultCurrency())
        .withClaimAmount(9000bd.ofDefaultCurrency())
        .withReservingAmount(9000bd.ofDefaultCurrency())
        .withTransactionAmount(9000bd.ofDefaultCurrency())
        .withLineCategory(TC_DOCTOR)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)  
      
  }

  function createClaim5WithFinancials(bundle : Bundle, lossDateBaseDate : Date) {
  var coverageDemoSample12 = new gw.api.databuilder.VehicleCoverageBuilder()
      .withIncidentLimit(300000bd.ofDefaultCurrency())
      .withType(TC_PALIABILITYCOV)
      .withExposureLimit(150000bd.ofDefaultCurrency())
      .create(bundle)
  
    var contactDemoSample10022 = new gw.api.databuilder.PersonBuilder()
      .withLastName("Egertson")
      .withFirstName("Karen")
      .withPrimaryPhone(TC_WORK)
      .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("908 Angels Landing Rd.")
        .withCountry(TC_US)
        .withPostalCode("91352")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("Anaheim"))
      .withWorkPhone("213-457-6378")
      .create(bundle)
      

    var claim5 = new gw.api.databuilder.ClaimBuilder()
      .withIncidentReport(false)
      .withWeather(TC_CL)
      .withAssignmentStatus(TC_ASSIGNED)
      .withLossDate(lossDateBaseDate.addYears(2).addMonths(-2))
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStrategy(TC_AUTO_NORMAL)
      .withAssignmentDate(BaseDate.addDays(0))
      .withFlagged(TC_NEVERFLAGGED)
      .withLossLocation(new gw.api.databuilder.AddressBuilder()
        .withAddressLine1("506 2nd Ave.")
        .withCountry(TC_US)
        .withPostalCode("92101")
        .withState(State.TC_CA)
        .withAddressType(TC_HOME)
        .withCity("San Diego"))
      .withLossCause(TC_VEHCOLLISION)
      .withClaimNumber("235-53-425893")
      .withMainContactType(TC_SELF)
      .withReportedByType(TC_OTHER)
      .withLossType(TC_AUTO)
      .withValidationLevel(TC_NEWLOSS)
      .withPolicy( new gw.api.databuilder.PolicyBuilder()
        .withExpirationDate(BaseDate.addDays(74))
        .withUnderwritingCo(TC_PARENT)
        .withVerified(true)
        .withOrigEffectiveDate(BaseDate.addDays(-3266))
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withUnderwritingGroup(TC_ACME_AUTO)
        .withEffectiveDate(BaseDate.addDays(-290))
        .withStatus(TC_INFORCE)
        .withPolicyNumber("4775949863-03")
        .withTotalProperties(0)
        .withPolicyType(TC_PERSONALAUTO)
        .withTotalVehicles(1)
        .withRiskUnit( new gw.api.databuilder.VehicleRUBuilder()
          .withRUNumber(1)
          .withVehicle( new gw.api.databuilder.VehicleBuilder()
            .withYear(2002)
            .withLicensePlate("2GDH967")
            .withMake("Pontiac")
            .withState(Jurisdiction.TC_CA)
            .withModel("Grand Prix")
            .withVin("3DGF78575GD891525"))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(20000bd.ofDefaultCurrency())
            .withType(TC_PACOLLISIONCOV)
            .withDeductible(0bd.ofDefaultCurrency()))
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(20000bd.ofDefaultCurrency())
            .withType(TC_PACOMPREHENSIVECOV)
            .withDeductible(0bd.ofDefaultCurrency()))
          .withCoverage(coverageDemoSample12)
          .withCoverage( new gw.api.databuilder.VehicleCoverageBuilder()
            .withIncidentLimit(1000bd.ofDefaultCurrency())
            .withType(TC_PAMEDPAYCOV)))
        .withContactInRole(contactDemoSample10022, TC_INSURED))
      .withFault(80)
      .withAssignedGroup(findGroupByName("LA Vehicle Appraisers"))
      .withJurisdictionState(TC_CA)
      .withSegment(TC_AUTO_MID)
      .withReportedDate(BaseDate.addDays(-3))
      .withCoverageInQuestion(false)
      .withLOBCode(TC_PERSONALAUTOLINE)
      .withDescription("Insured swerved to avoid an animal, struck claimant's car head-on")
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("tallen"))
      .withContactInRole(contactDemoSample10022, TC_CHECKPAYEE)
      .withContactInRole(contactDemoSample10022, TC_MAINCONTACT)
      .withContactInRole(contactDemoSample10022, TC_REPORTER)
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic(TC_GENERAL)
        .withAuthoringDate(BaseDate.addDays(-2))
        .withSubject("Initial phone call with insured")
        .withAuthor(findUserByUserName("cclark"))
        .withBody("Insured claims he swerved to avoid a dog in the road, then hit an oncoming car in the other lane."))
      .withNote( new gw.api.databuilder.NoteBuilder()
        .withTopic(TC_GENERAL)
        .withAuthoringDate(BaseDate.addDays(-1))
        .withSubject("Initial phone call with claimant")
        .withAuthor(findUserByUserName("tallen"))
        .withBody("Spoke to claimant - he was hospitalized due to a fracture in a bone behind his eye and is under observation, and may need to undergo surgery.  Because claimant does not have other insurance, authorized a check to cover vehicle towing and initial hospital stay."))
      .withActivity( new gw.api.databuilder.ActivityBuilder()
        .withAssignmentStatus(TC_ASSIGNED)
        .withAssignmentDate(BaseDate.addDays(-3))
        .withEscalated(false)
        .withRecurring(false)
        .withImportance(TC_NOTONCALENDAR)
        .withCloseDate(BaseDate.addDays(-1))
        .withMandatory(true)
        .withPriority(TC_HIGH)
        .withActivityClass(TC_TASK)
        .withAssignedGroup(findGroupByName("LA Vehicle Appraisers"))
        .withType(TC_GENERAL)
        .withEscalationDate(BaseDate.addDays(4))
        .withStatus(TC_COMPLETE)
        .withAutoGenerated(true)
        .withLastViewedDate(BaseDate.addDays(-2415))
        .withActivityPattern(findActivityPatternByCode("contact_insured"))
        .withSubject("Contact insured")
        .withAssignedUser(findUserByUserName("tallen"))
        .withTargetDate(BaseDate.addDays(-1)))
      .withPermissionRequired(ClaimSecurityType.TC_SENSITIVECLAIM)
      .create(bundle)

    var claimInfoDemoSample26 = new gw.api.databuilder.ClaimInfoBuilder()
      .withRootPublicId("demo_sample:26")
      .withClaimNumber("235-53-425893")
      .onClaim(claim5)
      .create(bundle)

   
    var policyPeriodDemoSample70019 = new gw.api.databuilder.PolicyPeriodBuilder()
      .withPolicy(new gw.api.databuilder.PeriodPolicyBuilder().onClaimInfo(claimInfoDemoSample26))
      .withPolicyPeriodType(TC_POLICY)
      .withExpirationDate(BaseDate.addDays(122))
      .withPolicyNumber("4775949863-03")
      .withPolicyType(TC_PERSONALAUTO)
      .withEffectiveDate(BaseDate.addDays(-55))
      .create(bundle)
    
    var aggregateLimitDemoSample90009 = new gw.api.databuilder.AggregateLimitBuilder()
      .withLimitCurrencyAmount(300000bd.ofDefaultCurrency())
      .withCoverageLine( new gw.api.databuilder.CoverageLineLimitBuilder()
        .withCoverageLine( new gw.api.databuilder.CoverageLineBuilder()
          .withExposureUnitNumber(1)
          .withCoverageType(TC_PALIABILITYCOV)
          .withCoverageSubtype(TC_VEHICLECOVERAGE)
          .withCoverage(coverageDemoSample12)
          .onPolicyPeriod(policyPeriodDemoSample70019)) )
      .withLimitType(TC_LOSSDATE)
      .onPolicyPeriod(policyPeriodDemoSample70019)
      .create(bundle)

    var exposureDemoSample11011 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_INSURED)
      .withExposureType(TC_VEHICLEDAMAGE)
      .withAssignedGroup(findGroupByName("LA Vehicle Appraisers"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_AUTO_FAST)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_PACOLLISIONCOV)
      .withSegment(TC_AUTO_LOW)
      .withClaimantType(TC_INSURED)
      .withClaimOrder(1)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("tallen"))
      .onClaim(claim5)
      .withCoverageSubType(TC_PACOLLISIONCOV)
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSpeed(40)
        .withSeverity(TC_MODERATE_AUTO)
        .withCollisionPoint(TC_FRONT)
        .withDriverRelation(TC_SELF)
        .withDescription("Damage to bumper and front panels")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(1993)
          .withLicensePlate("7FDG745")
          .withMake("Mercury")
          .withState(Jurisdiction.TC_CA)
          .withModel("Sable")
          .withVin("6GYF54637HD645370"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample10022, TC_DRIVER))
      .withContactInRole(contactDemoSample10022, TC_CLAIMANT)
      .create(bundle)

    var exposureDemoSample11012 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_THIRD_PARTY)
      .withExposureType(TC_VEHICLEDAMAGE)
      .withAssignedGroup(findGroupByName("LA Vehicle Appraisers"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_AUTO_NORMAL)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_PALIABILITYCOV)
      .withSegment(TC_AUTO_MID)
      .withClaimantType(TC_VEH_OTHER_OWNER)
      .withClaimOrder(2)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("tallen"))
      .onClaim(claim5)
      .withCoverageSubType(TC_PALIABILITYCOV_VD)
      .withIncident( new gw.api.databuilder.VehicleIncidentBuilder()
        .withSpeed(30)
        .withSeverity(TC_MAJOR_AUTO)
        .withCollisionPoint(TC_FRONT)
        .withDriverRelation(TC_SELF)
        .withDescription("Severely crumpled front end, not driveable")
        .withVehicle( new gw.api.databuilder.VehicleBuilder()
          .withYear(2003)
          .withLicensePlate("2GDH967")
          .withMake("BMW")
          .withState(Jurisdiction.TC_CA)
          .withModel("355i")
          .withVin("3DGF78575GD892534"))
        .withOwnersPermission(true)
        .withContactInRole(contactDemoSample10022, TC_DRIVER))
      .withContactInRole(contactDemoSample10022, TC_CLAIMANT)
      .create(bundle)

    var exposureDemoSample11013 = new gw.api.databuilder.ExposureBuilder()
      .withOtherCoverage(false)
      .withLossParty(TC_THIRD_PARTY)
      .withExposureType(TC_BODILYINJURYDAMAGE)
      .withAssignedGroup(findGroupByName("LA Vehicle Appraisers"))
      .withAssignmentStatus(TC_ASSIGNED)
      .withStrategy(TC_INJURY_NORMAL)
      .withProgress(TC_INVESTIGATION)
      .withJurisdictionState(TC_CA)
      .withAssignmentDate(BaseDate.addDays(0))
      .withPrimaryCoverage(TC_PALIABILITYCOV)
      .withSegment(TC_INJURY_MID)
      .withClaimantType(TC_VEH_OTHER_OWNER)
      .withClaimOrder(3)
      .withState(TC_OPEN)
      .withAssignedUser(findUserByUserName("tallen"))
      .onClaim(claim5)
      .withCoverageSubType(TC_PALIABILITYCOV_BI)
      .withIncident( new gw.api.databuilder.InjuryIncidentBuilder()
        .withGeneralInjuryType(TC_SPECIFIC)
        .withSeverity(TC_MAJOR_INJURY)
        .withDescription("Bruises and lacerations to face and neck, broken orbital bone, potential vision loss")
        .withMedicalTreatmentType(TC_HOSPITAL)
        .withDetailedInjuryType(TC_58)
        .withLostWages(true)
        .withBodyPart( new gw.api.databuilder.BodyPartDetailsBuilder()
          .withPrimaryBodyPart(TC_HEAD)
          .withOrdering(100))
        .withContactInRole(contactDemoSample10022, TC_INJURED))
      .withContactInRole(contactDemoSample10022, TC_CLAIMANT)
      .create(bundle)

    var transactionSetDemoSample20010 = new gw.api.databuilder.CheckSetBuilder()
      .withApprovalDate(BaseDate.addDays(-7))
      .withRequestingUser(findUserByUserName("tallen"))
      .withApprovalStatus(TC_APPROVED)
      .onClaim(claim5)
      .create(bundle)

    var transactionSetDemoSample20011 = new gw.api.databuilder.ReserveSetBuilder()
      .withApprovalDate(BaseDate.addDays(-2))
      .withRequestingUser(findUserByUserName("tallen"))
      .withApprovalStatus(TC_APPROVED)
      .onClaim(claim5)
      .create(bundle)

    var reserveLineDemoSample20 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11011)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_BODY)
      .withClaim(claim5)
      .create(bundle)

    var reserveLineDemoSample21 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11012)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_BODY)
      .withClaim(claim5)
      .create(bundle)

    var reserveLineDemoSample22 = new gw.api.databuilder.ReserveLineBuilder()
      .withExposure(exposureDemoSample11013)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_MEDICAL)
      .withClaim(claim5)
      .create(bundle)

    var checkDemoSample10108 = new gw.api.databuilder.CheckBuilder()
      .onClaim(claim5)
      .withIssueDate(BaseDate.addDays(-6))
      .withScheduledSendDate(BaseDate.addDays(-6))
      .withBankAccount(TC_DEFAULT)
      .onCheckSet(transactionSetDemoSample20010)
      .withPayTo("William Weeks")
      .withStatus(TC_ISSUED)
      .withPaymentMethod(TC_CHECK)
      .withCheckNumber("11059")
      .withPayee(new gw.api.databuilder.CheckPayeeBuilder()
            .withPayee(contactDemoSample10022)
            .withPayeeType(TC_CLAIMANT))
      .withType(TC_PRIMARY)
      .create(bundle)

    var transactionDemoSample10025 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample20)
      .onExposure(exposureDemoSample11011)
      .onTransactionSet(transactionSetDemoSample20011)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_BODY)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .onClaim(claim5)
            .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : Query.make(entity.ExchangeRate).compare("PublicID", Equals, "demo_sample:1000").select().FirstResult)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Repairs")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(2500bd.ofDefaultCurrency())
        .withClaimAmount(2500bd.ofDefaultCurrency())
        .withReservingAmount(2500bd.ofDefaultCurrency())
        .withTransactionAmount(2500bd.ofDefaultCurrency())
        .withLineCategory(TC_OTHER)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample10026 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample21)
      .onExposure(exposureDemoSample11012)
      .onTransactionSet(transactionSetDemoSample20011)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_BODY)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .onClaim(claim5)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Repairs")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(5000bd.ofDefaultCurrency())
        .withClaimAmount(5000bd.ofDefaultCurrency())
        .withReservingAmount(5000bd.ofDefaultCurrency())
        .withTransactionAmount(5000bd.ofDefaultCurrency())
        .withLineCategory(TC_OTHER)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample10027 = new gw.api.databuilder.ReserveBuilder()
      .withReserveLine(reserveLineDemoSample22)
      .onExposure(exposureDemoSample11013)
      .onTransactionSet(transactionSetDemoSample20011)
      .withCostType(TC_CLAIMCOST)
      .withCostCategory(TC_MEDICAL)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .onClaim(claim5)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Initial hospitalization costs")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(12000bd.ofDefaultCurrency())
        .withClaimAmount(12000bd.ofDefaultCurrency())
        .withReservingAmount(12000bd.ofDefaultCurrency())
        .withTransactionAmount(12000bd.ofDefaultCurrency())
        .withLineCategory(TC_DOCTOR)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample20028 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample21)
      .onTransactionSet(transactionSetDemoSample20010)
      .withCostCategory(TC_BODY)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .onCheck(checkDemoSample10108)
      .withPaymentType(TC_PARTIAL)
      .onExposure(exposureDemoSample11012)
      .withCostType(TC_CLAIMCOST)
      .onClaim(claim5)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Towing and inspection")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(300bd.ofDefaultCurrency())
        .withClaimAmount(300bd.ofDefaultCurrency())
        .withReservingAmount(300bd.ofDefaultCurrency())
        .withTransactionAmount(300bd.ofDefaultCurrency())
        .withLineCategory(TC_OTHER)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)

    var transactionDemoSample20029 = new gw.api.databuilder.PaymentBuilder()
      .withReserveLine(reserveLineDemoSample22)
      .onTransactionSet(transactionSetDemoSample20010)
      .withCostCategory(TC_MEDICAL)
      .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
      .withStatus(TC_SUBMITTED)
      .withTransToClaimExchangeRate(CurrencyUtil.isSingleCurrencyMode() ? null : gw.api.database.Query.make(entity.ExchangeRate).compare("PriceCurrency", Equals, Currency.TC_USD).compare("BaseCurrency", Equals, Currency.TC_USD).select().FirstResult)
      .onCheck(checkDemoSample10108)
      .withPaymentType(TC_PARTIAL)
      .onExposure(exposureDemoSample11013)
      .withCostType(TC_CLAIMCOST)
      .onClaim(claim5)
      .withLineItem( new gw.api.databuilder.TransactionLineItemBuilder()
        .withComments("Initial hospitalization and examination")
        .withClaimForExAmount(0bd.ofDefaultCurrency())
        .withReportingAmount(9000bd.ofDefaultCurrency())
        .withClaimAmount(9000bd.ofDefaultCurrency())
        .withReservingAmount(9000bd.ofDefaultCurrency())
        .withTransactionAmount(9000bd.ofDefaultCurrency())
        .withLineCategory(TC_DOCTOR)
        .withReportingForExAmount(0bd.ofDefaultCurrency()))
      .create(bundle)
  }

  function createClaim6WC(bundle : Bundle, lossDateBaseDate : Date) {
     var wclossDateBaseDate = Date.Today.addYears(-1)
     
     var buildingDemoSample307 = new gw.api.databuilder.BuildingBuilder()
        .withBuildingNumber("103")
        .create(bundle)

      var buildingDemoSample308 = new gw.api.databuilder.BuildingBuilder()
        .withBuildingNumber("104")
        .create(bundle)

      var policyLocationDemoSample306 = new gw.api.databuilder.PolicyLocationBuilder()
        .withAddress(new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("25 Commerce Way")
          .withCountry(TC_US)
          .withPostalCode("91155")
          .withState(State.TC_CA)
          .withAddressType(TC_BUSINESS)
          .withCity("Los Angeles"))
        .withBuilding(buildingDemoSample307)
        .withBuilding(buildingDemoSample308)
        .withLocationNumber("101")
        .create(bundle)

      var contactDemoSample300072 = new gw.api.databuilder.CompanyBuilder()
        .withPrimaryPhone(TC_WORK)
        .withPrimaryAddressSetEarly( new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("1245 Fair Oaks Ave")
          .withCountry(TC_US)
          .withPostalCode("91101")
          .withState(State.TC_CA)
          .withAddressType(TC_BUSINESS)
          .withCity("Pasadena"))
        .withWorkPhone("847-279-3399")
        .withName("P&P Construction")
        .create(bundle)

      var contactDemoSample30073 = new gw.api.databuilder.PersonBuilder()
        .withLastName("Arlington")
        .withFirstName("Annabelle")
        .withPrimaryAddressSetEarly(new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("1237 Myrtle Ave")
          .withCountry(TC_US)
          .withPostalCode("29402")
          .withState(State.TC_SC)
          .withAddressType(TC_BUSINESS)
          .withCity("Charleston"))
        .withPrimaryPhone(TC_WORK)
        .withWorkPhone("843-553-2001")
        .withLocalizedTaxID()
        .withClaimantIDType(ClaimantIDType.TC_S)
        .withSSNReleaseAuthorized(false)
        .withEducationLevel("12")
        .create(bundle)

      var classCodeDemoSample303 = new gw.api.databuilder.ClassCodeBuilder()
        .withCode("881001")
        .withDescription("Clerical")
        .create(bundle)

      var classCodeDemoSample304 = new gw.api.databuilder.ClassCodeBuilder()
        .withCode("901401")
        .withDescription("Janitorial")
        .create(bundle)

      var claim6 = new gw.api.databuilder.ClaimBuilder()
        .withIncidentReport(false)
        .withAssignmentStatus(TC_ASSIGNED)
        .withLossDate(wclossDateBaseDate.addDays(32))
        .withLossCause(LossCause.TC_FALL)
        .withAccidentType(AccidentType.TC_31)
        .withEmploymentData( new gw.api.databuilder.EmploymentDataBuilder()
            .withPayPeriod(TC_MONTHLY)
            .withOccupation("construction")
            .withPaidFull(true)
            .withHireState(State.TC_CA)
            .withLastWorkedDate(BaseDate.addDays(32))
            .withWageAmount(750bd.ofDefaultCurrency())
            .withEmploymentStatus(TC_FULLTIME)
            .withClassCode(classCodeDemoSample303)
            .withInjuryStartTime(DateUtil.currentDate() as java.util.Date)
            .withNumDaysWorked(5)
            .withNumHoursWorked(8)
            .withWagePaymentCont(false)
            .withHireDate(BaseDate.addDays(-3379))
            .withWorkStatusChange(new WorkStatusBuilder()
                .withStatus(WorkCapacity.TC_STOPPED_WORK)
                .withLastWorkedDate(wclossDateBaseDate.addDays(32))
                .withStatusDate(wclossDateBaseDate.addDays(32))))
        .withModifiedDutyAvail(false)
        .withFlaggedReason("Paying Total Temp on minor injury after 4 weeks")
        .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
        .withStrategy(TC_WC_FAST)
        .withAssignmentDate(wclossDateBaseDate.addDays(0))
        .withFlagged(TC_NEVERFLAGGED)
        .withLossLocation(new gw.api.databuilder.AddressBuilder()
          .withAddressLine1("846 Yount Ln.")
          .withCountry(TC_US)
          .withPostalCode("91357")
          .withState(State.TC_CA)
          .withAddressType(TC_BUSINESS)
          .withCity("Hollywood"))
        .withClaimNumber("312-36-300873")
        .withMainContactType(TC_EMPLOYEE)
        .withReportedByType(TC_EMPLOYEE)
        .withLossType(TC_WC)
        .withValidationLevel(TC_NEWLOSS)
        .withPolicy( new gw.api.databuilder.PolicyBuilder()
          .withExpirationDate(wclossDateBaseDate.addDays(185))
          .withUnderwritingCo(TC_PARENT)
          .withVerified(true)
          .withOrigEffectiveDate(wclossDateBaseDate.addDays(-200))
          .withCurrency(gw.api.util.CurrencyUtil.getDefaultCurrency())
          .withUnderwritingGroup(TC_ACME_WC)
          .withEffectiveDate(wclossDateBaseDate.addDays(-180))
          .withStatus(TC_INFORCE)
          .withWCStates("CA, NV")
          .withPolicyNumber("4775949865-02")
          .withTotalProperties(4)
          .withPolicyType(TC_WORKERSCOMP)
          .withTotalVehicles(0)
          .withClassCode(classCodeDemoSample303)
          .withClassCode(classCodeDemoSample304)
          .withCoverage( new gw.api.databuilder.PolicyCoverageBuilder()
            .withIncidentLimit(100000bd.ofDefaultCurrency())
            .withType(TC_WCEMPLIABCOV)
            .withDeductible(100bd.ofDefaultCurrency()))
          .withCoverage( new gw.api.databuilder.PolicyCoverageBuilder()
            .withIncidentLimit(100000bd.ofDefaultCurrency())
            .withType(TC_WCEMPLIABCOV)
            .withDeductible(100bd.ofDefaultCurrency()))
          .withRiskUnit( new gw.api.databuilder.WCCovEmpRUBuilder()
            .withBuilding(buildingDemoSample307)
            .withRUNumber(1)
            .withClassCode(classCodeDemoSample303)
            .withPolicyLocation(policyLocationDemoSample306))
          .withRiskUnit( new gw.api.databuilder.WCCovEmpRUBuilder()
            .withBuilding(buildingDemoSample307)
            .withRUNumber(2)
            .withClassCode(classCodeDemoSample303)
            .withPolicyLocation(policyLocationDemoSample306))
          .withRiskUnit( new gw.api.databuilder.WCCovEmpRUBuilder()
            .withBuilding(buildingDemoSample308)
            .withRUNumber(3)
            .withClassCode(classCodeDemoSample304)
            .withPolicyLocation(policyLocationDemoSample306))
          .withRiskUnit( new gw.api.databuilder.WCCovEmpRUBuilder()
            .withBuilding(buildingDemoSample307)
            .withRUNumber(4)
            .withClassCode(classCodeDemoSample304)
            .withPolicyLocation(policyLocationDemoSample306))
          .withContactInRole(contactDemoSample300072, TC_INSURED))
        .withLocationCode(policyLocationDemoSample306)
        .withClaimantReportedDate(wclossDateBaseDate.addDays(32))
        .withAssignedGroup(findGroupByName("Comp - TeamA"))
        .withJurisdictionState(TC_CA)
        .withSegment(TC_WC_LOST_TIME)
        .withReportedDate(wclossDateBaseDate.addDays(32))
        .withCoverageInQuestion(false)
        .withLOBCode(TC_WORKERSCOMPLINE)
        .withDescription("Worker fell from 2nd story scaffolding")
        .withState(TC_OPEN)
        .withAssignedUser(findUserByUserName("ljames"))
        .withIncident( new gw.api.databuilder.InjuryIncidentBuilder()
          .withGeneralInjuryType(TC_SPECIFIC)
          .withDetailedInjuryType(DetailedInjuryType.TC_59)
          .withSeverity(TC_MINOR)
          .withDescription("Strained back and bruises to right leg from the fall")
          .withMedicalTreatmentType(TC_ONE_DOCTOR)
          .withClaimIncident(true))
        .withContactInRole(contactDemoSample30073, TC_CLAIMANT)
        .withContactInRole(contactDemoSample30073, TC_REPORTER)
        .withClaimWorkComp(new gw.api.databuilder.ClaimWorkCompBuilder()
            .withClassCodeByLocation(false)
            .withDeathReport(false)
            .withCompensabilityDecision(CompensabilityDecision.TC_ACCEPTED)
            .withEmployerLiability(true)
            .withMedicalReport(true)
            .withTimeLossReport(true)
            .withDiscontinuedFringeBenefits(new CurrencyAmount(100))
            .withAccidentPremises(AccidentPremises.TC_EMPLOYER))
        .withDateReportedToEmployer(BaseDate.addDays(-15))
        .withEmploymentInjury(true)
        .withInjuredRegularJob(true)
        .withEmpQusValidity(YesNo.TC_NO)
        .withSafetyEquipProv(true)
        .withSafetyEquipUsed(true)
        .withDrugsInvolved(YesNo.TC_NO)
        .withConcurrentEmp(YesNo.TC_NO)
        .create(bundle)

    new gw.api.databuilder.ActivityBuilder()
        .onClaim(claim6)
        .withStatus(TC_COMPLETE)
        .withActivityPattern(findActivityPatternByCode("three_point_contact_employer"))
        .withTargetDate(DateUtil.currentDate().addDays(3))
        .assignedToClaimOwner()
        .create(bundle)
    new gw.api.databuilder.ActivityBuilder()
        .onClaim(claim6)
        .withStatus(TC_OPEN)
        .withActivityPattern(findActivityPatternByCode("three_point_contact_employee"))
        .withTargetDate(DateUtil.currentDate().addDays(3))
        .assignedToClaimOwner()
        .create(bundle)
    new gw.api.databuilder.ActivityBuilder()
        .onClaim(claim6)
        .withStatus(TC_OPEN)
        .withActivityPattern(findActivityPatternByCode("three_point_contact_medical_provider"))
        .withTargetDate(DateUtil.currentDate().addDays(-3))
        .assignedToClaimOwner()
        .create(bundle)

      var claimInfoDemoSample30006 = new gw.api.databuilder.ClaimInfoBuilder()
        .withRootPublicId("demo_sample:30006")
        .withClaimNumber("312-36-300873")
        .onClaim(claim6)
        .create(bundle)

      var exposureDemoSample300002 = new gw.api.databuilder.ExposureBuilder()
        .withOtherCoverage(false)
        .withLossParty(TC_THIRD_PARTY)
        .withExposureType(TC_EMPLOYERLIABILITY)
        .withAssignedGroup(findGroupByName("Comp - TeamA"))
        .withAssignmentStatus(TC_ASSIGNED)
        .withStrategy(TC_WC_INVESTIGATE)
        .withProgress(TC_INVESTIGATION)
        .withAssignmentDate(wclossDateBaseDate.addDays(35))
        .withPrimaryCoverage(TC_WCEMPLIABCOV)
        .withJurisdictionState(TC_CA)
        .withSegment(TC_WC_LIABILITY)
        .withClaimOrder(3)
        .withState(TC_OPEN)
        .withAssignedUser(findUserByUserName("ljames"))
        .onClaim(claim6)
        .withCoverageSubType(TC_WCEMPLIABCOV)
        .withIncident( new gw.api.databuilder.IncidentBuilder()
          .withSeverity(TC_MODERATE_GEN))
        .create(bundle)
  }
}

