<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <Page
    autosaveable="false"
    canEdit="false"
    canVisit="perm.User.ViewWorkQueue or perm.User.DevAllAccess"
    countsAsWork="false"
    id="WorkQueueInfo"
    parent="ServerTools()"
    title="DisplayKey.get(&quot;Web.InternalTools.WorkQueueInfo.Title&quot;)">
    <LocationEntryPoint
      signature="WorkQueueInfo()"/>
    <LocationEntryPoint
      signature="WorkQueueInfo(initialWorkQueueInfo : gw.api.web.tools.WorkQueueDisplayInfo)"/>
    <Variable
      initialValue="new gw.api.web.tools.WorkQueueInfoPage()"
      name="Page"
      type="gw.api.web.tools.WorkQueueInfoPage"/>
    <Variable
      name="initialWorkQueueInfo"
      type="gw.api.web.tools.WorkQueueDisplayInfo"/>
    <Screen
      id="WorkQueueInfoScreen">
      <DetailViewPanel
        columnDivider="false">
        <Variable
          initialValue="Page.getThreadPoolInfo()"
          name="PoolInfo"
          recalculateOnRefresh="true"
          type="gw.api.web.tools.WorkQueueThreadPoolDisplayInfo"/>
        <InputColumn>
          <TextInput
            id="maximumPoolSize"
            label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueInfo.MaximumPoolSize&quot;)"
            value="PoolInfo.ThreadPoolMaximumSize"
            valueType="java.lang.Integer"/>
        </InputColumn>
        <InputColumn>
          <TextInput
            id="poolSize"
            label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueInfo.PoolSize&quot;)"
            value="PoolInfo.ThreadPoolSize"
            valueType="java.lang.Integer"/>
        </InputColumn>
        <InputColumn>
          <TextInput
            id="activeThreads"
            label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueInfo.ActiveThreads&quot;)"
            value="PoolInfo.ActiveThreadCount"
            valueType="java.lang.Integer"/>
        </InputColumn>
      </DetailViewPanel>
      <ListDetailPanel
        selectionName="SelectedQueue"
        selectionOnEnter="initialWorkQueueInfo"
        selectionType="gw.api.web.tools.WorkQueueDisplayInfo">
        <PanelRef>
          <Toolbar>
            <ToolbarButton
              action="null"
              id="refresh"
              label="DisplayKey.get(&quot;Button.Refresh&quot;)"/>
            <ToolbarButton
              action="WorkQueueInfoDownloadConfigurePopup.push()"
              id="download"
              label="DisplayKey.get(&quot;Button.Download&quot;)"/>
            <ToolbarButton
              action="WorkQueueRawDataDownloadConfigurePopup.push()"
              id="downloadRawData"
              label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueInfo.DownloadRawData&quot;)"/>
          </Toolbar>
          <ListViewPanel
            id="WorkQueueInfoLV">
            <RowIterator
              editable="false"
              elementName="WorkQueueRow"
              pageSize="0"
              value="Page.WorkQueueList"
              valueType="gw.api.web.tools.WorkQueueDisplayInfo[]">
              <Variable
                initialValue="new gw.api.tools.BatchProcess(WorkQueueRow.WorkQueueInfo.QueueType)"
                name="batchProcess"
                type="gw.api.tools.BatchProcess"/>
              <Row
                visible="WorkQueueRow.QueueType != typekey.BatchProcessType.TC_ARCHIVE or gw.api.web.tools.ArchiveInfoPage.isArchivingAvailable()">
                <TextCell
                  id="WorkQueueName"
                  label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueLv.WorkQueueName&quot;)"
                  sortOrder="1"
                  value="WorkQueueRow.WorkQueueInfo.QueueName"
                  width="200"/>
                <TextCell
                  enableSort="false"
                  id="numActive"
                  label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueLv.AvailableCount&quot;)"
                  value="WorkQueueRow.AvailableCount"
                  valueType="java.lang.Integer"/>
                <TextCell
                  enableSort="false"
                  id="numCheckedOut"
                  label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueLv.CheckedOutCount&quot;)"
                  value="WorkQueueRow.CheckedOutCount"
                  valueType="java.lang.Integer"/>
                <TextCell
                  enableSort="false"
                  id="numFailed"
                  label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueLv.FailedCount&quot;)"
                  value="WorkQueueRow.FailedCount"
                  valueType="java.lang.Integer"/>
                <TextCell
                  enableSort="false"
                  id="numExecutorsActive"
                  label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueLv.ExecutorsRunningCount&quot;)"
                  value="WorkQueueRow.ExecutorsRunning"
                  valueType="java.lang.Integer"/>
                <TextCell
                  id="startedClusterWide"
                  label="DisplayKey.get(&quot;Web.WorkQueueExecutorsLv.ClusterWideState&quot;)"
                  value="WorkQueueRow.Started ? DisplayKey.get(&quot;Web.WorkQueueExecutorsLv.Started&quot;) : DisplayKey.get(&quot;Web.WorkQueueExecutorsLv.Stopped&quot;)"/>
                <TextCell
                  id="WriterStatus"
                  label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueLv.WriterStatus&quot;)"
                  value="Page.getWriterStatus(WorkQueueRow)"/>
                <LinkCell
                  id="NotifyCell"
                  label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueLv.Action&quot;)"
                  visible="perm.User.EditWorkQueue or perm.User.DevAllAccess"
                  width="350">
                  <Link
                    action="SelectedQueue = WorkQueueRow;Page.runWriter(WorkQueueRow)"
                    available="(not batchProcess.ProcessStatus.StartingOrExecuting) and Page.canStartFromUi(WorkQueueRow)"
                    id="RunWriter"
                    label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueLv.RunWriter&quot;)"
                    styleClass="miniButton"/>
                  <Link
                    action="SelectedQueue = WorkQueueRow;Page.notifyWorkers(WorkQueueRow)"
                    id="Notify"
                    label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueLv.NotifyExecutor&quot;)"
                    styleClass="miniButton"/>
                  <Link
                    action="Page.stopWorkers(WorkQueueRow)"
                    id="StopWorkers"
                    label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueLv.StopExecutor&quot;)"
                    styleClass="miniButton"/>
                  <Link
                    action="Page.restartWorkers(WorkQueueRow)"
                    id="RestartWorkers"
                    label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueLv.RestartExecutor&quot;)"
                    styleClass="miniButton"/>
                  <Link
                    action="SelectedQueue = WorkQueueRow; WorkQueueHistoryDownloadConfigurePopup.push(WorkQueueRow);"
                    id="PrintHistory"
                    label="DisplayKey.get(&quot;Web.InternalTools.WorkQueueLv.DownloadHistory&quot;)"
                    styleClass="miniButton"/>
                </LinkCell>
              </Row>
            </RowIterator>
          </ListViewPanel>
        </PanelRef>
        <PanelRef>
          <TitleBar
            title="DisplayKey.get(&quot;Web.InternalTools.WorkQueueInfo.StatisticsTitle&quot;)"/>
          <CardViewPanel
            id="WorkQueueDV">
            <Card
              id="WorkItemsByWriter"
              title="DisplayKey.get(&quot;Web.WorkQueueItemsByWriter.Title&quot;)">
              <PanelRef
                def="WorkQueueWritersPanelSet(Page, SelectedQueue)"/>
            </Card>
            <Card
              id="WorkQueueExecutors"
              title="DisplayKey.get(&quot;Web.WorkQueueExecutors.Title&quot;)">
              <PanelRef
                def="WorkQueueExecutorsPanelSet(Page, SelectedQueue)"/>
            </Card>
            <Card
              id="WorkQueueWorkItems"
              title="DisplayKey.get(&quot;Web.WorkQueueWorkItems.Title&quot;)">
              <PanelRef
                def="WorkQueueWorkItemsLDV(Page, SelectedQueue)"/>
            </Card>
          </CardViewPanel>
        </PanelRef>
      </ListDetailPanel>
    </Screen>
  </Page>
</PCF>