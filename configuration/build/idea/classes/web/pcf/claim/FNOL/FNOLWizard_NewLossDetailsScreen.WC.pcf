<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <Screen
    id="FNOLWizard_NewLossDetailsScreen"
    mode="WC">
    <Require
      name="Claim"
      type="Claim"/>
    <Require
      name="Wizard"
      type="gw.api.claim.NewClaimWizardInfo"/>
    <Toolbar>
      <WizardButtons/>
    </Toolbar>
    <DetailViewPanel>
      <InputColumn>
        <!-- Begin Claim Details Section -->
        <Label
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.WhatHappened&quot;)"/>
        <BooleanRadioInput
          editable="true"
          id="InjurySeverity_IncidentReport"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjurySeverity.IncidentReport&quot;)"
          required="true"
          value="Claim.IncidentReport"/>
        <DateInput
          dateFormat="short"
          id="Claim_InjuryIllnessDate"
          label="DisplayKey.get(&quot;NVV.Claim.NewQuickClaimClaimWC.Claim.InjuryIllnessDate&quot;)"
          timeFormat="short"
          validationExpression="Claim.LossDate == null || Claim.LossDate &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
          value="Claim.LossDate"/>
        <TextAreaInput
          checkSpelling="true"
          editable="true"
          id="Claim_OccurrenceDescription"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.OccurrenceDescription&quot;)"
          numCols="50"
          numRows="3"
          required="false"
          value="Claim.Description"/>
        <BooleanRadioInput
          editable="true"
          id="Claim_EmploymentInjury"
          label="DisplayKey.get(&quot;NVV.Claim.NewQuickClaimClaimWC.Claim.EmploymentInjury&quot;)"
          value="Claim.EmploymentInjury"/>
        <DateInput
          dateFormat="short"
          editable="true"
          id="EmploymentData_InjuryStartDate"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.InjuryStartDate&quot;)"
          validationExpression="Claim.EmploymentData.InjuryStartTime == null || Claim.EmploymentData.InjuryStartTime &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
          value="Claim.EmploymentData.InjuryStartTime">
          <Reflect
            triggerIds="Claim_InjuryIllnessDate"
            value="VALUE"/>
        </DateInput>
        <DateInput
          editable="true"
          id="EmploymentData_InjuryStartTime"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.InjuryStartTime&quot;)"
          timeFormat="short"
          validationExpression="Claim.EmploymentData.InjuryStartTime == null || Claim.EmploymentData.InjuryStartTime &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
          value="Claim.EmploymentData.InjuryStartTime"/>
        <DateInput
          dateFormat="short"
          editable="true"
          id="DateReportedtoEmployer"
          label="DisplayKey.get(&quot;NVV.Claim.NewClaimLossDetailsWorkersComp.Claim.DateReportedtoEmployer&quot;)"
          required="true"
          timeFormat="short"
          value="Claim.DateRptdToEmployer"/>
        <DateInput
          dateFormat="short"
          editable="true"
          helpText="DisplayKey.get(&quot;NVV.Claim.LossDetailsWorkersComp.Claim.ReportedDate.HelpText&quot;)"
          id="Claim_ReportedDate"
          label="DisplayKey.get(&quot;NVV.Claim.NewClaimLossDetailsWorkersComp.Claim.ReportedDate&quot;)"
          required="true"
          timeFormat="short"
          validationExpression="Claim.ReportedDate == null || Claim.ReportedDate &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
          value="Claim.ReportedDate"/>
        <InputSetRef
          def="CCAddressInputSet(Claim.AddressOwner)"/>
        <TypeKeyInput
          editable="true"
          id="Claim_AccidentPremises"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.AccidentPremises&quot;)"
          value="Claim.ClaimWorkComp.AccidentPremises"
          valueType="typekey.AccidentPremises"/>
        <TypeKeyInput
          editable="true"
          filter="VALUE.hasCategory(JurisdictionType.TC_INSURANCE)"
          id="Claim_JurisdictionState"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.JurisdictionState&quot;)"
          value="Claim.JurisdictionState"
          valueType="typekey.Jurisdiction"/>
        <TextInput
          editable="true"
          id="Claim_EquipmentUsed"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EquipmentUsed&quot;)"
          value="Claim.EquipmentUsed"/>
        <TextInput
          editable="true"
          id="Claim_ActivityPerformed"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.ActivityPerformed&quot;)"
          value="Claim.ActivityPerformed"/>
        <TypeKeyInput
          editable="true"
          id="Claim_DrugsInvolved"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.DrugsInvolved&quot;)"
          value="Claim.DrugsInvolved"
          valueType="typekey.YesNo"/>
        <BooleanRadioInput
          editable="true"
          id="Claim_SafetyEquipmentProvided"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.SafetyEquipmentProvided&quot;)"
          value="Claim.SafetyEquipProv"/>
        <BooleanRadioInput
          editable="true"
          id="Claim_SafetyEquipmentUsed"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.SafetyEquipmentUsed&quot;)"
          value="Claim.SafetyEquipUsed"/>
        <RangeInput
          editable="true"
          id="Catastrophe_CatastropheNumber"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Catastrophe.CatastropheNumber&quot;)"
          required="false"
          value="Claim.Catastrophe"
          valueRange="gw.api.admin.CatastropheUtil.getCatastrophes()"
          valueType="entity.Catastrophe"/>
        <InputDivider/>
        <!-- End Claim Details Section   Begin Injury Details Section -->
        <Label
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Injury&quot;)"/>
        <TextInput
          editable="true"
          id="Claim_InjuryDescription"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjuryDescription&quot;)"
          value="Claim.ClaimInjuryIncident.Description"/>
        <TypeKeyInput
          editable="true"
          filter="VALUE.hasCategory( typekey.LossType.TC_WC )"
          id="Claim_Severity"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Severity&quot;)"
          value="Claim.ClaimInjuryIncident.Severity"
          valueType="typekey.SeverityType"/>
        <BooleanRadioInput
          editable="true"
          id="InjurySeverity_DeathReport"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjurySeverity.DeathReport&quot;)"
          required="true"
          value="Claim.DeathReport"/>
        <TypeKeyInput
          editable="true"
          id="Claim_InjuryIllnessCause"
          label="DisplayKey.get(&quot;NVV.Claim.NewQuickClaimClaimWC.Claim.InjuryIllnessCause&quot;)"
          required="true"
          value="Claim.LossCause"
          valueType="typekey.LossCause"/>
        <TypeKeyInput
          editable="true"
          id="Claim_AccidentType"
          label="DisplayKey.get(&quot;NVV.Claim.NewQuickClaimClaimWC.Claim.AccidentType&quot;)"
          required="false"
          value="Claim.AccidentType"
          valueType="typekey.AccidentType"/>
        <TypeKeyInput
          editable="true"
          id="Claim_PrimaryInjury"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.PrimaryInjury&quot;)"
          required="true"
          value="Claim.ClaimInjuryIncident.GeneralInjuryType"
          valueType="typekey.InjuryType"/>
        <TypeKeyInput
          editable="true"
          id="Claim_DetailedInjury"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.DetailedInjury&quot;)"
          required="true"
          value="Claim.ClaimInjuryIncident.DetailedInjuryType"
          valueType="typekey.DetailedInjuryType"/>
        <ListViewInput
          boldLabel="true"
          def="EditableBodyPartDetailsLV(Claim.ClaimInjuryIncident, false)"
          editable="true"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.BodyPartDetails&quot;)"
          labelAbove="true">
          <Toolbar>
            <IteratorButtons
              iterator="EditableBodyPartDetailsLV.EditableBodyPartDetailsLV"
              refreshTarget="DATA_ONLY"/>
            <CheckedValuesToolbarButton
              checkedRowAction="Claim.ClaimInjuryIncident.FirstBodyPart = CheckedValue"
              flags="one NotFirstBP"
              hideIfReadOnly="true"
              id="MakeFirstButton"
              iterator="EditableBodyPartDetailsLV.EditableBodyPartDetailsLV"
              label="DisplayKey.get(&quot;LV.Incident.Injury.BodyPartDetails.MakeFirstButton&quot;)"
              showConfirmMessage="false"
              tooltip="DisplayKey.get(&quot;LV.Incident.Injury.BodyPartDetails.MakeFirstButton.Tooltip&quot;)"/>
          </Toolbar>
        </ListViewInput>
        <InputDivider/>
        <!-- End Injury Details Section   Begin Medical Details Section -->
        <Label
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.MedCase&quot;)"/>
        <BooleanRadioInput
          editable="true"
          id="InjurySeverity_MedicalReport"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjurySeverity.MedicalReport&quot;)"
          required="true"
          value="Claim.MedicalReport">
          <PostOnChange
            target="MedicalReport_InputSet"/>
        </BooleanRadioInput>
        <InputSet
          id="MedicalReport_InputSet"
          visible="Claim.MedicalReport==true">
          <ClaimContactInput
            claim="Claim"
            editable="true"
            id="MedCase_FirstIntakeDoctor"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.MedCase.FirstIntakeDoctor&quot;)"
            value="Claim.FirstIntakeDoctor"
            valueRange="Claim.getRelatedContacts(Claim.getContactType(ContactRole.TC_FIRSTINTAKEDOCTOR)) as Doctor[]"
            valueType="entity.Doctor"/>
          <TextInput
            editable="true"
            id="MedCase_MedicalDiagnosis"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.MedCase.MedicalDiagnosis&quot;)"
            value="Claim.MedicalDiagnosis"/>
          <DateInput
            dateFormat="long"
            editable="true"
            id="MedCase_ExaminationDate"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.MedCase.ExaminationDate&quot;)"
            value="Claim.ExaminationDate"/>
          <TypeKeyInput
            editable="true"
            id="MedCase_InitialTreatment"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.MedCase.InitialTreatment&quot;)"
            required="false"
            value="Claim.ClaimWorkComp.InitialTreatment"
            valueType="typekey.InitialTreatment"/>
          <TypeKeyInput
            editable="true"
            id="MedCase_MedicalTreatment"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.MedCase.MedicalTreatment&quot;)"
            value="Claim.ClaimInjuryIncident.MedicalTreatmentType"
            valueType="typekey.MedicalTreatmentType"/>
          <TextAreaInput
            editable="true"
            id="MedCase_TreatmentRend"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.MedCase.TreatmentRend&quot;)"
            numCols="30"
            numRows="3"
            value="Claim.TreatmentRend"/>
          <ClaimContactInput
            claim="Claim"
            editable="true"
            id="MedCase_Hospital"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.MedCase.Hospital&quot;)"
            value="Claim.hospital"
            valueRange="Claim.RelatedMedicalCareOrgArray"
            valueType="entity.MedicalCareOrg"/>
          <DateInput
            dateFormat="short"
            editable="true"
            id="MedCase_HospitalDate"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.MedCase.HospitalDate&quot;)"
            value="Claim.HospitalDate"/>
          <TextInput
            editable="true"
            id="MedCase_HospitalDays"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.MedCase.HospitalDays&quot;)"
            value="Claim.HospitalDays"
            valueType="java.lang.Integer"/>
        </InputSet>
        <InputDivider/>
        <!-- End Medical Details Section   Begin Lost Time Section -->
        <Label
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.LostTime&quot;)"/>
        <BooleanRadioInput
          editable="true"
          id="InjurySeverity_TimeLossReport"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjurySeverity.TimeLossReport&quot;)"
          required="true"
          value="Claim.TimeLossReport">
          <PostOnChange
            target="TimeLoss_InputSet"/>
        </BooleanRadioInput>
        <InputSet
          id="TimeLoss_InputSet"
          visible="Claim.TimeLossReport==true">
          <ListViewInput
            def="EditableWorkStatusChangesLV(Claim.EmploymentData)"
            editable="true"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.WorkStatus&quot;)"
            labelAbove="true">
            <Toolbar>
              <IteratorButtons
                iterator="EditableWorkStatusChangesLV.EditableWorkStatusChangesLV"/>
            </Toolbar>
          </ListViewInput>
          <TextInput
            editable="true"
            id="EmploymentData_NumDaysWorkedPerWeek"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.NumDaysWorkedPerWeek&quot;)"
            value="Claim.EmploymentData.NumDaysWorked"
            valueType="java.math.BigDecimal"/>
          <TextInput
            editable="true"
            id="EmploymentData_NumHoursWorkedPerDay"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.NumHoursWorkedPerDay&quot;)"
            value="Claim.EmploymentData.NumHoursWorked"
            valueType="java.math.BigDecimal"/>
          <CurrencyInput
            editable="true"
            id="EmploymentData_WageAmount"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.WageAmount&quot;)"
            value="Claim.EmploymentData.WageAmount"/>
          <TypeKeyInput
            editable="true"
            id="EmploymentData_PayPeriod"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.PayPeriod&quot;)"
            value="Claim.EmploymentData.PayPeriod"
            valueType="typekey.PayPeriodType"/>
          <BooleanRadioInput
            editable="true"
            id="EmploymentData_PaidFullWages"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.PaidFullWages&quot;)"
            value="Claim.EmploymentData.PaidFull"/>
          <BooleanRadioInput
            editable="true"
            id="EmploymentData_WagePaymentContinued"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.WagePaymentContinued&quot;)"
            value="Claim.EmploymentData.WagePaymentCont"/>
          <BooleanRadioInput
            editable="true"
            id="Claim_ModifiedDutyAvailable"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.ModifiedDutyAvailable&quot;)"
            value="Claim.ModifiedDutyAvail"
            visible="Claim.TimeLossReport==true"/>
          <CurrencyInput
            editable="true"
            id="EmploymentData_DiscontinuedFringeBenefits"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.LossDetailsWorkersComp.Claim.EmploymentData.DiscontinuedFringeBenefits&quot;)"
            required="false"
            value="Claim.ClaimWorkComp.DiscontinuedFringeBenefits"/>
          <BooleanRadioInput
            editable="true"
            id="Claim_InjuredOnRegularJob"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.InjuredOnRegularJob&quot;)"
            value="Claim.InjuredRegularJob"/>
          <TypeKeyInput
            editable="true"
            id="Claim_ConcurrentEmployment"
            label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.ConcurrentEmployment&quot;)"
            value="Claim.ConcurrentEmp"
            valueType="typekey.YesNo">
            <PostOnChange
              target="Claim_ConcurrentEmploymentLV"/>
          </TypeKeyInput>
          <InputSet
            id="Claim_ConcurrentEmploymentLV"
            visible="Claim.ConcurrentEmp == YesNo.TC_YES">
            <ListViewInput
              boldLabel="true"
              def="EditableConcurrentEmploymentLV(Claim)"
              editable="true"
              label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.ConcurrentEmploymentArray&quot;)"
              labelAbove="true">
              <Toolbar>
                <IteratorButtons
                  iterator="EditableConcurrentEmploymentLV.EditableConcurrentEmploymentLV"
                  refreshTarget="DATA_ONLY"/>
              </Toolbar>
            </ListViewInput>
          </InputSet>
        </InputSet>
        <InputDivider/>
        <!-- End Lost Time Section -->
        <ListViewInput
          boldLabel="true"
          def="EditableOfficialsLV(Claim)"
          editable="true"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Officials&quot;)"
          labelAbove="true">
          <Toolbar>
            <IteratorButtons
              iterator="EditableOfficialsLV.EditableOfficialsLV"
              refreshTarget="DATA_ONLY"/>
          </Toolbar>
        </ListViewInput>
      </InputColumn>
      <InputColumn>
        <!-- Begin Injured Worker Data Section -->
        <Label
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Claimant&quot;)"/>
        <ClaimContactInput
          claim="Claim"
          editable="true"
          id="Claimant_Picker"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Claimant.Picker&quot;)"
          newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
          required="true"
          value="Claim.claimant"
          valueRange="Claim.RelatedPersonArray"
          valueType="entity.Person"/>
        <BooleanRadioInput
          editable="true"
          id="Claimant_ContactProhibited"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Claimant.ContactProhibited&quot;)"
          value="ContactProhibited"/>
        <TextInput
          id="Claimant_Phone"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Claimant.Phone&quot;)"
          value="Claim.claimant.PrimaryPhoneValue">
          <Reflect
            triggerIds="Claimant_Picker"
            value="VALUE.PrimaryPhoneValue"/>
        </TextInput>
        <TextInput
          id="Claimant_Address"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Claimant.Address&quot;)"
          value="Claim.claimant.PrimaryAddressDisplayValue">
          <Reflect
            triggerIds="Claimant_Picker"
            value="VALUE.PrimaryAddressDisplayValue"/>
        </TextInput>
        <DateInput
          id="Claimant_DateOfBirth"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Claimant.DateOfBirth&quot;)"
          value="Claim.claimant.DateOfBirth">
          <Reflect
            triggerIds="Claimant_Picker"
            value="VALUE.DateOfBirth"/>
        </DateInput>
        <PrivacyInput
          encryptionExpression="Claim.claimant.maskTaxId(VALUE)"
          id="Claimant_TaxNumber"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Claimant.TaxNumber&quot;)"
          value="Claim.claimant.TaxID">
          <Reflect
            triggerIds="Claimant_Picker"
            value="VALUE.TaxID"/>
        </PrivacyInput>
        <TypeKeyInput
          id="Claimant_Gender"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Claimant.Gender&quot;)"
          value="Claim.claimant.Gender"
          valueType="typekey.GenderType">
          <Reflect
            triggerIds="Claimant_Picker"
            value="VALUE.Gender"/>
        </TypeKeyInput>
        <TypeKeyInput
          id="Claimant_MaritalStatus"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.Claimant.MaritalStatus&quot;)"
          value="Claim.claimant.MaritalStatus"
          valueType="typekey.MaritalStatus">
          <Reflect
            triggerIds="Claimant_Picker"
            value="VALUE.MaritalStatus"/>
        </TypeKeyInput>
        <InputDivider/>
        <!-- End of Injured Worker Section  Employment Data Section -->
        <Label
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData&quot;)"/>
        <TextInput
          id="EmploymentData_EmploymentLocation"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.EmploymentLocation&quot;)"
          value="Claim.LocationCode"
          valueType="entity.PolicyLocation"/>
        <BooleanRadioInput
          editable="true"
          id="EmploymentData_ClassCodeByLocation"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.ClassCodeByLocation&quot;)"
          value="Claim.ClaimWorkComp.ClassCodeByLocation">
          <PostOnChange
            target="EmploymentData_ClassCode"/>
        </BooleanRadioInput>
        <RangeInput
          editable="true"
          id="EmploymentData_ClassCode"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.ClassCode&quot;)"
          value="Claim.EmploymentData.ClassCode"
          valueRange="FilteredClassCodes"
          valueType="entity.ClassCode"/>
        <TextInput
          editable="true"
          id="EmploymentData_Occupation"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.Occupation&quot;)"
          value="Claim.claimant.Occupation">
          <Reflect
            triggerIds="Claimant_Picker"
            value="VALUE.Occupation"/>
        </TextInput>
        <TextInput
          editable="true"
          id="EmploymentData_DepartmentCode"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.DepartmentCode&quot;)"
          value="Claim.EmploymentData.DepartmentCode"/>
        <DateInput
          dateFormat="short"
          editable="true"
          id="EmploymentData_HireDate"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.HireDate&quot;)"
          timeFormat="short"
          validationExpression="Claim.EmploymentData.HireDate == null || Claim.EmploymentData.HireDate &lt; gw.api.util.DateUtil.currentDate() ? null : DisplayKey.get(&quot;Java.Validation.Date.ForbidFuture&quot;)"
          value="Claim.EmploymentData.HireDate"/>
        <TypeKeyInput
          editable="true"
          id="EmploymentData_HireState"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.HireState&quot;)"
          value="Claim.EmploymentData.HireState"
          valueType="typekey.State"/>
        <TypeKeyInput
          editable="true"
          id="EmploymentData_EmploymentStatus"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.EmploymentStatus&quot;)"
          value="Claim.EmploymentData.EmploymentStatus"
          valueType="typekey.EmploymentStatusType"/>
        <ClaimContactInput
          claim="Claim"
          editable="true"
          id="EmploymentData_SupervisorPicker"
          label="DisplayKey.get(&quot;NVV.Claim.SubView.NewQuickClaimClaimWC.Claim.EmploymentData.SupervisorPicker&quot;)"
          newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
          value="Claim.supervisor"
          valueRange="Claim.RelatedPersonArray"
          valueType="entity.Person"/>
      </InputColumn>
    </DetailViewPanel>
    <Code><![CDATA[property get ContactProhibited() : boolean {
  return Claim.getClaimContact(Claim.claimant).ContactProhibited
}
property set ContactProhibited(prohibited : boolean) {
  var claimContact = Claim.getClaimContact(Claim.claimant)
  if (claimContact != null) claimContact.ContactProhibited = prohibited
}

property get FilteredClassCodes() : ClassCode[] {
  if(Claim.ClaimWorkComp.ClassCodeByLocation) {
    return Claim.Policy.ClassCodes.where( \ code -> Claim.LocationCode.LocationBasedRisks*.ClassCode.contains(code) )
  }
  else {
    return Claim.Policy.ClassCodes
  }
}]]></Code>
  </Screen>
</PCF>