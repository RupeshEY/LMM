<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <DetailViewPanel
    id="FNOLWizardCheckDV"
    mode="ready">
    <Require
      name="claim"
      type="Claim"/>
    <Require
      name="Wizard"
      type="gw.api.claim.NewClaimWizardInfo"/>
    <Variable
      initialValue="Wizard.Check"
      name="check"
      type="gw.api.claim.NewClaimCheck"/>
    <InputColumn>
      <Label
        label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.Financials&quot;)"/>
      <TypeKeyRadioInput
        editable="true"
        filter="VALUE != PaymentMethod.TC_MANUAL"
        id="PaymentMethod"
        label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.PaymentMethod&quot;)"
        value="check.PaymentMethod"
        valueType="typekey.PaymentMethod">
        <PostOnChange/>
      </TypeKeyRadioInput>
      <ClaimContactInput
        claim="claim"
        editable="true"
        id="Payee_Picker"
        label="DisplayKey.get(&quot;NVV.Exposure.SubView.NewQuickClaimClaimGL.Exposure.Claimant.Picker&quot;)"
        required="true"
        value="check.Payee"
        valueRange="claim.PayeeCandidates">
        <PostOnChange/>
      </ClaimContactInput>
      <InputSet
        id="EFTDataInputSet"
        visible="check.IsEFT">
        <RangeInput
          editable="true"
          id="EFTRecords"
          label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.BankData.SelectEFT&quot;)"
          value="check.EFTData"
          valueRange="check.Payee.EFTRecords"
          valueType="entity.EFTData"/>
        <TextAreaInput
          editable="true"
          id="PayTo"
          label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.BankData.BankAcctHolderName&quot;)"
          numRows="1"
          required="true"
          value="check.PayTo">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.AccountName"/>
        </TextAreaInput>
        <TextInput
          editable="true"
          id="BankName"
          label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.BankData.BankName&quot;)"
          value="check.BankName">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.BankName"/>
        </TextInput>
        <RangeRadioInput
          editable="true"
          id="BankAccountType"
          label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.BankData.BankAccountType&quot;)"
          required="true"
          value="check.BankAccountType"
          valueRange="BankAccountType.getTypeKeys( false )"
          valueType="typekey.BankAccountType">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.BankAccountType"/>
        </RangeRadioInput>
        <PrivacyInput
          editable="true"
          encryptionExpression="gw.api.privacy.EncryptionMaskExpressions.maskBankAccountNumber(VALUE)"
          id="BankAccountNumber"
          label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.BankData.BankAccountNumber&quot;)"
          required="true"
          value="check.BankAccountNumber">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.BankAccountNumber"/>
        </PrivacyInput>
        <TextInput
          editable="true"
          id="BankRoutingNumber"
          label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.BankData.BankRoutingNumber&quot;)"
          required="true"
          value="check.BankRoutingNumber">
          <Reflect
            triggerIds="EFTRecords"
            value="VALUE.BankRoutingNumber"/>
        </TextInput>
      </InputSet>
      <RangeInput
        editable="true"
        id="PayeeRole"
        label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.PayeeType&quot;)"
        required="true"
        value="check.PayeeRole"
        valueRange="claim.getAllowedPayeeTypes( check.Payee)"
        valueType="typekey.ContactRole"/>
      <TextInput
        editable="true"
        id="CheckInvoiceNumber"
        label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.InvoiceNumber&quot;)"
        value="check.InvoiceNumber"/>
      <TypeKeyInput
        editable="true"
        id="Payment_Currency"
        label="DisplayKey.get(&quot;Web.NewCheckWizard.NewPaymentDetail.Currency&quot;)"
        required="true"
        value="check.TransactionCurrency"
        valueType="typekey.Currency"
        visible="gw.api.util.CurrencyUtil.isMultiCurrencyMode()">
        <PostOnChange/>
      </TypeKeyInput>
      <BooleanRadioInput
        editable="perm.ExchangeRate.edit"
        falseLabel="DisplayKey.get(&quot;Financials.Multicurrency.Automatic&quot;)"
        id="Payment_ExchangeRateOverride"
        label="DisplayKey.get(&quot;Financials.Multicurrency.ExchangeRateMode&quot;)"
        trueLabel="DisplayKey.get(&quot;Financials.Multicurrency.Manual&quot;)"
        value="check.OverrideExchangeRate"
        visible="check.UseExchangeRate(claim)">
        <PostOnChange/>
      </BooleanRadioInput>
      <TextInput
        editable="check.OverrideExchangeRate"
        format="return &quot;1 &quot; + check.TransactionCurrency.DisplayName + &quot; = #.###### &quot; + claim.Currency.DisplayName;"
        id="Payment_ExchangeRate"
        label="DisplayKey.get(&quot;Financials.Multicurrency.ExchangeRate&quot;)"
        numCols="8"
        value="check.ExchangeRate"
        valueType="java.math.BigDecimal"
        visible="check.UseExchangeRate(claim)">
        <PostOnChange/>
      </TextInput>
      <TextInput
        editable="check.OverrideExchangeRate"
        id="Payment_RateSet_Description"
        label="DisplayKey.get(&quot;Financials.Multicurrency.RateSetDescription&quot;)"
        value="check.ExchangeRateDescription"
        visible="check.UseExchangeRate(claim)"/>
      <DateInput
        id="RateSet_Date"
        label="DisplayKey.get(&quot;Financials.Multicurrency.ExchangeRateDate&quot;)"
        value="check.UpdateTime"
        visible="check.UseExchangeRate(claim)"/>
      <CurrencyInput
        editable="true"
        id="CheckAmount"
        label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.Amount&quot;)"
        required="true"
        validationExpression="check.validateCheckAmount()"
        value="check.TransactionAmount"
        valueType="gw.api.financials.AbstractMutablePairedMoney">
        <PostOnChange/>
      </CurrencyInput>
      <BooleanRadioInput
        editable="true"
        id="ApplyDeductible"
        label="DisplayKey.get(&quot;NVV.Financials.NewPaymentDetail.Transaction.ApplyDeductible&quot;)"
        value="check.ApplyDeductible"
        visible="claim.Exposures[0].Coverage.ClaimDeductible != null">
        <PostOnChange/>
      </BooleanRadioInput>
      <CurrencyInput
        id="CheckTotalAmount"
        label="DisplayKey.get(&quot;Web.FNOLWizard.AutoFirstAndFinal.TotalAmount&quot;)"
        value="check.CheckAmount"
        valueType="gw.api.financials.CurrencyAmountPair"
        visible="claim.Exposures[0].Coverage.ClaimDeductible != null and check.ApplyDeductible"/>
      <TypeKeyInput
        editable="true"
        id="DeliveryMethod"
        label="DisplayKey.get(&quot;NVV.Financials.NewCheckPayee.Check.DeliveryMethod&quot;)"
        required="false"
        value="check.DeliveryMethod"
        valueType="typekey.DeliveryMethod"
        visible="!check.IsEFT"/>
      <TextInput
        editable="true"
        id="CheckMailTo"
        label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.MailTo&quot;)"
        required="true"
        value="check.MailTo"
        visible="!check.IsEFT"/>
      <TextInput
        id="CheckMailToAddr"
        label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.MailingAddress&quot;)"
        value="check.ClaimCheckAddressOwner.Address"
        valueType="entity.Address"
        visible="!check.IsEFT"/>
      <InputSetRef
        def="CCAddressInputSet(check.ClaimCheckAddressOwner)"
        id="MailingAddressInputSet"
        visible="!check.IsEFT"/>
      <DateInput
        editable="true"
        id="ScheduledDeliveryDate"
        label="DisplayKey.get(&quot;Web.FNOLWizard.CheckReady.ScheduledSendDate&quot;)"
        required="false"
        validationExpression="check.ScheduledSendDate.before(java.util.Date.Today) ? DisplayKey.get(&quot;Java.Validation.Date.ForbidPast&quot;) : null"
        value="check.ScheduledSendDate"/>
    </InputColumn>
  </DetailViewPanel>
</PCF>