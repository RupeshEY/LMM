<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <InputSet
    editable="true"
    id="AdditionalTripSegmentInputSet">
    <Require
      name="anAddnlTripSegment"
      type="AddnlTripSegment"/>
    <Require
      name="aTripIncident"
      type="TripIncident"/>
    <Label
      label="DisplayKey.get(&quot;Web.TripIncidentScreen.TripCard.AddnlTripSegments&quot;)"/>
    <TypeKeyInput
      editable="true"
      id="TransportType"
      label="DisplayKey.get(&quot;Web.TripIncidentSegmentLV.CarrierType&quot;)"
      required="true"
      value="anAddnlTripSegment.TransportType"
      valueType="typekey.TransportType">
      <PostOnChange/>
    </TypeKeyInput>
    <TextInput
      editable="true"
      id="CarrierName"
      label="DisplayKey.get(&quot;Web.TripIncidentSegmentLV.CarrierName&quot;)"
      value="anAddnlTripSegment.CarrierName"/>
    <TextInput
      editable="true"
      id="CarrierNumber"
      label="DisplayKey.get(&quot;Web.TripIncidentSegmentLV.CarrierNumber&quot;)"
      numCols="10"
      value="anAddnlTripSegment.CarrierNumber"/>
    <TextInput
      editable="true"
      id="PortOfEmbarkation"
      label="DisplayKey.get(&quot;Web.TripIncidentSegmentLV.PortOfEmbarkation&quot;)"
      numCols="20"
      value="anAddnlTripSegment.PortOfEmbarkation"/>
    <TextInput
      editable="true"
      id="PortOfDisembarkation"
      label="DisplayKey.get(&quot;Web.TripIncidentSegmentLV.PortOfDisembarkation&quot;)"
      numCols="20"
      value="anAddnlTripSegment.PortOfDisembarkation"/>
    <DateInput
      dateFormat="short"
      editable="true"
      id="StartedOn"
      label="DisplayKey.get(&quot;Web.TripIncidentSegmentLV.StartedOn&quot;)"
      timeFormat="short"
      validationExpression="anAddnlTripSegment.StartDate &gt; anAddnlTripSegment.TripSegment.TripIncident.TripRU.EndDate ? DisplayKey.get(&quot;Web.ClaimPolicy.Trips.Segment.DepartureDate.Validation&quot;) : null"
      value="anAddnlTripSegment.StartDate"/>
    <DateInput
      dateFormat="short"
      editable="true"
      id="EndedOn"
      label="DisplayKey.get(&quot;Web.TripIncidentSegmentLV.EndedOn&quot;)"
      timeFormat="short"
      validationExpression="anAddnlTripSegment.StartDate &gt; anAddnlTripSegment.EndDate ? DisplayKey.get(&quot;Web.ClaimPolicy.Trips.Segment.ArrivalDate.Validation&quot;) : null"
      value="anAddnlTripSegment.EndDate"/>
    <InputDivider/>
    <Label
      label="DisplayKey.get(&quot;Web.TripIncidentScreen.TripCard.CostsInvolved&quot;)"/>
    <CurrencyInput
      editable="true"
      formatType="currency"
      id="PaidAmount"
      label="DisplayKey.get(&quot;Web.TripIncidentScreen.TripCard.PaidAmount&quot;)"
      value="anAddnlTripSegment.PaidAmount"/>
    <CurrencyInput
      editable="true"
      formatType="currency"
      id="AgentFees"
      label="DisplayKey.get(&quot;Web.TripIncidentScreen.TripCard.AgentFees&quot;)"
      value="anAddnlTripSegment.AgentFees"
      visible="anAddnlTripSegment.TransportType == TC_AIRLINE or anAddnlTripSegment.TransportType == TC_BUS or anAddnlTripSegment.TransportType == TC_CRUISE_SHIP"/>
    <CurrencyInput
      editable="true"
      formatType="currency"
      id="OtherFees"
      label="DisplayKey.get(&quot;Web.TripIncidentScreen.TripCard.OtherFees&quot;)"
      value="anAddnlTripSegment.OtherFees"/>
    <InputDivider/>
    <Label
      label="DisplayKey.get(&quot;Web.ClaimPolicy.Trips.Segment.Approval&quot;)"/>
    <TypeKeyInput
      id="Assessment"
      label="DisplayKey.get(&quot;Web.ClaimPolicy.Trips.Segment.Approval.Status&quot;)"
      value="anAddnlTripSegment.Assessment"
      valueType="typekey.AssessmentAction"/>
    <CurrencyInput
      formatType="currency"
      id="FinancialImpact"
      label="DisplayKey.get(&quot;Web.ClaimPolicy.Trips.Segment.FinancialImpact&quot;)"
      value="anAddnlTripSegment.getFinancialImpact(  TC_APPROVE )"/>
    <ContentInput
      hideIfReadOnly="true"
      id="AssessmentActions"
      label="DisplayKey.get(&quot;Web.ClaimPolicy.Trips.Segment.Approval.Actions&quot;)">
      <Link
        action="anAddnlTripSegment.Assessment = TC_APPROVE"
        hideIfReadOnly="true"
        id="Approve"
        label="DisplayKey.get(&quot;Web.TripIncidentScreen.Approve&quot;)"
        styleClass="miniButton"
        visible="anAddnlTripSegment.Assessment != TC_APPROVE "/>
      <Link
        action="anAddnlTripSegment.Assessment = TC_REVIEW"
        hideIfReadOnly="true"
        id="Review"
        label="DisplayKey.get(&quot;Web.TripIncidentScreen.Review&quot;)"
        styleClass="miniButton"
        visible="anAddnlTripSegment.Assessment != TC_REVIEW "/>
      <Link
        action="anAddnlTripSegment.Assessment = TC_DENY"
        hideIfReadOnly="true"
        id="Deny"
        label="DisplayKey.get(&quot;Web.TripIncidentScreen.Deny&quot;)"
        styleClass="miniButton"
        visible="anAddnlTripSegment.Assessment != TC_DENY "/>
      <Link
        action="anAddnlTripSegment.Assessment = null"
        hideIfReadOnly="true"
        id="Clear"
        label="DisplayKey.get(&quot;Web.TripIncidentScreen.Clear&quot;)"
        styleClass="miniButton"
        visible="anAddnlTripSegment.Assessment != null"/>
    </ContentInput>
    <TextAreaInput
      available="anAddnlTripSegment.ReasonForDenial == null or anAddnlTripSegment.ReasonForDenial.length == 0"
      editable="true"
      id="ReasonForDenial"
      label="DisplayKey.get(&quot;Web.ClaimPolicy.Trips.Segment.ReasonForDenial&quot;)"
      numCols="40"
      numRows="4"
      required="anAddnlTripSegment.Assessment == TC_DENY "
      value="anAddnlTripSegment.ReasonForDenial"
      visible="anAddnlTripSegment.Assessment == TC_DENY ? true : false"/>
  </InputSet>
</PCF>