<?xml version="1.0"?>
<PCF
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:noNamespaceSchemaLocation="../../../../../pcf.xsd">
  <InputSet
    id="DocumentDetailsEditInputSet"
    mode="default">
    <Require
        name="documentDetailsCCHelper"
        type="gw.document.DocumentDetailsCCHelper"/>
    <Require
        name="fromTemplate"
        type="boolean"/>
    <Variable
      initialValue="new gw.document.DocumentsActionsUIHelper()"
      name="documentsActionsHelper"
      type="gw.document.DocumentsActionsUIHelper"/>
    <Variable
      initialValue="documentDetailsCCHelper.getDocuments().Count == 1 ? documentDetailsCCHelper.getDocuments().single() : null"
      name="document"
      type="Document"/>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="true"
        id="allEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.AllFieldsEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <Label
        label="DisplayKey.get('NVV.Claim.DocumentDetails.Document.Edit')"
        visible="documentDetailsCCHelper.AllowFieldsSubset"/>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="true"
        id="nameEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.NameEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <TextInput
        available="documentDetailsCCHelper.NameEnabled"
        editable="true"
        id="Name"
        label="DisplayKey.get('NVV.Claim.DocumentDetails.Document.Name')"
        required="!documentDetailsCCHelper.AllowFieldsSubset"
        value="documentDetailsCCHelper.Name"
        visible="CurrentLocation.InEditMode"/>
    <ContentInput
      id="DocumentLink"
      label="DisplayKey.get(&quot;NVV.Claim.DocumentDetails.Document.Name&quot;)"
      visible="not CurrentLocation.InEditMode and document != null">
      <Link
        action="document.downloadContent()"
        available="documentsActionsHelper.isViewDocumentContentAvailable(document)"
        download="inline"
        id="NameLink"
        label="documentDetailsCCHelper.Name"
        styleClass="none"
        tooltip="documentsActionsHelper.getViewDocumentContentTooltip(document)"/>
    </ContentInput>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="true"
        id="descriptionEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.DescriptionEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <TextInput
        available="documentDetailsCCHelper.DescriptionEnabled"
        editable="true"
        id="Description"
        label="DisplayKey.get('NVV.Claim.DocumentDetails.Document.Description')"
        value="documentDetailsCCHelper.Description"/>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="not fromTemplate"
        id="mimeTypeEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.MimeTypeEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <RangeInput
        available="documentDetailsCCHelper.MimeTypeEnabled"
        editable="not fromTemplate"
        id="MimeType"
        label="DisplayKey.get('NVV.Claim.DocumentDetails.Document.DocType')"
        optionLabel="gw.document.DocumentsUtil.getMimeTypeLabel(VALUE)"
        required="documentDetailsCCHelper.AllowFieldsSubset"
        value="documentDetailsCCHelper.MimeType"
        valueRange="documentDetailsCCHelper.getMimeTypeList(documentDetailsCCHelper.MimeType)"
        valueType="java.lang.String"
        visible="fromTemplate || documentDetailsCCHelper.ShowMimeType"/>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="documentDetailsCCHelper.Language == null or not fromTemplate"
        id="languageEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.LanguageEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset &amp;&amp; LanguageType.getTypeKeys( false ).Count &gt; 1">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <RangeInput
        available="documentDetailsCCHelper.LanguageEnabled"
        editable="documentDetailsCCHelper.Language == null or not fromTemplate"
        id="Language"
        label="DisplayKey.get('NVV.Claim.DocumentDetails.Document.Language')"
        value="documentDetailsCCHelper.Language"
        valueRange="LanguageType.getTypeKeys( false )"
        valueType="typekey.LanguageType"
        visible="LanguageType.getTypeKeys( false ).Count &gt; 1"/>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="true"
        id="sectionEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.SectionEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <TypeKeyInput
        available="documentDetailsCCHelper.SectionEnabled"
        editable="true"
        id="Section"
        label="DisplayKey.get('NVV.Claim.DocumentDetails.Document.Section')"
        value="documentDetailsCCHelper.Section"
        valueType="typekey.DocumentSection"/>
    <Label
        visible="documentDetailsCCHelper.AllowFieldsSubset"/>
    <InputDivider/>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="documentDetailsCCHelper.RelatedToEditable"
        id="relatedToEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.RelatedToEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <RangeInput
        available="documentDetailsCCHelper.RelatedToEnabled"
        editable="documentDetailsCCHelper.RelatedToEditable"
        id="RelatedTo"
        label="DisplayKey.get('NVV.Claim.ClaimDocumentsFilter.RelatedTo')"
        optionGroupLabel="gw.pcf.RelatedToUtil.getOptionGroupLabel(VALUE as KeyableBean)"
        optionLabel="gw.pcf.RelatedToUtil.getOptionLabel(VALUE as KeyableBean)"
        required="true"
        sortValueRange="false"
        value="documentDetailsCCHelper.RelatedTo"
        valueRange="documentDetailsCCHelper.RelatedToCandidates"
        valueType="gw.pl.persistence.core.Bean"
        visible="documentDetailsCCHelper.RelatedToVisible"/>
    <ListViewInput
        label="DisplayKey.get('NVV.Claim.ClaimDocumentsFilter.RelatedTo')"
        visible="!documentDetailsCCHelper.RelatedToVisible">
      <Toolbar/>
      <ListViewPanel
          alternateEntryStyle="false"
          id="RelatedServiceRequestsLV">
        <RowIterator
            editable="false"
            elementName="ServiceRequest"
            value="documentDetailsCCHelper.RelatedServiceRequests"
            valueType="entity.ServiceRequest[]">
          <Row>
            <TextCell
                id="ServiceRequestDisplayName"
                label="DisplayKey.get('NVV.Claim.ClaimDocumentsFilter.ServiceRequest')"
                value="ServiceRequest.DisplayName"
                width="800"/>
          </Row>
        </RowIterator>
      </ListViewPanel>
    </ListViewInput>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="true"
        id="authorEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.AuthorEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <TextInput
        available="documentDetailsCCHelper.AuthorEnabled"
        editable="true"
        id="Author"
        label="DisplayKey.get('NVV.Claim.DocumentDetails.Document.Author')"
        value="documentDetailsCCHelper.Author"/>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="true"
        id="recipientEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.RecipientEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <TextInput
        available="documentDetailsCCHelper.RecipientEnabled"
        editable="true"
        id="Recipient"
        label="DisplayKey.get('NVV.Claim.DocumentDetails.Document.Recipient')"
        value="documentDetailsCCHelper.Recipient"/>
    <Label
        visible="documentDetailsCCHelper.AllowFieldsSubset"/>
    <InputDivider/>
    <Label
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <LayoutConfig
          colspan="3"/>
    </Label>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="true"
        id="inboundEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.InboundEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <BooleanRadioInput
        available="documentDetailsCCHelper.InboundEnabled"
        editable="true"
        id="InBound"
        label="DisplayKey.get('NVV.Claim.DocumentDetails.Document.InBound')"
        value="documentDetailsCCHelper.Inbound"/>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="true"
        id="statusEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.StatusEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <TypeKeyInput
        available="documentDetailsCCHelper.StatusEnabled"
        editable="true"
        id="Status"
        label="DisplayKey.get('NVV.Claim.DocumentDetails.Document.Status')"
        required="true"
        value="documentDetailsCCHelper.Status"
        valueType="typekey.DocumentStatusType"/>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="true"
        id="securityTypeEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.SecurityTypeEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <TypeKeyInput
        available="documentDetailsCCHelper.SecurityTypeEnabled"
        editable="true"
        id="SecurityType"
        label="DisplayKey.get('NVV.Claim.DocumentDetails.Document.SecurityType')"
        value="documentDetailsCCHelper.SecurityType"
        valueType="typekey.DocumentSecurityType"/>
    <CheckBoxInput
        align="right"
        available="documentDetailsCCHelper.AllowFieldsSubset"
        editable="true"
        id="typeEnabled"
        suppressEmptyLabel="true"
        value="documentDetailsCCHelper.TypeEnabled"
        visible="documentDetailsCCHelper.AllowFieldsSubset">
      <PostOnChange
          target="DocumentDetailsEditInputSet"/>
    </CheckBoxInput>
    <TypeKeyInput
        available="documentDetailsCCHelper.TypeEnabled"
        editable="true"
        id="Type"
        label="DisplayKey.get('NVV.Claim.DocumentDetails.Document.Type')"
        required="true"
        value="documentDetailsCCHelper.Type"
        valueType="typekey.DocumentType"/>
    <RangeInput
      editable="document.OnDMS"
      id="IMRDocumentType"
      label="DisplayKey.get('Accelerator.IPLM.Web.DocumentsLV.Cell.IMRDocumentType')"
      required="true"
      value="documentDetailsCCHelper.IMRDocumentType"
      valueRange="typekey.IMRDocumentType_Ext.AllTypeKeys*.DisplayName"
      valueType="String"
      visible="document.Claim.isECFVisible()"/>
  </InputSet>
</PCF>