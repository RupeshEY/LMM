<?xml version="1.0"?>
<PCF
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:noNamespaceSchemaLocation="../../../../../../pcf.xsd">
  <DetailViewPanel
    id="VehicleIncidentDV">
    <Require
      name="VehicleIncident"
      type="VehicleIncident"/>
    <Require
      name="unusedServiceRequests"
      type="java.util.Set&lt;ServiceRequest&gt;"/>
    <Variable
      initialValue="VehicleIncident.Claim"
      name="Claim"
      type="Claim"/>
    <Variable
      initialValue="gw.vendormanagement.SpecialistServiceCodeConstants.AUTOAPPRAISAL"
      name="appraisalIncidentCode"
      type="String"/>
    <Variable
      initialValue="createOtherServiceRequests()"
      name="otherServiceRequests"
      type="java.util.Set&lt;ServiceRequest&gt;"/>
    <InputColumn>
      <Label
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle&quot;)"/>
      <RangeInput
        editable="true"
        id="Vehicle_Picker"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.Picker&quot;)"
        newValue="new Vehicle(VehicleIncident)"
        numCols="15"
        required="true"
        sortValueRange="false"
        value="VehicleIncident.Vehicle"
        valueRange="VehicleIncident.AvailableVehicles"
        valueType="entity.Vehicle"/>
      <TypeKeyInput
        editable="true"
        id="LossParty"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.LossParty&quot;)"
        value="VehicleIncident.VehicleLossParty"
        valueType="typekey.LossPartyType">
        <Reflect
          triggerIds="Vehicle_Picker">
          <ReflectCondition
            condition="VehicleIncident.Claim.Policy.isPolicyVehicle(VALUE)"
            value="typekey.LossPartyType.TC_INSURED"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
        <PostOnChange/>
      </TypeKeyInput>
      <TypeKeyInput
        editable="true"
        id="Vehicle_VehicleType"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.Type&quot;)"
        value="VehicleIncident.VehicleType"
        valueType="typekey.VehicleType">
        <Reflect
          triggerIds="Vehicle_Picker">
          <ReflectCondition
            condition="VehicleIncident.Claim.Policy.isPolicyVehicle(VALUE)"
            value="typekey.VehicleType.TC_LISTED"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </TypeKeyInput>
      <TextInput
        available="Claim.canEditVehicle(VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_Year"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.Year&quot;)"
        required="true"
        value="VehicleIncident.Vehicle.Year"
        valueType="java.lang.Integer">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Picker"
          value="VALUE.Year"/>
      </TextInput>
      <TextInput
        available="Claim.canEditVehicle(VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_Make"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.Make&quot;)"
        required="true"
        value="VehicleIncident.Vehicle.Make">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Picker"
          value="VALUE.Make"/>
      </TextInput>
      <TextInput
        available="Claim.canEditVehicle(VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_Model"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.Model&quot;)"
        required="true"
        value="VehicleIncident.Vehicle.Model">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Picker"
          value="VALUE.Model"/>
      </TextInput>
      <TypeKeyInput
        available="Claim.canEditVehicle(VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_Style"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.Style&quot;)"
        required="false"
        value="VehicleIncident.Vehicle.Style"
        valueType="typekey.VehicleStyle">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Picker"
          value="VALUE.Style"/>
        <PostOnChange/>
      </TypeKeyInput>
      <TextInput
        available="Claim.canEditVehicle(VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_Color"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.Color&quot;)"
        value="VehicleIncident.Vehicle.Color">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Picker"
          value="VALUE.Color"/>
      </TextInput>
      <TextInput
        available="Claim.canEditVehicle(VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_VIN"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.VIN&quot;)"
        value="VehicleIncident.Vehicle.Vin"
        visible="VehicleIncident.Vehicle.Style != TC_BOAT and VehicleIncident.Vehicle.Style != TC_ATV and VehicleIncident.Vehicle.Style != TC_SNOWMOBILE">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Picker"
          value="VALUE.Vin"/>
      </TextInput>
      <TextInput
        available="Claim.canEditVehicle(VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_SerialNumber"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.SerialNumber&quot;)"
        value="VehicleIncident.Vehicle.SerialNumber"
        visible="VehicleIncident.Vehicle.Style == TC_BOAT or VehicleIncident.Vehicle.Style == TC_ATV or VehicleIncident.Vehicle.Style == TC_SNOWMOBILE">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Picker"
          value="VALUE.SerialNumber"/>
      </TextInput>
      <TypeKeyInput
        available="Claim.canEditVehicle(VehicleIncident.Vehicle)"
        editable="true"
        filter="VALUE.hasCategory(JurisdictionType.TC_VEHICLE_REG)"
        id="Vehicle_State"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.State&quot;)"
        value="VehicleIncident.Vehicle.State"
        valueType="typekey.Jurisdiction">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Picker"
          value="VALUE.State"/>
      </TypeKeyInput>
      <TextInput
        available="Claim.canEditVehicle(VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_LicensePlate"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.LicensePlate&quot;)"
        numCols="15"
        value="VehicleIncident.Vehicle.LicensePlate">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Picker"
          value="VALUE.LicensePlate"/>
      </TextInput>
      <TypeKeyInput
        available="Claim.canEditVehicle(VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_BoatType"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.BoatType&quot;)"
        value="VehicleIncident.Vehicle.BoatType"
        valueType="typekey.BoatType"
        visible="VehicleIncident.Vehicle.Style == TC_BOAT">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Picker"
          value="VALUE.BoatType"/>
      </TypeKeyInput>
      <TypeKeyInput
        available="Claim.canEditVehicle(VehicleIncident.Vehicle)"
        editable="true"
        id="Vehicle_OffRoadStyle"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Vehicle.OffRoadStyle&quot;)"
        value="VehicleIncident.Vehicle.OffRoadStyle"
        valueType="typekey.OffRoadVehicleStyle"
        visible="VehicleIncident.Vehicle.Style == TC_ATV or VehicleIncident.Vehicle.Style == TC_SNOWMOBILE">
        <Reflect
          available="Claim.canEditVehicle(VALUE)"
          triggerIds="Vehicle_Picker"
          value="VALUE.OffRoadStyle"/>
      </TypeKeyInput>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Driver&quot;)"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        helpText="DisplayKey.get(&quot;Web.VehicleIncidentDV.Driver.Picker.Help&quot;)"
        id="Driver_Picker"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Driver.Picker&quot;)"
        newContactMenu="ClaimNewPersonOnlyPickerMenuItemSet"
        required="!VehicleIncident.VehicleParked"
        value="VehicleIncident.driver"
        valueRange="Claim.RelatedPersonArray"
        valueType="entity.Person"
        visible="true"/>
      <TypeKeyInput
        editable="true"
        id="ReasonForUse"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.ReasonForUse&quot;)"
        value="VehicleIncident.VehicleUseReason"
        valueType="typekey.ReasonForUse"/>
      <TypeKeyInput
        editable="true"
        id="RelationToInsured"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Driver.RelationToOwner&quot;)"
        required="(VehicleIncident.VehicleLossParty ==  TC_INSURED) and !VehicleIncident.VehicleParked"
        value="VehicleIncident.DriverRelation"
        valueType="typekey.PersonRelationType"
        visible="true">
        <Reflect
          triggerIds="Driver_Picker">
          <ReflectCondition
            condition="VALUE==Claim.Insured"
            value="&quot;self&quot;"/>
          <ReflectCondition
            condition="VALUE==Claim.reporter"
            value="Claim.ReportedByType"/>
          <ReflectCondition
            condition="VALUE==Claim.maincontact"
            value="Claim.MainContactType"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </TypeKeyInput>
      <!-- <Input
        editable="true"
        id="RelationToOwner"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Driver.RelationToOwner&quot;)"
        value="VehicleIncident.DriverRelToOwner"
        visible="(VehicleIncident.VehicleLossParty == &quot;third_party&quot;)"/> -->
      <BooleanRadioInput
        editable="true"
        id="OwnersPermission"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.OwnersPermission&quot;)"
        required="false"
        value="VehicleIncident.OwnersPermission"
        visible="true">
        <Reflect
          triggerIds="RelationToInsured">
          <ReflectCondition
            condition="VALUE == TC_SELF"
            value="true"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </BooleanRadioInput>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="Owner_Picker"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Owner.Picker&quot;)"
        value="VehicleIncident.incidentowner"
        valueRange="Claim.RelatedContacts"
        visible="VehicleIncident.VehicleLossParty == TC_THIRD_PARTY">
        <Reflect
          triggerIds="RelationToInsured">
          <ReflectCondition
            condition="VALUE==TC_SELF"
            value="VehicleIncident.driver"/>
          <ReflectCondition
            condition="true"
            value="&quot;&quot;"/>
        </Reflect>
      </ClaimContactInput>
      <TypeKeyInput
        editable="true"
        id="Driver_IsKidInPolicy"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Driver.IsKidInPolicy&quot;)"
        value="VehicleIncident.MinorOnPolicy"
        valueType="typekey.YesNo"
        visible="VehicleIncident.DriverRelation == TC_CHILD">
        <PostOnChange/>
      </TypeKeyInput>
      <TypeKeyInput
        editable="true"
        id="Driver_IsKidInPolicy_Percentagedriven"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Driver.IsKidInPolicy.Percentagedriven&quot;)"
        required="false"
        value="VehicleIncident.PercentageDrivenByMinor"
        valueType="typekey.PercentageDriven"
        visible=" VehicleIncident.DriverRelToOwner == TC_CHILD and VehicleIncident.MinorOnPolicy == TC_NO "/>
      <TextInput
        id="Driver_Phone"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Driver.Phone&quot;)"
        value="VehicleIncident.driver.PrimaryPhoneValue">
        <Reflect
          triggerIds="Driver_Picker"
          value="VALUE.PrimaryPhoneValue"/>
      </TextInput>
      <TextAreaInput
        id="Driver_Address"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Driver.Address&quot;)"
        numCols="25"
        numRows="2"
        value="VehicleIncident.driver.PrimaryAddressDisplayValue">
        <Reflect
          triggerIds="Driver_Picker"
          value="VALUE.PrimaryAddressDisplayValue"/>
      </TextAreaInput>
      <TextInput
        id="Driver_License"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Driver.License&quot;)"
        value="VehicleIncident.driver.LicenseNumber">
        <Reflect
          triggerIds="Driver_Picker"
          value="VALUE.LicenseNumber"/>
      </TextInput>
      <TypeKeyInput
        filter="VALUE.hasCategory(JurisdictionType.TC_DRIVING_LIC)"
        id="Driver_LicenseState"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Driver.LicenseState&quot;)"
        value="VehicleIncident.driver.LicenseState"
        valueType="typekey.Jurisdiction">
        <Reflect
          triggerIds="Driver_Picker"
          value="VALUE.LicenseState"/>
      </TypeKeyInput>
      <InputDivider/>
      <InputSetRef
        def="LoanInformationInputSet(VehicleIncident)"/>
      <ListViewInput
        boldLabel="true"
        def="DriverCitationsLV(VehicleIncident)"
        editable="true"
        id="Driver_Citations"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Driver.Citations&quot;)"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            iterator="Driver_Citations.DriverCitationsLV"/>
        </Toolbar>
      </ListViewInput>
      <ListViewInput
        boldLabel="true"
        def="EditableIncidentContactsLV(VehicleIncident)"
        editable="true"
        id="Contacts"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.AssociatedContacts&quot;)"
        labelAbove="true">
        <Toolbar>
          <IteratorButtons
            iterator="Contacts.EditableIncidentContactsLV"/>
        </Toolbar>
      </ListViewInput>
      <Label
        label="DisplayKey.get(&quot;Web.ServicesScreen.ServiceRequest.ServiceToPerform&quot;)"/>
      <TextInput
        id="ServiceRequestSubmitMessageFNOL"
        labelAbove="true"
        value="DisplayKey.get(&quot;Web.ServiceRequest.FNOL.SubmitMessage&quot;)"
        visible="Claim.DraftClaim"/>
      <TextInput
        id="ServiceRequestSubmitMessage"
        labelAbove="true"
        value="DisplayKey.get(&quot;Web.ServiceRequest.SubmitMessage&quot;)"
        visible="not Claim.DraftClaim and CurrentLocation.InEditMode"/>
      <InputSetRef
        def="AppraisalServiceInputSet(PropertyAppraisalServiceRequest, VehicleIncident, unusedServiceRequests, appraisalIncidentCode)"
        id="AppraisalServiceInputSet"/>
      <InputSetRef
        def="RentalServiceInputSet(RentalServiceRequest, VehicleIncident, unusedServiceRequests)"
        id="RentalServiceInputSet"/>
      <InputSetRef
        def="OtherServicesLVInputGroupInputSet(Claim, VehicleIncident, otherServiceRequests, otherServiceRequests, unusedServiceRequests, {})"/>
    </InputColumn>
    <InputColumn>
      <TextAreaInput
        align="left"
        boldLabel="true"
        editable="true"
        id="Description"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Description&quot;)"
        labelAbove="true"
        numCols="25"
        numRows="3"
        value="VehicleIncident.Description"/>
      <Label
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Details&quot;)"/>
      <BooleanRadioInput
        editable="true"
        id="VehicleParked"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.VehicleParked&quot;)"
        value="VehicleIncident.VehicleParked">
        <PostOnChange/>
      </BooleanRadioInput>
      <TypeKeyInput
        editable="true"
        id="LossOccured"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.LossOccured&quot;)"
        required="true"
        value="VehicleIncident.LossOccured"
        valueType="typekey.LossOccured">
        <PostOnChange/>
      </TypeKeyInput>
      <TextInput
        editable="true"
        id="LossDesc"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.LossDesc&quot;)"
        value="VehicleIncident.LossDesc"
        visible="VehicleIncident.LossOccured==TC_OTHER"/>
      <BooleanRadioInput
        editable="true"
        id="Exposure_AirbagsDeployed"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.AirbagsDeployed&quot;)"
        value="VehicleIncident.AirbagsDeployed"
        visible="!VehicleIncident.VehicleParked"/>
      <BooleanRadioInput
        editable="true"
        id="Exposure_EquipmentFailure"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.EquipmentFailure&quot;)"
        value="VehicleIncident.EquipmentFailure"/>
      <BooleanRadioInput
        editable="true"
        id="Operable"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Operable&quot;)"
        value="VehicleIncident.VehicleOperable"/>
      <BooleanRadioInput
        editable="true"
        id="TotalLoss"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.TotalLoss&quot;)"
        value="VehicleIncident.TotalLoss"/>
      <CurrencyInput
        editable="true"
        id="LossEstimate"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.LossEstimate&quot;)"
        numCols="10"
        value="VehicleIncident.LossEstimate"/>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Collision&quot;)"/>
      <BooleanRadioInput
        editable="true"
        id="Collision_Indicator"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.CollisionIndicator&quot;)"
        value="VehicleIncident.Collision">
        <PostOnChange/>
      </BooleanRadioInput>
      <BooleanRadioInput
        editable="true"
        id="HitAndRun"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.HitAndRun&quot;)"
        value="VehicleIncident.HitAndRun"
        visible="VehicleIncident.Collision">
        <PostOnChange/>
      </BooleanRadioInput>
      <BooleanRadioInput
        editable="true"
        id="PhantomVehicle"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.PhantomVehicle&quot;)"
        value="VehicleIncident.PhantomVehicle"
        visible="VehicleIncident.HitAndRun"/>
      <TextInput
        editable="true"
        id="Speed"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Speed&quot;)"
        value="VehicleIncident.Speed"
        valueType="java.lang.Integer"
        visible="VehicleIncident.Collision and !VehicleIncident.VehicleParked"/>
      <TypeKeyInput
        editable="true"
        id="VehicleDirection"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.VehicleDirection&quot;)"
        value="VehicleIncident.VehicleDirection"
        valueType="typekey.VehicleDirection"
        visible="VehicleIncident.Collision"/>
      <TypeKeyInput
        editable="true"
        id="CollisionPoint"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.CollisionPoint&quot;)"
        value="VehicleIncident.CollisionPoint"
        valueType="typekey.CollisionPoint"
        visible="VehicleIncident.Collision"/>
      <TypeKeyInput
        editable="true"
        id="Exposure_TrafficViolation"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.TrafficViolation&quot;)"
        value="VehicleIncident.TrafficViolation"
        valueType="typekey.YesNo"
        visible="VehicleIncident.Collision"/>
      <InputDivider/>
      <Label
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.Theft&quot;)"
        visible="VehicleIncident.VehicleLossParty ==  TC_INSURED or VehicleIncident.VehicleLossParty == null"/>
      <BooleanRadioInput
        editable="true"
        id="Theft_Indicator"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.TheftIndicator&quot;)"
        value="VehicleIncident.VehStolenInd"
        visible="(VehicleIncident.VehicleLossParty ==  TC_INSURED or VehicleIncident.VehicleLossParty == null) or VehicleIncident.VehStolenInd">
        <PostOnChange/>
      </BooleanRadioInput>
      <BooleanRadioInput
        editable="true"
        id="Theft_VehLockInd"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.VehLockInd&quot;)"
        value="VehicleIncident.VehLockInd"
        visible="VehicleIncident.VehStolenInd">
        <PostOnChange/>
      </BooleanRadioInput>
      <BooleanRadioInput
        editable="true"
        id="Theft_AntiThftInd"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.AntiThftInd&quot;)"
        value="VehicleIncident.AntiThftInd"
        visible="VehicleIncident.VehStolenInd">
        <PostOnChange/>
      </BooleanRadioInput>
      <TextInput
        editable="true"
        id="Theft_OdomRead"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.OdomRead&quot;)"
        value="VehicleIncident.OdomRead"
        valueType="java.lang.Integer"
        visible="VehicleIncident.VehStolenInd">
        <PostOnChange/>
      </TextInput>
      <TypeKeyInput
        editable="true"
        id="Theft_AffdvCmplInd"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.AffdvCmplInd&quot;)"
        required="false"
        value="VehicleIncident.AffdvCmplInd"
        valueType="typekey.YesNo"
        visible="VehicleIncident.VehStolenInd">
        <PostOnChange/>
      </TypeKeyInput>
      <!-- <ClaimContactInput
        claim="Claim"
        editable="true"
        id="Theft_AffdvCmplBy"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.AffdvCmplBy&quot;)"
        required="false"
        value="VehicleIncident.InsuredRep"
        valueRange="Exposure.Claim.RelatedContacts"
        visible="VehicleIncident.AffdvCmplInd == &quot;Yes&quot;"/> -->
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="Theft_AffdvCmplBy"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.AffdvCmplBy&quot;)"
        required="false"
        value="VehicleIncident.InsuredRep"
        valueRange="Claim.RelatedContacts"
        visible="VehicleIncident.AffdvCmplInd == TC_YES"/>
      <Label
        id="TheftRecovery"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.TheftRecovery&quot;)"
        visible="VehicleIncident.VehStolenInd"/>
      <DateInput
        editable="true"
        id="RecoveryDate"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.RecoveryDate&quot;)"
        value="VehicleIncident.RecovDate"
        visible="VehicleIncident.VehStolenInd"/>
      <TypeKeyInput
        editable="true"
        id="RecoveryState"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.StateOfRecovery&quot;)"
        value="VehicleIncident.RecovState"
        valueType="typekey.State"
        visible="VehicleIncident.VehStolenInd"/>
      <ClaimContactInput
        claim="Claim"
        editable="true"
        id="RecovAgcy_Picker"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.RecoveryingAgency&quot;)"
        value="VehicleIncident.recoveryagent"
        valueRange="Claim.RelatedContacts"
        visible="VehicleIncident.VehStolenInd"/>
      <TypeKeyInput
        editable="true"
        id="RecoveryCondition"
        label="DisplayKey.get(&quot;Web.VehicleIncidentDV.RecoveryCondition&quot;)"
        value="VehicleIncident.RecovCondType"
        valueType="typekey.RecovCondType"
        visible="VehicleIncident.VehStolenInd">
        <PostOnChange/>
      </TypeKeyInput>
      <InputSetRef
        def="CCAddressInputSet(VehicleIncident.RecoveryAddressOwner)"
        id="RecoveryAddress"
        visible="VehicleIncident.VehStolenInd and (VehicleIncident.RecovCondType != null and VehicleIncident.RecovCondType != TC_NOT_RECOV)"/>
      <InputDivider/>
    </InputColumn>
    <InputFooterSection/>
    <Code><![CDATA[uses java.util.Set

function findServiceRequest(serviceCode : String) : ServiceRequest {
  return VehicleIncident.ServiceRequests.firstWhere(\ sr ->
      sr.Instruction.Services.Count == 1
          and sr.Instruction.Services.single().Service.Code == serviceCode
          and (otherServiceRequests == null or not otherServiceRequests.contains(sr))
  )
}

property get PropertyAppraisalServiceRequest() : ServiceRequest {
  return findServiceRequest(appraisalIncidentCode)
}

property get RentalServiceRequest() : ServiceRequest {
  return findServiceRequest(gw.vendormanagement.SpecialistServiceCodeConstants.AUTORENTAL)
}

function createOtherServiceRequests() :  Set<ServiceRequest> {
  return VehicleIncident.ServiceRequests.where(\sr -> sr != PropertyAppraisalServiceRequest and sr != RentalServiceRequest).toSet()
}

function areAllOtherRequestsEditable() : boolean {
  return otherServiceRequests.allMatch( \ sr -> sr.IsEditableInUI)
}]]></Code>
  </DetailViewPanel>
</PCF>
