ARRAY = Array
BEAN = Bean
BOOLEAN = Boolean
DATETIME = DateTime
FUNCTION = Function
IDENTIFIER = Identifier
METATYPENAME = Type
NULLTYPENAME = Null
NUMERIC = Number
STRING = String
MSG_SYNTAX_ERROR = Syntax error.
MSG_BAD_IDENTIFIER_NAME = Could not resolve symbol for : {0}
MSG_END_OF_STMT = Expecting end of statement. Possible bad or missing operator.
MSG_END_OF_EXPRESSION = Expecting end of expression. Possible bad or missing operator.
MSG_EXPECTING_OPERATOR_TO_FOLLOW_EXPRESSION = Incomplete Statement. Expecting operator to follow expression.
MSG_EXPECTING_ARGS = Expecting argument[s] for function, {0}
MSG_EXPECTING_EXPRESSION_CLOSE = Expecting ')' to close parenthesized expression.
MSG_EXPECTING_FUNCTION_CLOSE = Expecting ')' to close function call.
MSG_EXPECTING_TYPE_NAME = Expecting a type name.
MSG_PARAMETERIZATION_NOT_SUPPORTED_FOR_TYPE = {0} does not support parameterization.
MSG_NO_ARGUMENTS = Function {0} accepts no arguments.
MSG_NULL_SYMBOL_TABLE = Symbol table is null or empty.
MSG_TYPE_MISMATCH = The type "{1}" cannot be converted to "{0}"
MSG_VALUE_MISMATCH = Value mismatch. The literal value, "{0}", cannot be converted to a {1}.
MSG_WRONG_NUM_OF_ARGS = Wrong number of arguments for function, {0}
MSG_EXPECTING_NAME_FUNCTION_DEF = Expecting a name for the function.
MSG_EXPECTING_LEFTPAREN_FUNCTION_DEF = Expecting '(' to open function argument declaration.
MSG_EXPECTING_RIGHTPAREN_FUNCTION_DEF = Expecting ')' to close function argument declaration.
MSG_EXPECTING_TYPE_FUNCTION_DEF = Expecting ":" clause for function declaration.
MSG_EXPECTING_TYPE_LITERAL_FUNCTION_DEF = Expecting type after ":" for function declaration.
MSG_EXPECTING_IDENTIFIER_FOREACH = Expecting identifier for "for...in" statement.
MSG_EXPECTING_IDENTIFIER_FOREACH_INDEX = Expecting identifier in the "for...in" statement's "index".
MSG_EXPECTING_IDENTIFIER_FOREACH_ITERATOR = Expecting identifier in the "for...in" statement's "iterator".
MSG_FOREACH_ITERATOR_NOT_ALLOWED =  "iterator" is not allowed in a "for...in" statement without a loop variable.
MSG_ITERATOR_SYMBOL_ONLY_SUPPORTED_ON_ITERABLE_OBJECTS = An "iterator" symbol is only supported for Iterable objects.
MSG_EXPECTING_IDENTIFIER_EXISTS = Expecting identifier for "exists" expression
MSG_EXPECTING_IDENTIFIER_EXISTS_INDEX = Expecting identifier in the "exists" expression's "index".
MSG_EXPECTING_IN_FOREACH = Expecting "in" clause for "for...in" statement.
MSG_EXPECTING_LEFTPAREN_FE = Expecting '(' in "for...in" statement.
MSG_EXPECTING_RIGHTPAREN_FE = Expecting ')' in "for...in" statement.
MSG_EXPECTING_LEFTPAREN_BLOCK = Expecting '(' in block type declaration.
MSG_EXPECTING_RIGHTPAREN_BLOCK = Expecting ')' in block type declaration.
MSG_EXPECTING_COLON_BLOCK = Expecting ':' in block type declaration.
MSG_EXPECTING_IN_EXISTS = Expecting "in" clause for "exists" expression.
MSG_EXPECTING_WHERE_EXISTS = Expecting "where" clause for "exists" expression.
MSG_EXPECTING_LEFTPAREN_EXISTS = Expecting '(' in "exists" expression.
MSG_EXPECTING_RIGHTPAREN_EXISTS = Expecting ')' in "exists" expression.
MSG_EXPECTING_LEFTPAREN_EVAL = Expecting '(' to open "eval" expression.
MSG_EXPECTING_RIGHTPAREN_EVAL = Expecting ')' to close "eval" expression.
MSG_EXPECTING_LEFTPAREN_CATCH = Expecting '(' in "catch" clause of "try...catch...finally" statement.
MSG_EXPECTING_RIGHTPAREN_CATCH = Expecting ')' in "catch" clause of "try...catch...finally" statement.
MSG_EXPECTING_IDENTIFIER_CATCH = Expecting identifier for "catch" clause of "try...catch...finally" statement.
MSG_CATCH_OR_FINALLY_REQUIRED = Expecting a "catch" or "finally" clause in "try...catch...finally" statement.
MSG_EXPECTING_LEFTBRACE_STMTBLOCK = Expecting '{' to open statement block.
MSG_EXPECTING_RIGHTBRACE_STMTBLOCK = Expecting '}' to close statement block.
MSG_EXPECTING_LEFTPAREN_IF = Expecting '(' to open "if" condition.
MSG_EXPECTING_RIGHTPAREN_IF = Expecting ')' to close "if" condition.
MSG_EXPECTING_LEFTPAREN_SWITCH = Expecting '(' to open "switch" expression.
MSG_EXPECTING_RIGHTPAREN_SWITCH = Expecting ')' to close "switch" expression.
MSG_EXPECTING_LEFTPAREN_WHILE = Expecting '(' to open "while" condition.
MSG_EXPECTING_RIGHTPAREN_WHILE = Expecting ')' to close "while" condition.
MSG_EXPECTING_LEFTPAREN_EXCEPT = Expecting '(' to open "except" condition.
MSG_EXPECTING_RIGHTPAREN_EXCEPT = Expecting ')' to close "except" condition.
MSG_EXPECTING_WHILE_DO = Expecting "while" clause to close "do...while" statement.
MSG_LOOP_DOESNT_LOOP = Loop doesn't loop
MSG_EXPECTING_EQUALS_ASSIGN = Expecting '=' for assignment statement.
MSG_EXPECTING_EXPRESSSION_ON_RHS = Expecting a valid rhs expression for assignment statement.
MSG_EXPECTING_STATEMENT = Expecting statement.
MSG_EXPECTING_BEANTYPE = Expecting complex type for member-access. Found: {0}
MSG_EXPECTING_ARRAYTYPE_FOREACH = Expecting iterable type after 'in' clause in "for...in" statement. Found: {0}
MSG_EXPECTING_ARRAYTYPE_EXISTS = Expecting Array type after 'in' clause in "exists" expression. Found:
MSG_EXPECTING_IDENTIFIER_ARG_TYPE = Expecting type name after ":" for function argument.
MSG_EXPECTING_ARRAY_BRACKET = Expecting ']' to close array type literal.
MSG_EXPECTING_NEW_ARRAY_OR_CTOR = Expecting '[' or '(' to begin a new array or object operation.
MSG_EXPECTING_OPEN_BRACE_FOR_NEW_ARRAY = Expecting '{{' to begin a list of array value expressions.
MSG_EXPECTING_CLOSE_BRACE_FOR_NEW_ARRAY = Expecting '}' to close the list of array value expressions.
MSG_EXPECTING_CLOSING_ANGLE_BRACKET_FOR_TYPE = Expecting '>' to close parameterized type literal.
MSG_EXPECTING_CLOSING_ANGLE_BRACKET_FOR_TYPE_VAR_LIST = Expecting '>' to close type variable list.
MSG_COULD_NOT_PARAMETERIZE = Could not parameterize.
MSG_EXPECTING_OPEN_BRACE_FOR_SWITCH = Expecting '{{' to open "switch" statement.
MSG_EXPECTING_CLOSE_BRACE_FOR_SWITCH = Expecting '}' to close "switch" statement.
MSG_EXPECTING_COLON_TERNARY = Expecting ':' for conditional ternary expression.
MSG_EXPECTING_REFERENCE_TYPE = Expecting reference type, primitive type not allowed here.
MSG_LOSS_OF_PRECISION_IN_CONDITIONAL_EXP = Types cannot be converted without a loss of precision.  Please convert them explicitly.
MSG_EXPECTING_CASE_COLON = Expecting ':' to close "case" expression.
MSG_DUPLICATE_CASE_EXPRESSION = Duplicate case expression.
MSG_TYPE_MISMATCH_IN_CONDIITIONAL_EXP = Type mismatch in conditional ternary expression.
MSG_EXPECTING_IDENTIFIER_VAR = Expecting a variable name.
MSG_EXPECTING_VAR_STMT = Expecting "var" declaration.
MSG_EXPECTING_TYPELITERAL = Expecting a type literal on right side of expression.
MSG_EXPECTING_TYPELITERAL_OR_NAMESPACE = Expecting a type literal or namespace.
MSG_PRIMITIVES_NOT_ALLOWED_HERE = Primitive types not allowed here.
MSG_INCONVERTIBLE_TYPES = Inconvertible types; cannot cast {0} to {1}
MSG_BAD_NAMESPACE = {0} is not a valid namespace.
MSG_EXPECTING_ARRAYLENGTH = Expecting 'length' array property.
MSG_ENTITYBEANS_ARE_IMMUTABLE = The property of the object cannot be modified directly.
MSG_MULTIPLE_DEFAULT_CLAUSES_NOT_PERMITTED = Multiple 'default' clauses detected in "switch" statement.
MSG_CASE_CLAUSE_MAY_NOT_FOLLOW_DEFAULT_CLAUSE = A case clause may not follow the 'default' clause.
MSG_METHOD_NOT_VISIBLE = The function, "{0}", is not visible under the parser's visibility constraints.
MSG_PROPERTY_NOT_VISIBLE = The property, "{0}", is not visible under the parser's visibility constraints.
MSG_OBJECT_RETIRED = The ID, "{0}", references a retired object.
MSG_OBJECT_LITERALS_DEPRECATED = Entity literals have been deprecated, please use a query builder instead.
MSG_DEPRECATED_MEMBER = {0} in {1} has been deprecated.
MSG_EXPECTING_ENTITY_TYPE = Expecting an entity type name in "find" expression.
MSG_EXPECTING_QUERY_PATH = Expecting a query path expression.
MSG_QUERY_PATH_MUST_BEGIN_WITH = The query path expression must begin with "{0}"
MSG_EXPECTING_CONDITIONAL_EXPRESSION = Expecting a conditional expression like "a > b"
MSG_CONDITIONAL_EXPRESSION_EXPECTS_BOOLEAN = boolean expected.
MSG_EXPECTING_IDENTIFIER_FIND = Expecting identifier for "find" expression
MSG_EXPECTING_IN_FIND = Expecting "in" clause for "find" expression.
MSG_EXPECTING_WHERE_FIND = Expecting "where" clause for "find" expression.
MSG_EXPECTING_LEFTPAREN_FIND = Expecting '(' in "find" expression.
MSG_EXPECTING_RIGHTPAREN_FIND = Expecting ')' in "find" expression.
MSG_QUERYPATH_MUST_BEGIN_WITH = The query path must begin with its parent query expression "{0}".
MSG_QUERY_IN_LHS_OP_NOT_ENTITY = {0} does not resolve to an entity type. The "in" operator requires an entity type property on the lhs.
MSG_QUERY_IN_LHS_OP_NOT_ARRAY = {0} does not have an appropriate array type. The \"in\" operator requires an entity type property on the lhs that has a valid array type.
MSG_QUERY_EXPECTED_BOOLEAN_EXPRESSION = {0} is not a boolean expression.
MSG_EXPECTING_READONLY_ENTITY_TYPE = "find" is limited to read-only entity types. Set the "allow-entity-queries" registry element to find writable entities.
MSG_STR_IMMUTABLE = Strings are immutable, they cannot be modified.
MSG_UNTERMINATED_STRING_LITERAL = Unterminated string literal. Expecting ".
MSG_INVALID_CHAR_AT = Illegal escape character at position {0}
MSG_FUNCTION_CLASH_PARAMS = "{0}" in "{1}" clashes with "{2}" in "{3}"; both functions have same erasure, yet neither overrides the other
MSG_UNTERMINATED_COMMENT = Unterminated comment. Expecting "*/".
MSG_UNEXPECTED_EOF = Unexpected end of file
MSG_FUNCTION_ALREADY_DEFINED = {0}, is already defined in {1}
MSG_FUNCTION_CLASH = "{0}" in "{1}" clashes with "{2}" in "{3}"; return types not compatible.
MSG_ATTEMPTING_TO_ASSIGN_WEAKER_ACCESS_PRIVILEGES = "{0}" in "{1}" clashes with "{2}" in "{3}"; attempting to assign weaker access privileges.
MSG_CANNOT_OVERRIDE_FINAL = Cannot override final member "{0}" from "{1}"
MSG_CANNOT_ASSIGN_VALUE_TO_FINAL_VAR = Cannot assign a value to final var "{0}"
MSG_VAR_MIGHT_NOT_HAVE_BEEN_INIT = Var "{0}" might not have been initialized
MSG_VAR_MIGHT_ALREADY_HAVE_BEEN_INIT = Var "{0}" might already have been initialized
MSG_VAR_MIGHT_ALREADY_HAVE_BEEN_INIT_LOOP = Var "{0}" might already have been initialized in loop
MSG_FUNCTION_ALREADY_DEFINED_IN_EXTENDED_CLASS = {0}, is already defined. Extensions cannot override functions.
MSG_DUPLICATE_CLASS_FOUND = Duplicate class found at: {0}.
MSG_DUPLICATE_TYPE_FOUND = Duplicate type found at: {0}.
MSG_DUPLICATE_ENHANCEMENT_FOUND = Duplicate enhancement found at: {0}.
MSG_EXPECTING_OPEN_BRACE_FOR_CLASS_DEF = Expecting '{{' to open "class" statement.
MSG_EXPECTING_CLOSE_BRACE_FOR_CLASS_DEF = Expecting '}' to close "class" statement.
MSG_EXPECTING_NAME_CLASS_DEF = Expecting a name for the class.
MSG_EXPECTING_ENHANCEMENT_DEF = Expecting an enhancement.
MSG_NAMESPACE_CLASS_CONFLICT = The directory path of the class does not correspond with the package name.
MSG_NO_SUCH_FUNCTION = No function defined for {0}.
MSG_CANNOT_EXTEND_PRIMITIVE_TYPE = Cannot extend a primitive type {0}.
MSG_CANNOT_EXTEND_FINAL_TYPE = Cannot extend a final type {0}.
MSG_ENHANCEMENTS_CANNOT_ENHANCE_OTHER_ENHANCEMENTS = Cannot enhance an enhancement {0}.
MSG_CYCLIC_INHERITANCE = Cyclic inheritance involving {0}.
MSG_EXPECTING_OPEN_BRACE_FOR_CONSTRUCTOR_DEF = Expecting '{{' to open constructor body.
MSG_EXPECTING_OPEN_BRACE_FOR_FUNCTION_DEF = Expecting '{{' to open function body.
MSG_EXPECTING_CLOSE_BRACE_FOR_FUNCTION_DEF = Expecting '}' to close function body.
MSG_EXPECTING_CLOSE_BRACE_FOR_CONSTRUCTOR_DEF = Expecting '}' to close constructor body.
MSG_NO_DEFAULT_CTOR_IN = No default constructor in {0}.
MSG_WRONG_NAMESPACE = The package name "{0}" does not correspond with the directory "{1}".
MSG_WRONG_CLASSNAME = The class name {0} does not correspond with the file {1}.
MSG_SAME_NAME_AS_CLASS = "{0}" is already defined as the class name for this file
MSG_EXPECTING_PROPERTY_GET_OR_SET_MODIFIER = Expecting 'get' or 'set' modifier for property.
MSG_EXPECTING_NAME_PROPERTY = Expecting a property name for the variable.
MSG_PROPERTY_ALREADY_DEFINED = Property "{0}" is already defined.
MSG_GETTER_FOR_PROPERTY_ALREADY_DEFINED = Property 'get' function already defined for "{0}".
MSG_SETTER_FOR_PROPERTY_ALREADY_DEFINED = Property 'set' function already defined for "{0}".
MSG_PROPERTY_NOT_WRITABLE = "{0}" is not writable.
MSG_CLASS_PROPERTY_NOT_READABLE = Property, "{0}", of class, "{1}", is not readable.
MSG_CLASS_PROPERTY_NOT_WRITABLE = Property, "{0}", of class, "{1}", is not writable.
MSG_NO_VIEWS_FOR_YOUS = Views are not supported. Consider querying against "{0}"
MSG_VARIABLE_ALREADY_DEFINED = {0}, is already defined. Please use a different name.
MSG_FUNCTION_DECL_MISSING = Internal Error. Could not find decl function symbol for, {0}.
MSG_EXPECTING_DEFAULT_VALUE = Expecting default value assignment. Required parameters must precede optional paramters.
MSG_DEFAULT_VALUE_NOT_ALLOWED = Default value not allowed here
MSG_COMPILE_TIME_CONSTANT_REQUIRED = Expression must be compile-time constant here.
MSG_OVERLOADING_NOT_ALLOWED_WITH_OPTIONAL_PARAMS = Overloading not allowed with optional parameters
MSG_MISSING_REQUIRED_ARGUMENTS = Missing one or more required arguments
MSG_ARGUMENT_ALREADY_DEFINED = Argument already defined
MSG_EXPECTING_NAME_PARAM = Expecting name for parameter
MSG_EXPECTING_NAMED_ARG = Expecting a named argument
MSG_PARAM_NOT_FOUND = Parameter not found
MSG_VARIABLE_REQUEST_DOES_NOT_ALLOW_VALUE = , request variables cannot have an initial value.
MSG_VARIABLE_TYPE_OR_VALUE_REQUIRED = Expecting an "as" and/or ":" for "var" statement.
MSG_VARIABLE_MUST_HAVE_NON_NULL_TYPE = Variables must have a non-null type.  Add an explicit type for this variable.
MSG_CONDITION_IS_ALWAYS_TRUE_FALSE = Condition is always {0}
MSG_VOID_NOT_ALLOWED = 'void' type not allowed here
MSG_FUNCTIONS_NOT_ALLOWED_IN_THIS_CONTEXT = Function declarations not allowed in this context
MSG_CONSTRUCTORS_NOT_ALLOWD_IN_THIS_CONTEXT = Constructors not allowed in this context
MSG_INNER_CLASSES_NOT_ALLOWED_IN_THIS_CONTEXT = Inner class declarations not allowed in this context
MSG_NO_SOURCE_FOUND = No source found for class.
MSG_CANNOT_RETURN_VALUE_FROM_VOID = Cannot return a value from a void function.
MSG_RETURN_NOT_ALLOWED_HERRE = Return statement not allowed here.
MSG_MISSING_RETURN_VALUE = Missing return value.
MSG_EXPECTING_DECL = Expecting declaration for var, function, or property.
MSG_FUNCTION_ARG_NAME_CONFLICTS_WITH_CLASS_VAR = The argument "{0}" of function {1} conflicts with a class field.
MSG_EXPECTING_ARROW_AFTER_BLOCK_ARGS = Expecting '->' to follow block argument declarations.
MSG_EXPECTING_CLOSE_BRACE_FOR_BLOCK = Expecting '}' to follow block statement list.
MSG_EXPECTING_ARROW_AFTER_MAP_KEY = Expecting '->' to follow block argument declarations.
MSG_UNEXPECTED_ARROW = Unexpected '->' in list initializer
MSG_EXPECTING_CLOSE_BRACE_FOR_INITIALIZER = Expecting '}' to follow initializer statement.
MSG_MODIFIER_ABSTRACT_NOT_ALLOWED_HERE = Modifier 'abstract' not allowed here.
MSG_ABSTRACT_METHOD_CANNOT_BE_ACCESSED_DIRECTLY = Abstract method {0} cannot be accessed directly
MSG_NOT_ALLOWED_IN_INTERFACE = Not allowed in interface.
MSG_UNIMPLEMENTED_METHOD = {0} function not implemented: {1}
MSG_INHERITS_UNRELATED_DEFAULTS = {0} Inherits unrelated defaults for {1} from {2} and {3}
MSG_INHERITS_ABSTRACT_AND_DEFAULT = {0} Inherits abstract and default methods for {1} from {2} and {3}
MSG_INTERFACE_CANNOT_EXTEND_CLASS = An interface cannot extend a class, only interfaces.
MSG_CLASS_CANNOT_EXTEND_INTERFACE = A class cannot 'extend' an interface.
MSG_CANNOT_EXTEND_ARRAY = "A class cannot 'extend' an array."
MSG_CLASS_MUST_HAVE_PACKAGE = A class must have a package.
MSG_CLASS_CANNOT_IMPLEMENT_CLASS = A class cannot 'implement' a class.
MSG_ENUM_CANNOT_EXTEND_CLASS = An enum cannot extend a class
MSG_ENUM_CANNOT_HAVE_ANNOTATIONS = An enum constant cannot have annotations
MSG_ENUM_CONSTRUCTOR_MUST_BE_PRIVATE = Enum constructor must be declared private
MSG_ENUM_CONSTRUCTOR_NOT_ACCESSIBLE = Enum constructor is not accessible here
MSG_ENUM_MAY_NOT_HAVE_TYPEPARAM = Enum may not have type parameters
MSG_BAD_CAPTURE_TYPE = Blocks do not support lexical reference to this type of symbol.  Assign to a local variable outside the block to refer to it.
MSG_POTENTIALLY_BAD_CAPTURE = This identifier captures an external variable that does not fully support "out of scope" capturing.  A runtime error may result if the identifier evaluates outside the outermost enclosing function's scope.
MSG_CANNOT_CAPTURE_SYMBOL_IN_BLOCK_IN_ANON_CLASS = You cannot capture symbols in a block nested inside of an anonymous class.
MSG_CANNOT_CAPTURE_SYMBOL_IN_ANON_CLASS_IN_BLOCK = You cannot capture symbols in an anonymous class nested inside of a block.
MSG_EXPECTING_ENHANCE_KEYWORD = Expected "enhance"
MSG_NON_PRIVATE_MEMBERS_MUST_DECLARE_TYPE = Non-private data members must declare a type explicitly.
MSG_DELEGATES_CANNOT_BE_STATIC = Delegates cannot be static.
MSG_DELEGATE_METHOD_CONFLICT = Delegate member conflict: {0} and {1}. Implement the member explicitly to resolve the conflict.
MSG_DELEGATES_SHOULD_NOT_SELF_DELEGATE = Delegates should not self-delegate.
USING_INTERNAL_CLASS = This is an internal class that will change in the future.  It is <b>dangerous and unsupported</b> to use this class.
MSG_EXTENSION_CLASS_NOT_FOUND = Could not find class {0} to extend.
MSG_CANNOT_DEREF_PROPERTIES_IN_WHERE = Cannot dereference property in where clause. Consider using 'exists' clause.
MSG_CANNOT_CALL_METHOD_WITH_WILDCARD_PARAM = Cannot call function having wildcard parameters.
MSG_NO_WILDCARDS = Wildcards are deprecated in Gosu. Please replace the type parameter with "{0}"
MSG_EXPECTING_COLON_ENHANCEMENT = Expecting ':' in enhancement.
MSG_EXPECTING_CLOSE_BRACKET_FOR_LIST_LITERAL = Expecting ']' at the end of a list literal.
MSG_CANNOT_PARAMETERIZE_NONGENERIC = Cannot parameterize a non-generic type.
MSG_TYPE_PARAM_NOT_ASSIGNABLE_TO = Type parameter {0} is not assignable to bounding type {1}.
MSG_TYPE_NOT_ANNOTATION = Type {0} is not an annotation.  It must be a java annotation or implemement interface gw.lang.IAnnotation
MSG_MISPLACED_META_ANNOTATION = This annotation can only be used on an annotation class.
MSG_MISPLACED_ANNOTATION = This annotation cannot be used on an annotation class.
MSG_ANNOTATION_WHEN_NONE_ALLOWED = Annotation "{0}" is not allowed to appear in a {1} declaration.
MSG_TOO_MANY_ANNOTATIONS = Annotation "{0}" can only appear once in a {1} declaration.
MSG_INVALID_TYPE = "{0}" is not a valid type.
MSG_INVALID_GENERIC_EXCEPTION = Generic class may not extend 'java.lang.Throwable'
MSG_INVALID_INNER_TYPE = No inner class "{0}" found on "{1}".
MSG_INVALID_TYPE_WITH_QUALIFIED_NAME = "{0}" has an invalid type: "{1}".
MSG_NOT_A_STATEMENT = Not a statement.
MSG_CANNOT_CONSTRUCT_ABSTRACT_CLASS = "{0}" is abstract; cannot be constructed.
MSG_CANNOT_CONSTRUCT_RECURSIVE_CLASS = "{0}" is recursive; cannot be directly constructed.
MSG_RECURSIVE_CONSTRUCTOR = Recursive constructor invocation.
MSG_MISSING_RETURN = Missing return statement.
MSG_UNREACHABLE_STMT = Unreachable statement.
MSG_BREAK_OUTSIDE_SWITCH_OR_LOOP = Break statement not allowed here.
MSG_CONTINUE_OUTSIDE_LOOP = Continue statement not allowed here.
MSG_PROPERTY_SET_MUST_HAVE_ONE_PARAMETER = Property setters must have exactly one parameter.
MSG_PROPERTY_SET_MUST_RETURN_VOID = Property setter must return void.
MSG_MISSING_PROPERTY_RETURN = Missing property return type.
MSG_IMPLICIT_COERCION_WARNING = An implicit coercion from type {0} to {1} occurs here.  Consider making this explicit with an "as {1}".
MSG_IMPLICIT_COERCION_ERROR = You must explicitly coerce {0} to {1} using the 'as' keyword.
MSG_ASYMMETRICAL_COMPARISON = Asymmetric comparison between {0} and {1}. Consider casting one of the operands.
MSG_SILLY_ASSIGNMENT = A useless assignment from {0} to itself occurs here.  This may be inadvertent, and due to a program error.
MSG_UNUSED_VARIABLE = This {0} is unused.
MSG_LIKELY_JAVA_CAST = This appears to be an attempt to do a java-style cast, which is not correct Gosu.  To cast an expression to another type put "as {0}" after the expression
MSG_UNEXPECTED_TOKEN = Unexpected token: {0}
MSG_EXPECTING_INT_ACCESS_TO_ARR_ETC = Expecting int access to Array, Collection, or String type with array [] operator.
MSG_EXPECTING_BEAN_TYPE_WITH_REFLECTION_OPERATOR = Expecting bean type with [] reflection operator.
MSG_PROPERTY_REFLECTION_ONLY_WITH_STRINGS = Bean property reflection can only be done with Strings.
MSG_EXPECTING_BRACKET_TO_CLOSE_DYNAMIC_MEMBER_ACCESS = Expecting ']' operator to close dynamic member access expression.
MSG_WRONG_NUMBER_OF_ARGS_TO_FUNCTION = Wrong number of arguments to function {0}.  Expected {1}, got {2}.
MSG_WRONG_NUMBER_OF_ARGS_TO_CONSTRUCTOR = Wrong number of arguments to constructor {0}.  Expected {1}, got {2}.
MSG_SHOULD_HAVE_FOUND_METHOD_AT_LINE = Should have found a function at line {0}, column {1}
MSG_VOID_EXPRESSION_NOT_ALLOWED = Expressions in this position must be non-void.
MSG_EXPECTING_RETURN_TYPE_OR_FUN_BODY = Expecting return type or function body.
MSG_INVALID_TYPE_FOR_ANNOTATION_MEMBER = Invalid type for annotation member
MSG_ERRANT_TYPE_VAR = Errant type var
MSG_USING_VOID_RETURN_TYPE_FROM_NON_NULL_EXPR = Using void return type from non-null expression.
MSG_FIELD_TYPE_HAS_NOT_BEEN_INFERRED = The type of this field has not yet been inferred, and thus it cannot be used.  This expression must appear after the field declaration.
MSG_BEAN_CLASS_IS_NULL = Bean class is null!
MSG_BEAN_MEMBER_PATH_IS_NULL = Bean member path is null!
MSG_BEAN_MEMBER_PATH_IS_EMPTY = Bean member path is empty!
MSG_NO_EXPLICIT_TYPE_INFO_FOUND = No explicit type info found for, {0}
MSG_NO_CONSTRUCTOR_FOUND_FOR_CLASS = No constructor found for class, {0}
MSG_WRONG_NUMBER_OF_ARGS_FOR_METHOD_ON_CLASS = Wrong number of arguments for function, {0}, on class, {1}
MSG_NO_METHOD_DESCRIPTOR_FOUND_FOR_METHOD = No function descriptor found for function, {0}, on class, {1}
MSG_METHOD_IS_NOT_STATIC = Function "{0}" is not static on class {1}
MSG_METHOD_IS_STATIC = Function "{0}" is static on class {1}
MSG_NO_PROPERTY_DESCRIPTOR_FOUND = No{0} property descriptor found for property, {1}, on class, {2}
MSG_NO_TYPE_ON_NAMESPACE = No type {0} found in package {1}
MSG_ANY = {0}
MSG_EXPECTING_MEMBER_ACCESS_PATH = Expecting member access path.
MSG_CANNOT_CREATE_NEW_ARRAY_FROM_TYPE_VAR = Cannot create a new instance array from a type variable.  The type can only be accessed and written to.
MSG_NOT_A_VALID_EXCEPTION_TYPE = {0} does not extend Throwable, and cannot be caught.
MSG_CANNOT_INFER_ARGUMENT_TYPE_AT_THIS_POSTION = The argument {0} must provide a type declaration, because it cannot be inferred.
MSG_OBSOLETE_CTOR_SYNTAX = This constructor syntax is obsolete. Use the 'construct' keyword instead.
MSG_OBSOLETE_NOT_EQUAL_OP = The <> operator is obsolete and must be replaced with !=
MSG_MUST_BE_IN_OUTER_TO_CONSTRUCT_INNER = Must be in or derive from class {0} to construct non-static inner class {1}.
MSG_TYPE_DOES_NOT_HAVE_EMPTY_CONSTRUCTOR = The type {0} does not have a default constructor and cannot be implicitly created here.
MSG_ENHANCEMENT_DOES_NOT_ACCEPT_THIS_STATEMENT = Enhancements cannot have statements of this type.
MSG_CANNOT_OVERRIDE_FUNCTIONS_IN_ENHANCEMENTS = The function "{0}" is already defined in the type {1}.  Enhancements cannot override functions.
MSG_CANNOT_OVERRIDE_PROPERTIES_IN_ENHANCEMENTS = The property "{0}" is already defined in the type {1}.  Enhancements cannot override properties.
MSG_ENHANCED_TYPE_MUST_USE_ENHANCEMENT_TYPEVARS = Enhanced type must use all type variables declared by the enhancement.
MSG_ABSTRACT_MEMBER_NOT_IN_ABSTRACT_CLASS = Abstract member not in abstract class.
MSG_ILLEGAL_USE_OF_MODIFIER = Illegal use of modifier, "{0}" cannot be used with "{1}" here
MSG_ILLEGAL_FORWARD_REFERENCE = Illegal forward reference
MSG_MISSING_OVERRIDE_MODIFIER = Missing 'override' modifier. Function {0} overrides and/or implements the function from {1}.
MSG_STATIC_METHOD_CANNOT_OVERRIDE = Static function {0} cannot override/implement the function in {1}.
MSG_OVERRIDES_OBJECT_METHOD = Default method {0} overrides Object method
MSG_INHEREITED_WITH_DIFF_ARG_TYPES = "{0}" cannot be inherited with different type arguments: {1}
MSG_NO_IMPLEMENTS_ALLOWED = No implements clause allowed for interface.
MSG_NO_EXTENDS_ALLOWED = No extends clause allowed for annotation.
MSG_FUNCTION_NOT_OVERRIDE = Function {0} does not override anything
MSG_FUNCTION_NOT_OVERRIDE_PROPERTY = Function {0} does not override anything. Perhaps you mean to override a property {1}?
MSG_PROPERTY_OVERRIDES_WITH_INCOMPATIBLE_TYPE = Property overrides with incompatible type
MSG_SUBCLASS_OBJECT = {0} explicitly subclasses Object
MSG_AMBIGUOUS_SYMBOL_REFERENCE = This is an ambiguous reference.  Please fully qualify the symbol.
MSG_LIST_TO_ARRAYLIST_WARNING = Implicit coercion to ArrayList. Please use ArrayList explicitly.
MSG_VAR_CASE_MISMATCH = The var "{0}" is not referenced by the proper case.  Please change this reference to "{1}".
MSG_FUNCTION_CASE_MISMATCH = The function "{0}" is not referenced by the proper case.  Please change this reference to "{1}".
MSG_PROPERTY_CASE_MISMATCH = The property "{0}" is not referenced by the proper case.  Please change this reference to "{1}".
MSG_TYPE_CASE_MISMATCH = The type "{0}" is not referenced by the proper case.  Please change this reference to "{1}".
MSG_NON_STATIC_ACCESS_OF_STATIC_MEMBER = The property "{0}" is static, but it is not referenced statically on the type {1}.
MSG_NON_STATIC_ACCESS_WITH_IDENTIFIER_OF_STATIC_MEMBER = The property "{0}" is static, but not referenced directly off the type {1}.  \nThere is a conflicting variable or property named "{2}".  Please fully qualify the expression as {3}.{0}.
MSG_STATEMENT_ON_SAME_LINE = Multiple statements occupy the same line; may indicate an unintentional logic error.\nConsider moving statement to a new line.
MSG_MUST_BE_DEFINED_AS_CLASS = Must be defined as "class".
MSG_VOID_RETURN_IN_CTX_EXPECTING_VALUE = This function expects the block to return a value.
MSG_NO_STATIC_CONSTRUCTOR = Constructors cannot be static
MSG_NO_ABSTRACT_METHOD_CALL_IN_CONSTR = Function {0} is abstract and cannot be called in constructor.
MSG_CALLING_OVERRIDABLE_FROM_CTOR = Calling overridable function from constructor: {0}
MSG_AMBIGUOUS_METHOD_INVOCATION = This is an ambiguous function call.
MSG_RETURN_VAL_FROM_VOID_FUNCTION = You are attempting to return a value from a void function.
MSG_BAD_ANONYMOUS_CLASS_DECLARATION = Only java and gosu types may be anonymously extended.
MSG_SINGLE_ANON_CTOR = An anonymous class may define at most one constructor
MSG_ANON_CTOR_PARAMS_CONFLICT_WITH_CALL_SITE = Anonymous constructor parameter types conflict with arg types at the call site
MSG_ASSIGNMENT_IN_IF_STATEMENT = Assignments are not legal inside of if condtions
MSG_ASSIGNMENT_IN_LOOP_STATEMENT = Assignments are not legal inside of loop condtions
MSG_JAVA_STYLE_VARIABLE_DECLARATION = This is a java-style variable declaration.  Please use the "var" keyword instead.
MSG_NUMERIC_TYPE_EXPECTED = Numeric expression expected.
MSG_GETTER_CANNOT_HAVE_PARAMETERS = A property get definition cannot have parameters.
MSG_BAD_TEMPLATE_DIRECTIVE = Invalid template directive.  Valid directives are "extends" and "params".
MSG_CLASSPATH_STATEMENT_EXPECTS_A_STRING = The classpath statement requires a string for the path
MSG_COMMA_IS_THE_CLASSPATH_SEPARATOR = The classpath statement uses commas as a platform-independent path separator
MSG_BITSHIFT_LHS_MUST_BE_INT_OR_LONG = The left-hand side operand must be an int or a long.
MSG_BITWISE_OPERAND_MUST_BE_INT_OR_LONG = Bit-wise logical operand must be an int or a long.
MSG_EXPECTING_LEFTPAREN_USING = Expecting '(' to open \"using\" predicate.
MSG_EXPECTING_RIGHTPAREN_USING = Expecting ')' to close \"using\" predicate.
MSG_BAD_TYPE_FOR_USING_STMT = Using statement predicate must be Closeable, IDisposable, or Lock. Cast to IMonitorLock for Java-style synchronization.
MSG_UNNECESSARY_COERCION = This expression is already of type {0} so casting it to {1} is unnecessary.
MSG_LATER_ASSIGNMENT_MAKES_EXPRESSION_ILLEGAL = A later assignement to {0} cancels the type inference that makes this usage possible.
WSDL_DUPLICATE_WEB_SERVICE = Duplicate web service name.  Only one webservice with the given name can be defined.
MSG_NUMBER_LITERAL_TOO_LARGE = Number literal too large.
WSDL_DUPLICATE_METHOD = Duplicate web service functions.  Overloaded functions must have a different number of parameters, even if the parameter types are different.\n{0} conflicts with {1}.
WSDL_NOT_WEBSERVICE = This annotation is only available on Web Service
WSDL_UNSUPPORTED_TYPE = Web Service cannot reference the following unsupported type: {0} {1}
WSDL_REFERENCE_ABSTRACT_CLASS = Web Service cannot reference an abstract class: {0} {1}
WSDL_REFERENCE_INTERFACE = Web Service cannot reference an interface: {0} {1}
WSDL_REFERENCE_ANNOTATION = Web Service cannot reference an annotation: {0} {1}
WSDL_REFERENCE_TRANSACTION_TYPE = Web Service cannot reference a type in gw.transaction.* namespace: {0} {1}
WSDL_REFERENCE_LIST = Web Service cannot reference List types: {0}.  Instead, try a strongly typed array (e.g. String[]). {1}
WSDL_REFERENCE_MAP = Web Service cannot reference Map types: {0} {1}
WSDL_REFERENCE_COLLECTION = Web Service cannot reference Collection types: {0}.  Instead, try a strongly typed array (e.g. String[]). {1}
WSDL_REFERENCE_PARAMETERIZED_TYPE = Web Service cannot reference Parameterized types: {0}
WSDL_REFERENCE_GENERIC_TYPE = Web Service cannot reference Genericized types: {0} {1}
WSDL_REFERENCE_UNSUPPORTED_NAMESPACE = Web Service cannot reference the following type. It is part of an unsupported namespace, only types from the namespace 'gw.*' (except gw.transaction.*) are allowed: {0} {1}
WSDL_REFERENCE_CLASS_WITHOUT_DEFAULT_CONSTRUCTOR = Class {0} has no default constructor and cannot be referenced by a web service. {1}   //Maybe this should be a warning.
WSDL_REFERENCE_WEBSERVICE = Web Service cannot reference other web service types: {0} {1}
WSDL_REFERENCE_SOAP_TYPE = Web Services cannot reference types in the soap.* namespace: {0} {1}
WSDL_REFERENCE_XML_TYPE = RPC Web Services cannot reference xml based types: {0} {1}
WSDL_READONLY_PROPERTIES = Web Services should not reference types that have read-only properties.  \nSuch types cannot be set a parameter for a web service operation. {0} {1}
WSDL_WRITEONLY_PROPERTIES = Web Services should not reference types that have write-only properties.  \nSuch types cannot be set as a return type to a web service operation. {0} {1}
WSDL_REFERENCE_CAUSES_NAMESPACE_COLLISION = This type causes a web services namespace collision.\nThese two types that have the same relative name and would be exposed to Web Services in the same namespace soap.*.{0}.\nRename one of the following types or ensure that it is not referenced in a web service: {1} and {2}.  {3}
MSG_DELEGATION_NOT_ALLOWED_HERE = Delegation is not allowed here
MSG_DELEGATE_MUST_NOT_BE_STATIC = Static delegation is not supported
MSG_DELEGATES_REPRESENT_INTERFACES_ONLY = A delegate can only represent interface types
MSG_ONLY_INTERFACES_ALLOWED_HERE = Only interfaces allowed here
MSG_ONLY_ONE_CLASS_IN_COMPONENT_TYPE = Only one non-interface is allowed in a component type
MSG_ONLY_ONE_TYPE_VARIABLE = A type variable may not be followed by other bounds
MSG_NO_ARRAY_IN_COMPONENT_TYPE = Arrays are not allowed in a component type
MSG_NO_PRIMITIVE_IN_COMPONENT_TYPE = Primitives are not allowed in a component type
MSG_COMPOUND_TYPE_NOT_ALLOWED_HERE = Compound type is not allowed here
MSG_PARAMETERIZED_TYPE_NOT_ALLOWED_HERE = Parameterized type is not allowed here
MSG_DYNAMIC_TYPE_NOT_ALLOWED_HERE = Dynamic type is not allowed here
MSG_CANNOT_EXTEND_INTERNAL_JAVATYPE = The Java type {0} has package-protected access and cannot be extended or enhanced in Gosu
MSG_CLASS_DOES_NOT_IMPL = Delegate interface not implemented by declaring type: {0}
MSG_EXPECTING_REPRESENTS = Expecting 'represents' clause for delegate
MSG_EXPECTING_LEFTPAREN_AGGREGATE = Expecting '(' to open aggregate type
MSG_EXPECTING_RIGHTPAREN_AGGREGATE = Expecting ')' to close aggregate type
MSG_MEMBER_ACCESS_REQUIRED_FOR_SUPER = Member access required for 'super'
MSG_ALREADY_CONTAINS_TYPE = Already specified type {0}
MSG_OVERRIDING_FUNCTION_MUST_HAVE_SAME_NUMBER_OF_TYPE_VARS = For this function to properly override its parent function, it must have {0} type variables
MSG_AGGREGATES_MUST_CONTAIN_MORE = An aggregate type must have more than one type
MSG_INTERFACE_REDUNDANT = Interface {0} redundant, {1} extends {0}
MSG_NONTERMINAL_CASE_CLAUSE = Prior case clause is non-terminal; possible missing break, continue, or return statement
MSG_ANONYMOUS_CLASS_NOT_ALLOWED_HERE = Anonymous class not allowed here
MSG_PARAMETERIZED_ARRAY_COMPONENT = Parameterized array component type loses type parameter[s] at runtime
MSG_TEMPLATE_EXCEPTION_GENERATED_SOURCE = Generated Source
MSG_TEMPLATE_MISSING_END_TAG_SCRIPTLET = Missing '%>' end tag for scriptlet.
MSG_TEMPLATE_MISSING_END_TAG_EXPRESSION = Missing '%>' end tag for expression.
MSG_TEMPLATE_MISSING_END_TAG_EXPRESSION_ALT = Missing '}' end tag for expression.
MSG_TEMPLATE_MULTIPLE_PARAMS = Multiple "params" directives found.
MSG_TEMPLATE_INVALID_PARAMS = Invalid parameters: {0}
MSG_TEMPLATE_UNKNOWN_DIRECTIVE = Unknown directive {0}.  Valid directives are "params" and "extends".
MSG_EQUALS_FOR_INITIALIZER_EXPR = Expecting an '=' in this object initializer.
MSG_EXPECTING_NAME_VALUE_PAIR = Expecting a property name followed by an '=' and expression value.
MSG_REDUNTANT_INITIALIZERS = The property {0} already has an initializer value.
MSG_ONLY_ONE_COLON_IN_INITIALIZERS = Only one colon can come before a property name in initializers.
MSG_EXPECTING_PROPERTY_NAME = Expecting a property name.
MSG_BLOCK_TYPES_SHOULD_HAVE_ARG_NAMES = Block type parameters should specify names and be in the form 'argName:Type'.
MSG_DIMENSION_MULTIPLICATION_UNDEFINED = Multiplication undefined between dimensions
MSG_DIMENSION_ADDITION_MUST_BE_SAME_TYPE = Operands must both be dimensions of the same final type
MSG_DIMENSION_DIVIDE_SCALAR_BY_DIMENSION = Cannot divide scalar by dimension
MSG_DIMENSION_MUST_BE_FINAL = Dimension arithmetic must involve final types. {0} is not final.
MSG_DIMENSION_NONSTANDARD_NUMBER_NO_OVERRIDE = Missing arithmetic method[s] on Dimension, {0}, with non-standard Number type, {1}
MSG_RELATIONAL_OPERATOR_CANNOT_BE_APPLIED_TO_TYPE = Relational operator {0} cannot be applied to type {1}
MSG_ARITHMETIC_OPERATOR_CANNOT_BE_APPLIED_TO_TYPES = Operator "{0}" cannot be applied to "{1}", "{2}"
MSG_ASSIGNMENTS_MUST_BE_ENCLOSED_IN_CURLIES_IN_BLOCKS = Assignments in a block body must be enclosed in curly brackets
MSG_BLOCKS_CAN_HAVE_A_MOST_SIXTEEN_ARGS = Blocks can have at most 16 args.
MSG_BLOCKS_LITERAL_NOT_ALLOWED_IN_NEW_EXPR = Blocks literals are not allowed in a new expression.
MSG_STATEMENTS_MUST_BE_ENCLOSED_IN_CURLIES_IN_BLOCKS = "{0}" statements in a block body must be enclosed in curly brackets
MSG_NOT_AN_ENHANCEABLE_TYPE = {0} does not support enhancements.
MSG_CANNOT_REFERENCE_CLASS_TYPE_VAR_IN_STATIC_CONTEXT = You cannot reference class type variables in a static context.
MSG_CANNOT_REFERENCE_THIS_IN_STATIC_CONTEXT = You cannot reference 'this' in a static context.
MSG_CANNOT_CALL_NON_STATIC_METHOD_FROM_STATIC_CONTEXT = You cannot reference non-static methods in a static context.
MSG_CANNOT_REFERENCE_NON_STATIC_PROPERTY_FROM_STATIC_CONTEXT = You cannot reference non-static properties in a static context.
MSG_CANNOT_READ_A_WRITE_ONLY_PROPERTY = Write-only properties may only be written
MSG_TYPE_IS_NOT_ITERABLE = Expecting Iterable type for expansion operator - {0}
MSG_INTERVAL_MUST_BE_ITERABLE_HERE = Interval type must be iterable here
MSG_EXTRA_DOT_FOUND_IN_INTERVAL = Interval operator has two dots, found three
MSG_EXPECTING_NUMBER_TO_FOLLOW_DECIMAL = Expecting a decimal number
MSG_IMPROPER_VALUE_FOR_NUMERIC_TYPE = The value {0} does not fall within the domain of numbers of type {1}
MSG_PRIMITIVE_TYPE_PARAM = Primitive type {0} is not allowed here. Type {0} is implicitly transformed to {1} as a type parameter, please use {1} directly.
MSG_CTOR_HAS_XXX_ACCESS = Constructor has {0} access
MSG_TYPE_HAS_XXX_ACCESS = Type {0} has {1} access
MSG_QUERY_SPECIFY_COLUMN = Specify a query column
MSG_QUERY_SPECIFY_QUERY_COLUMN = {0} must specify a column in the database that is queryable
MSG_CANNOT_EXTEND_RAW_GENERIC_TYPE = The generic type {0} requires type argument[s]
MSG_TYPE_VAR_VARIANCE_ERROR = The type variable {0} is declared "{1}" but is used in a "{2}" position with type {3}
MSG_SUPER_CLASS_METHOD_NAME_SAME_AS_SUBCLASS = The super class method {0} conflicts with this class' internal constructor name. Please change either the super class method name or this class name.
MSG_NOT_A_SUPERTYPE = {0] is not a direct super type
MSG_CALL_TO_SUPER_THIS_MUST_BE_FIRST = Call to {0}() must be the first statement in the constructor
MSG_EXPECTING_OPERATOR_TO_FOLLOW_NEW_EXPRESSION = Incomplete Statement. Expecting operator to follow new expression.
MSG_EXPECTING_TYPE_TO_FOLLOW_PACKAGE_NAME = Expecting type to follow package name
MSG_QUERY_FUNCTION_EXPRESSION_RESTRICTION = Only references to database columns or DBFunction method calls are allowed
MSG_QUERY_ORDER_BY_EXPRESSION = Only member access expressions that contain database columns are allowed.
MSG_QUERY_ARRAYS_NOT_ALLOWED = Access to an array is not allowed here.
MSG_APPLICATION_MODIFIER_HAS_BEEN_DEPRECATED = The "application" modifier has been deprecated.  Use the gw.api.web.Scopes.Application map instead.
MSG_SESSION_MODIFIER_HAS_BEEN_DEPRECATED = The "session" modifier has been deprecated.  Use gw.api.web.SessionVar instead.
MSG_REQUEST_MODIFIER_HAS_BEEN_DEPRECATED = The "request" modifier has been deprecated.  Use gw.api.web.RequestVar instead.
MSG_EXECUTION_MODIFIER_HAS_BEEN_DEPRECATED = The "execution" modifier has been deprecated and is meaningless.  You can simply remove it.
MSG_CANNOT_REFERENCE_OUTER_SYMBOL_WITHIN_ENHANCEMENTS = The outer keyword cannot be referenced within enhancements.  Consider moving this anonymous class to a named class.
MSG_CANNOT_REFERENCE_ENCLOSING_PROPERTIES_WITHIN_ENHANCEMENTS = Methods of the enclosing type cannot be referenced within enhancements.  Consider moving this anonymous class to a named class.
MSG_CANNOT_REFERENCE_ENCLOSING_METHODS_WITHIN_ENHANCEMENTS = Methods of the enclosing type cannot be referenced within enhancements.  Consider moving this anonymous class to a named class.
MSG_INVALID_LITERAL = This literal cannot be converted to a {0}.  You will need to construct the value explicitly.
MSG_PROPERTIES_MUST_AGREE_ON_STATIC_MODIFIERS = The getter and setter of properties must either both be static or non-static
MSG_PROPERTIES_MUST_AGREE_ON_TYPE = The getter and setter of properties must agree on the type of the property
MSG_NO_ENCLOSING_INSTANCE_IN_SCOPE = No enclosing instance of type '{0}' in scope
MSG_EXPECTING_CONDITION_FOR_ASSERT = Expecting condition for 'assert'
MSG_EXPECTING_MESSAGE_FOR_ASSERT = Expecting message for 'assert'
MSG_ASSERTIONS_NOT_ALLOWED_HERE = Assert statement not allowed here
MSG_ARRAY_NOT_SUPPORTED = Array type not supported for {0}
MSG_IMPROPER_USE_OF_KEYWORD = Improper use of keyword, {0}
MSG_USES_STMT_CONFLICT = Already using type, {0}
MSG_USES_STMT_DUPLICATE = Duplicate uses statement
MSG_ARRAY_INDEX_MUST_BE_INT = Arrays must be indexed with an int value
MSG_PARAM_TYPE_CANT_BE_INFERRED_FROM_LATE_BOUND_EXPRESSION = Parameter type cannot be inferred from late bound expression type
MSG_LOSS_OF_PRECISION_IN_NUMERIC_LITERAL = This double literal loses precision in this operation.  You must explicitly declare it as a BigDecimal instead: {0}
MSG_COMPILE_TIME_ANNOTATION_FAILED_TO_EXECUTE = A compile time annotation failed to execute.  The message was {0}.  See the console for a stack trace.
MSG_METHOD_REIFIES_TO_SAME_SIGNATURE_AS_ANOTHER_METHOD = A method with the same name reifies to the same signature at the bytecode level.  Rename one of the methods.
MSG_PROPERTY_AND_FUNCTION_CONFLICT = The method {0} conflicts with the implicit methods generated by the property {1}
MSG_PROPERTY_AND_FUNCTION_CONFLICT_UPON_REIFICATION = The method {0} conflicts with the implicit methods generated by the property {1} upon reification
MSG_CANNOT_OVERRIDE_FUNCTION_FROM_ENHANCEMENT = You cannot override a method defined on an enhancement.
MSG_MASKING_ENHANCEMENT_METHODS_MAY_BE_CONFUSING = This method masks a method defined on an enhancement on this type.  This may lead to confusing semantics, since enhancement methods are statically dispatched.
MSG_STRING_COERCION_ON_RHS_OF_ADDITIVE_EXPRESSION_MUST_BE_PARENTHESIZED = Casting to a string within an additive expression may be confusing.  Please parenthesize the expression to evaluate properly.
MSG_EXPLICIT_TYPE_RECOMMENDED_FOR_CATCH_STMTS = You should add an explicitly caught type here.
MSG_SUPER_NOT_ACCESSIBLE_FROM_BLOCK = The super symbol is not accessible from within blocks.
MSG_GENERIC_PROPERTIES_NOT_SUPPORTED = Properties cannot have type variables.
MSG_GENERIC_ANNOTATIONS_NOT_SUPPORTED = Annotations cannot have type variables.
MSG_CATCH_STMT_CANNOT_EXECUTE = This catch statement will never execute because a previous catch statement already catches exceptions of this type.
MSG_IMONITOR_LOCK_SHOULD_ONLY_BE_USED_WITHIN_USING_STMTS = The IMonitorLock interface may only be used within expression-style using statements for legacy-style synchronization.
MSG_STATIC_MODIFIER_NOT_ALLOWED_HERE = The 'static' modifier is not allowed here.
MSG_CANNOT_INSTANTIATE_NON_STATIC_CLASSES_HERE = Cannot instantiate a non-static class here.
MSG_WARN_ON_SUSPICIOUS_THIS_COMPARISON = This appears to be a bad comparison.  In gosu, the '==' operator is equivalent to .equals().  If you wish to do instance equivalence, use the '===' operator instead.
MSG_FL_EXPECTING_FEATURE_NAME = Expected a feature name here, either a method name, a property name or 'construct'
MSG_FL_EXPECTING_RIGHT_CARET = Expected a '>'
MSG_FL_GENERIC_FUNCTION_REFERENCES_NOT_YET_SUPPORTED = Generic function literals are not yet supported.
MSG_FL_EXPECTING_RIGHT_PAREN = Expected a ')' to close the argument type list.
MSG_FL_CONSTRUCTOR_NOT_FOUND = A constructor with the types {0} was not found
MSG_FL_METHOD_NOT_FOUND = A method with the name {0} and types {1} was not found
MSG_FL_PROPERTY_NOT_FOUND = A property with the name {0} was not found
MSG_FL_STATIC_FEATURES_MUST_BE_REFERENCED_FROM_THEIR_TYPES = A static feature or constructor must be referenced directly on the type that the feature belongs to.
MSG_NO_TYPE_AFTER_CONSTRUCTOR = Constructors cannot specify a return type.
WS_ERR_Can_Not_Marshal = {0} Cannot marshal local type {2} for {1}.
WS_ERR_Annotation_Duplicate_Namespace = On {0}: Duplicate namespace "{1}" already used in "{2}".  {3} attempts to introduce it again for {4}.
WS_ERR_Annotation_Exception = Will ignore properties of type {0} see log for stack trace
WS_ERR_Annotation_Invalid_Namespace = {0}: Invalid namespace "{1}"
WS_ERR_Annotation_Only_For_WebService = {0}: The annotation @{1} is only usable in classes annotated with @WsiWebService
WS_ERR_Annotation_Operation_Duplicate = On {0}: method {1}, there already is a method with that name
WS_ERR_Annotation_Operation_OneWay_Invalid = One way methods should have void return type
WS_ERR_Annotation_Operation_Response_Reserved = On {0}: method {1}, the suffix 'Response' is reserved for response elements
WS_ERR_Export_Inner_Only_On_WebService = On {0}: Type {1} inner classes are not exportable
WS_ERR_Export_Inner_Not_Name_Of_Method = Inner classes has same name as request for method {0}
WS_ERR_Export_Inner_Not_Name_Of_Response = Inner classes has same name as response for method {0}
WS_ERR_Export_No_Constructor = On {0}: Type {1} an exportable class needs a public default constructor
WS_ERR_Export_No_Extends = On {0}: Type {1} an exportable class cannot extend another class
WS_ERR_Export_Not_Final = On {0}: Type {1} is not final. An exportable class must be final
WS_ERR_Export_Not_WebService = On {0}: Type {1} is a webservice. A webservice can not be an exportable
WS_ERR_Export_Recursive = Recursion is not supported, you must ensure that {0} is not recursive
WS_WARN_Annontation_Some_Generators_Dont_Support_Schema = {0} Warning processing parameter {1}, some webservices frameworks may not be able to understand {2}
WS_WARN_Annontation_Not_Available = {0} is not available until {1}
WS_WARN_Ignored = {0} : Will ignore property {1} of type {2}
PCF_ERR_Verify = A PCF error has occurred while trying to verify {0}.
MSG_FL_ONLY_PROPERTIES_MAY_BE_CHAINED = Only property literals may be chained.
Gen_Wsi_InvalidType = {0} cannot marshall {1}: {2}
Gen_Wsi_UnsupportedType = {0} is a valid type but is not supported with webservices.
Gen_Wsi_UnsupportedComponentType = {0} is not supported as its component/parameter type is not supported.
Gen_Wsi_NoComponentType = {0} is not supported as no component/parameter type specified.
Gen_Wsi_NoBase = {0} XmlBase class is not supported directly.
Gen_Wsi_AnonElement = 0} Anonymous elements are unsupported. Anonymous elements are the child of another element. You might try to use the child element's type.
Gen_Wsi_AnonType = {0} Annonymous types (types declared with in element declaration) are not supported. You might try to use the element.
Gen_Wsi_NoSimple = {0} XSD Simple types are not supported.  You might try create a complex type or use the extended type.
Gen_Wsi_XmlError = Unexpected error processing {0}: {1}
Gen_Wsi_NullType = Passed null type
Gen_Wsi_TypeNotGosu = {0} is not gosu so is not supported by wsi implementation.
Gen_Wsi_TypeNotWSAnnotated = {0} does not have @WsiWebService annotation.
Gen_Wsi_TypeNotEXPAnnotated = {0} does not have @WsiExportable annotation.
GEN_CAN_NOT_MARSHAL_GOSU_REMOTEABLE_ENUMS = {0} cannot marshal GWEnumerations written in Gosu
GEN_CAN_NOT_MARSHAL_REMOTEABLE_ENUMS_EXTENDED = {0} cannot marshal GWEnumerations which have additional properties
GEN_CAN_NOT_MARSHAL_XML_IN_EXPORTABLE = {0} cannot marshal xml in WsiExportable types
GEN_CLASS_CANNOT_BE_BOTH_WS_AND_EXPORT = {0} class cannot be both @WsiWebService and {1}
GEN_CHECKING = Checking {0}
GEN_CHANGED = Changed {0}
WS_ERR_Invalid_Supertype = {0} does not extend {1}
WS_ERR_Export_Empty = {0} has no exportable properties
WS_ERR_Previous_Invalid = {0} is invalid.  Errors reported earlier
WS_ERR_Entity_Invalid = {0} is invalid. We do not support marshalling entities, create a WsiExportable class with the required fields.
WS_ERR_Collection_Invalid = {0} is invalid.  Only arrays and List<T> are supported.
WF_WARN_Subtype = Workflow subtype "{0}" is defined to be non-external, but either no script is defined, or the script failed to parse.  Please check the logs for any parsing failures.
WF_ERR_Duplicate = More than one workflow process defined with identical typecode "{0}" and version "{1}".
WF_ERR_Parse = Could not parse "{0}" -- {1}: {2}
WF_ERR_Convert = Could not convert "{0}" -- {1}: {2}
WF_ERR = On "{0}": {1}