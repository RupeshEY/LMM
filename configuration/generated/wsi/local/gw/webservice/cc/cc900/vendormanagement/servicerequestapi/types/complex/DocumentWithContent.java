/* Generated by Guidewire XML Code Generator */

package wsi.local.gw.webservice.cc.cc900.vendormanagement.servicerequestapi.types.complex;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
@gw.xml.annotation.SuperTypeData(gw.xsd.w3c.xmlschema.types.complex.AnyType.class)
public class DocumentWithContent extends gw.xsd.w3c.xmlschema.types.complex.AnyType {

  public static final javax.xml.namespace.QName $QNAME = new javax.xml.namespace.QName( "http://guidewire.com/cc/ws/gw/webservice/cc/cc900/vendormanagement/DocumentWithContent", "DocumentWithContent", "pogo16" );
  public static final gw.xml.XmlNamespace $NAMESPACE = new gw.xml.XmlNamespace( "http://guidewire.com/cc/ws/gw/webservice/cc/cc900/vendormanagement/DocumentWithContent", "pogo16" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_DocumentContent = new javax.xml.namespace.QName( "http://guidewire.com/cc/ws/gw/webservice/cc/cc900/vendormanagement/DocumentWithContent", "DocumentContent", "pogo16" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_DocumentSummary = new javax.xml.namespace.QName( "http://guidewire.com/cc/ws/gw/webservice/cc/cc900/vendormanagement/DocumentWithContent", "DocumentSummary", "pogo16" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlTypeInstanceTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlTypeInstanceTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlTypeInstanceTypeDataImpl init() {
      return (gw.internal.xml.XmlTypeInstanceTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) wsi.local.gw.webservice.cc.cc900.vendormanagement.servicerequestapi.util.SchemaAccess ).getSchemaIndex().getTypeData( "wsi.local.gw.webservice.cc.cc900.vendormanagement.servicerequestapi.types.complex.DocumentWithContent" );
    }
  };

  public DocumentWithContent() {
    super( 184270468, TYPE.get() );
  }

  private DocumentWithContent( gw.internal.xml.XmlTypeInstanceState state ) {
    super( 184270468, state );
  }

  protected DocumentWithContent( int magic, gw.internal.xml.XmlTypeInstanceTypeDataImpl typeData ) {
    super(magic, typeData);
  }

  protected DocumentWithContent( int magic, gw.internal.xml.XmlTypeInstanceState state ) {
    super(magic, state);
  }

  public static gw.xml.XmlTypeInstanceTypeData asTypeData() {
    return TYPE.get();
  }

  @java.lang.Override
  public java.lang.Class<? extends wsi.local.gw.webservice.cc.cc900.vendormanagement.servicerequestapi.types.complex.DocumentWithContent> get$Class() {
    return getClass();
  }

  @java.lang.Override
  public wsi.local.gw.webservice.cc.cc900.vendormanagement.servicerequestapi.types.complex.DocumentWithContent get$TypeInstance() {
    return this;
  }



  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final wsi.local.gw.webservice.cc.cc900.vendormanagement.servicerequestapi.anonymous.elements.DocumentWithContent_DocumentContent getDocumentContent() {
    return (wsi.local.gw.webservice.cc.cc900.vendormanagement.servicerequestapi.anonymous.elements.DocumentWithContent_DocumentContent) TYPE.get().getPropertyValue( this, "_DocumentContent" );
  }


  public final void setDocumentContent( wsi.local.gw.webservice.cc.cc900.vendormanagement.servicerequestapi.anonymous.elements.DocumentWithContent_DocumentContent value ) {
    TYPE.get().setPropertyValue( this, "_DocumentContent", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final wsi.local.gw.webservice.cc.cc900.vendormanagement.servicerequestapi.anonymous.elements.DocumentWithContent_DocumentSummary getDocumentSummary() {
    return (wsi.local.gw.webservice.cc.cc900.vendormanagement.servicerequestapi.anonymous.elements.DocumentWithContent_DocumentSummary) TYPE.get().getPropertyValue( this, "_DocumentSummary" );
  }


  public final void setDocumentSummary( wsi.local.gw.webservice.cc.cc900.vendormanagement.servicerequestapi.anonymous.elements.DocumentWithContent_DocumentSummary value ) {
    TYPE.get().setPropertyValue( this, "_DocumentSummary", value );
  }

}
