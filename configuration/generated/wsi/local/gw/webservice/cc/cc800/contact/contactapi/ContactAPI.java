/* Generated by Guidewire XML Code Generator */

package wsi.local.gw.webservice.cc.cc800.contact.contactapi;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
public final class ContactAPI extends gw.internal.xml.ws.WsdlPortImpl {

  public static final javax.xml.namespace.QName PORT_QNAME = new javax.xml.namespace.QName( "http://guidewire.com/cc/ws/gw/webservice/cc/cc800/contact/ContactAPI", "ContactAPISoap12Port", "" );
  public static final javax.xml.namespace.QName SERVICE_QNAME = new javax.xml.namespace.QName( "http://guidewire.com/cc/ws/gw/webservice/cc/cc800/contact/ContactAPI", "ContactAPI", "" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.ws.WsdlPortTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.ws.WsdlPortTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.ws.WsdlPortTypeDataImpl init() {
      return (gw.internal.xml.ws.WsdlPortTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) wsi.local.gw.webservice.cc.cc800.contact.contactapi.util.SchemaAccess ).getSchemaIndex().getTypeData( "wsi.local.gw.webservice.cc.cc800.contact.contactapi.ContactAPI" );
    }
  };
  public static final java.net.URI ADDRESS;

  static {
    try {
      ADDRESS = new java.net.URI( "local:///gw/webservice/cc/cc800/contact/ContactAPI" );
    }
    catch ( java.net.URISyntaxException ex ) {
      throw gw.internal.xml.util.ExceptionUtil.forceThrow( ex );
    }
  }

  public ContactAPI() {
    super( TYPE.get(), new gw.xml.ws.WsdlConfig() );
  }

  public ContactAPI( gw.xml.ws.WsdlConfig config ) {
    super( TYPE.get(), config );
  }


  public final gw.xml.XmlElement document_literal( gw.xml.XmlElement document ) {
    return (gw.xml.XmlElement) invoke( "document_literal", new java.lang.Object[] { document } );
  }

  public final gw.xml.ws.AsyncResponse<gw.xml.XmlElement,gw.xsd.w3c.soap12_envelope.Envelope> async_document_literal( gw.xml.XmlElement document ) {
    return (gw.xml.ws.AsyncResponse<gw.xml.XmlElement,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "document_literal", new java.lang.Object[] { document } );
  }


  public final void updateContact( gw.webservice.contactapi.beanmodel.XmlBackedInstance contactXML ) {
    invoke( "updateContact", new java.lang.Object[] { contactXML } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_updateContact( gw.webservice.contactapi.beanmodel.XmlBackedInstance contactXML ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "updateContact", new java.lang.Object[] { contactXML } );
  }


  public final void updateContact( gw.webservice.contactapi.beanmodel.XmlBackedInstance contactXML, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.UpdateContactHeaders soapHeaders ) {
    invoke( "updateContact", new java.lang.Object[] { contactXML, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_updateContact( gw.webservice.contactapi.beanmodel.XmlBackedInstance contactXML, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.UpdateContactHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "updateContact", new java.lang.Object[] { contactXML, soapHeaders } );
  }


  public final void mergeContacts( java.lang.String keptContactABUID, java.lang.String deletedContactABUID ) {
    invoke( "mergeContacts", new java.lang.Object[] { keptContactABUID, deletedContactABUID } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_mergeContacts( java.lang.String keptContactABUID, java.lang.String deletedContactABUID ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "mergeContacts", new java.lang.Object[] { keptContactABUID, deletedContactABUID } );
  }


  public final void mergeContacts( java.lang.String keptContactABUID, java.lang.String deletedContactABUID, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.MergeContactsHeaders soapHeaders ) {
    invoke( "mergeContacts", new java.lang.Object[] { keptContactABUID, deletedContactABUID, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_mergeContacts( java.lang.String keptContactABUID, java.lang.String deletedContactABUID, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.MergeContactsHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "mergeContacts", new java.lang.Object[] { keptContactABUID, deletedContactABUID, soapHeaders } );
  }


  public final void autoSyncContactWithABUID( java.lang.String addressBookUID ) {
    invoke( "autoSyncContactWithABUID", new java.lang.Object[] { addressBookUID } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_autoSyncContactWithABUID( java.lang.String addressBookUID ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "autoSyncContactWithABUID", new java.lang.Object[] { addressBookUID } );
  }


  public final void autoSyncContactWithABUID( java.lang.String addressBookUID, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.AutoSyncContactWithABUIDHeaders soapHeaders ) {
    invoke( "autoSyncContactWithABUID", new java.lang.Object[] { addressBookUID, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_autoSyncContactWithABUID( java.lang.String addressBookUID, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.AutoSyncContactWithABUIDHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "autoSyncContactWithABUID", new java.lang.Object[] { addressBookUID, soapHeaders } );
  }


  public final void removeContact( java.lang.String addressBookUID ) {
    invoke( "removeContact", new java.lang.Object[] { addressBookUID } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_removeContact( java.lang.String addressBookUID ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "removeContact", new java.lang.Object[] { addressBookUID } );
  }


  public final void removeContact( java.lang.String addressBookUID, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.RemoveContactHeaders soapHeaders ) {
    invoke( "removeContact", new java.lang.Object[] { addressBookUID, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_removeContact( java.lang.String addressBookUID, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.RemoveContactHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "removeContact", new java.lang.Object[] { addressBookUID, soapHeaders } );
  }


  public final boolean isContactDeletable( java.lang.String addressBookUID ) {
    return (java.lang.Boolean) invoke( "isContactDeletable", new java.lang.Object[] { addressBookUID } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Boolean,gw.xsd.w3c.soap12_envelope.Envelope> async_isContactDeletable( java.lang.String addressBookUID ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Boolean,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "isContactDeletable", new java.lang.Object[] { addressBookUID } );
  }


  public final boolean isContactDeletable( java.lang.String addressBookUID, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.IsContactDeletableHeaders soapHeaders ) {
    return (java.lang.Boolean) invoke( "isContactDeletable", new java.lang.Object[] { addressBookUID, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Boolean,gw.xsd.w3c.soap12_envelope.Envelope> async_isContactDeletable( java.lang.String addressBookUID, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.IsContactDeletableHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Boolean,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "isContactDeletable", new java.lang.Object[] { addressBookUID, soapHeaders } );
  }


  public final void pendingUpdateRejected( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context ) {
    invoke( "pendingUpdateRejected", new java.lang.Object[] { context } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_pendingUpdateRejected( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "pendingUpdateRejected", new java.lang.Object[] { context } );
  }


  public final void pendingUpdateRejected( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.PendingUpdateRejectedHeaders soapHeaders ) {
    invoke( "pendingUpdateRejected", new java.lang.Object[] { context, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_pendingUpdateRejected( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.PendingUpdateRejectedHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "pendingUpdateRejected", new java.lang.Object[] { context, soapHeaders } );
  }


  public final void pendingCreateRejected( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context ) {
    invoke( "pendingCreateRejected", new java.lang.Object[] { context } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_pendingCreateRejected( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "pendingCreateRejected", new java.lang.Object[] { context } );
  }


  public final void pendingCreateRejected( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.PendingCreateRejectedHeaders soapHeaders ) {
    invoke( "pendingCreateRejected", new java.lang.Object[] { context, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_pendingCreateRejected( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.PendingCreateRejectedHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "pendingCreateRejected", new java.lang.Object[] { context, soapHeaders } );
  }


  public final void pendingCreateApproved( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context ) {
    invoke( "pendingCreateApproved", new java.lang.Object[] { context } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_pendingCreateApproved( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "pendingCreateApproved", new java.lang.Object[] { context } );
  }


  public final void pendingCreateApproved( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.PendingCreateApprovedHeaders soapHeaders ) {
    invoke( "pendingCreateApproved", new java.lang.Object[] { context, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_pendingCreateApproved( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.PendingCreateApprovedHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "pendingCreateApproved", new java.lang.Object[] { context, soapHeaders } );
  }


  public final void pendingUpdateApproved( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context, wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIAddressBookUIDContainer abuidContainer ) {
    invoke( "pendingUpdateApproved", new java.lang.Object[] { context, abuidContainer } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_pendingUpdateApproved( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context, wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIAddressBookUIDContainer abuidContainer ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "pendingUpdateApproved", new java.lang.Object[] { context, abuidContainer } );
  }


  public final void pendingUpdateApproved( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context, wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIAddressBookUIDContainer abuidContainer, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.PendingUpdateApprovedHeaders soapHeaders ) {
    invoke( "pendingUpdateApproved", new java.lang.Object[] { context, abuidContainer, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope> async_pendingUpdateApproved( wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIPendingChangeContext context, wsi.local.gw.webservice.cc.cc800.contact.contactapi.types.complex.ABClientAPIAddressBookUIDContainer abuidContainer, wsi.local.gw.webservice.cc.cc800.contact.contactapi.soapheaders.PendingUpdateApprovedHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "pendingUpdateApproved", new java.lang.Object[] { context, abuidContainer, soapHeaders } );
  }

}
