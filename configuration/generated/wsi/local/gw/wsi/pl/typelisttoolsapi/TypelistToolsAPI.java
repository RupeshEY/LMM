/* Generated by Guidewire XML Code Generator */

package wsi.local.gw.wsi.pl.typelisttoolsapi;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
public final class TypelistToolsAPI extends gw.internal.xml.ws.WsdlPortImpl {

  public static final javax.xml.namespace.QName PORT_QNAME = new javax.xml.namespace.QName( "http://guidewire.com/pl/ws/gw/wsi/pl/TypelistToolsAPI", "TypelistToolsAPISoap12Port", "" );
  public static final javax.xml.namespace.QName SERVICE_QNAME = new javax.xml.namespace.QName( "http://guidewire.com/pl/ws/gw/wsi/pl/TypelistToolsAPI", "TypelistToolsAPI", "" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.ws.WsdlPortTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.ws.WsdlPortTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.ws.WsdlPortTypeDataImpl init() {
      return (gw.internal.xml.ws.WsdlPortTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) wsi.local.gw.wsi.pl.typelisttoolsapi.util.SchemaAccess ).getSchemaIndex().getTypeData( "wsi.local.gw.wsi.pl.typelisttoolsapi.TypelistToolsAPI" );
    }
  };
  public static final java.net.URI ADDRESS;

  static {
    try {
      ADDRESS = new java.net.URI( "local:///gw/wsi/pl/TypelistToolsAPI" );
    }
    catch ( java.net.URISyntaxException ex ) {
      throw gw.internal.xml.util.ExceptionUtil.forceThrow( ex );
    }
  }

  public TypelistToolsAPI() {
    super( TYPE.get(), new gw.xml.ws.WsdlConfig() );
  }

  public TypelistToolsAPI( gw.xml.ws.WsdlConfig config ) {
    super( TYPE.get(), config );
  }


  public final gw.xml.XmlElement document_literal( gw.xml.XmlElement document ) {
    return (gw.xml.XmlElement) invoke( "document_literal", new java.lang.Object[] { document } );
  }

  public final gw.xml.ws.AsyncResponse<gw.xml.XmlElement,gw.xsd.w3c.soap12_envelope.Envelope> async_document_literal( gw.xml.XmlElement document ) {
    return (gw.xml.ws.AsyncResponse<gw.xml.XmlElement,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "document_literal", new java.lang.Object[] { document } );
  }


  public final wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[] getTypelistValues( java.lang.String typelist ) {
    return (wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[]) invoke( "getTypelistValues", new java.lang.Object[] { typelist } );
  }

  public final gw.xml.ws.AsyncResponse<wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[],gw.xsd.w3c.soap12_envelope.Envelope> async_getTypelistValues( java.lang.String typelist ) {
    return (gw.xml.ws.AsyncResponse<wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[],gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "getTypelistValues", new java.lang.Object[] { typelist } );
  }


  public final wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[] getTypelistValues( java.lang.String typelist, wsi.local.gw.wsi.pl.typelisttoolsapi.soapheaders.GetTypelistValuesHeaders soapHeaders ) {
    return (wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[]) invoke( "getTypelistValues", new java.lang.Object[] { typelist, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[],gw.xsd.w3c.soap12_envelope.Envelope> async_getTypelistValues( java.lang.String typelist, wsi.local.gw.wsi.pl.typelisttoolsapi.soapheaders.GetTypelistValuesHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[],gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "getTypelistValues", new java.lang.Object[] { typelist, soapHeaders } );
  }


  public final wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[] getTypeKeysByAlias( java.lang.String typelist, java.lang.String namespace, java.lang.String alias ) {
    return (wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[]) invoke( "getTypeKeysByAlias", new java.lang.Object[] { typelist, namespace, alias } );
  }

  public final gw.xml.ws.AsyncResponse<wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[],gw.xsd.w3c.soap12_envelope.Envelope> async_getTypeKeysByAlias( java.lang.String typelist, java.lang.String namespace, java.lang.String alias ) {
    return (gw.xml.ws.AsyncResponse<wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[],gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "getTypeKeysByAlias", new java.lang.Object[] { typelist, namespace, alias } );
  }


  public final wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[] getTypeKeysByAlias( java.lang.String typelist, java.lang.String namespace, java.lang.String alias, wsi.local.gw.wsi.pl.typelisttoolsapi.soapheaders.GetTypeKeysByAliasHeaders soapHeaders ) {
    return (wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[]) invoke( "getTypeKeysByAlias", new java.lang.Object[] { typelist, namespace, alias, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[],gw.xsd.w3c.soap12_envelope.Envelope> async_getTypeKeysByAlias( java.lang.String typelist, java.lang.String namespace, java.lang.String alias, wsi.local.gw.wsi.pl.typelisttoolsapi.soapheaders.GetTypeKeysByAliasHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData[],gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "getTypeKeysByAlias", new java.lang.Object[] { typelist, namespace, alias, soapHeaders } );
  }


  public final wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData getTypeKeyByAlias( java.lang.String typelist, java.lang.String namespace, java.lang.String alias ) {
    return (wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData) invoke( "getTypeKeyByAlias", new java.lang.Object[] { typelist, namespace, alias } );
  }

  public final gw.xml.ws.AsyncResponse<wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData,gw.xsd.w3c.soap12_envelope.Envelope> async_getTypeKeyByAlias( java.lang.String typelist, java.lang.String namespace, java.lang.String alias ) {
    return (gw.xml.ws.AsyncResponse<wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "getTypeKeyByAlias", new java.lang.Object[] { typelist, namespace, alias } );
  }


  public final wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData getTypeKeyByAlias( java.lang.String typelist, java.lang.String namespace, java.lang.String alias, wsi.local.gw.wsi.pl.typelisttoolsapi.soapheaders.GetTypeKeyByAliasHeaders soapHeaders ) {
    return (wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData) invoke( "getTypeKeyByAlias", new java.lang.Object[] { typelist, namespace, alias, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData,gw.xsd.w3c.soap12_envelope.Envelope> async_getTypeKeyByAlias( java.lang.String typelist, java.lang.String namespace, java.lang.String alias, wsi.local.gw.wsi.pl.typelisttoolsapi.soapheaders.GetTypeKeyByAliasHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<wsi.local.gw.wsi.pl.typelisttoolsapi.types.complex.TypeKeyData,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "getTypeKeyByAlias", new java.lang.Object[] { typelist, namespace, alias, soapHeaders } );
  }


  public final java.lang.String[] getAliasesByInternalCode( java.lang.String typelist, java.lang.String namespace, java.lang.String code ) {
    return (java.lang.String[]) invoke( "getAliasesByInternalCode", new java.lang.Object[] { typelist, namespace, code } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.String[],gw.xsd.w3c.soap12_envelope.Envelope> async_getAliasesByInternalCode( java.lang.String typelist, java.lang.String namespace, java.lang.String code ) {
    return (gw.xml.ws.AsyncResponse<java.lang.String[],gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "getAliasesByInternalCode", new java.lang.Object[] { typelist, namespace, code } );
  }


  public final java.lang.String[] getAliasesByInternalCode( java.lang.String typelist, java.lang.String namespace, java.lang.String code, wsi.local.gw.wsi.pl.typelisttoolsapi.soapheaders.GetAliasesByInternalCodeHeaders soapHeaders ) {
    return (java.lang.String[]) invoke( "getAliasesByInternalCode", new java.lang.Object[] { typelist, namespace, code, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.String[],gw.xsd.w3c.soap12_envelope.Envelope> async_getAliasesByInternalCode( java.lang.String typelist, java.lang.String namespace, java.lang.String code, wsi.local.gw.wsi.pl.typelisttoolsapi.soapheaders.GetAliasesByInternalCodeHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.String[],gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "getAliasesByInternalCode", new java.lang.Object[] { typelist, namespace, code, soapHeaders } );
  }


  public final java.lang.String getAliasByInternalCode( java.lang.String typelist, java.lang.String namespace, java.lang.String code ) {
    return (java.lang.String) invoke( "getAliasByInternalCode", new java.lang.Object[] { typelist, namespace, code } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.String,gw.xsd.w3c.soap12_envelope.Envelope> async_getAliasByInternalCode( java.lang.String typelist, java.lang.String namespace, java.lang.String code ) {
    return (gw.xml.ws.AsyncResponse<java.lang.String,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "getAliasByInternalCode", new java.lang.Object[] { typelist, namespace, code } );
  }


  public final java.lang.String getAliasByInternalCode( java.lang.String typelist, java.lang.String namespace, java.lang.String code, wsi.local.gw.wsi.pl.typelisttoolsapi.soapheaders.GetAliasByInternalCodeHeaders soapHeaders ) {
    return (java.lang.String) invoke( "getAliasByInternalCode", new java.lang.Object[] { typelist, namespace, code, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.String,gw.xsd.w3c.soap12_envelope.Envelope> async_getAliasByInternalCode( java.lang.String typelist, java.lang.String namespace, java.lang.String code, wsi.local.gw.wsi.pl.typelisttoolsapi.soapheaders.GetAliasByInternalCodeHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.String,gw.xsd.w3c.soap12_envelope.Envelope>) invokeAsync( "getAliasByInternalCode", new java.lang.Object[] { typelist, namespace, code, soapHeaders } );
  }

}
