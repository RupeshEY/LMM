/* Generated by Guidewire XML Code Generator */

package wsi.local.gw.wsi.pl.workflowapi.ports;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
public final class WorkflowAPI_Soap11Port extends gw.internal.xml.ws.WsdlPortImpl {

  public static final javax.xml.namespace.QName PORT_QNAME = new javax.xml.namespace.QName( "http://guidewire.com/pl/ws/gw/wsi/pl/WorkflowAPI", "WorkflowAPISoap11Port", "" );
  public static final javax.xml.namespace.QName SERVICE_QNAME = new javax.xml.namespace.QName( "http://guidewire.com/pl/ws/gw/wsi/pl/WorkflowAPI", "WorkflowAPI", "" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.ws.WsdlPortTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.ws.WsdlPortTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.ws.WsdlPortTypeDataImpl init() {
      return (gw.internal.xml.ws.WsdlPortTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) wsi.local.gw.wsi.pl.workflowapi.util.SchemaAccess ).getSchemaIndex().getTypeData( "wsi.local.gw.wsi.pl.workflowapi.ports.WorkflowAPI_Soap11Port" );
    }
  };
  public static final java.net.URI ADDRESS;

  static {
    try {
      ADDRESS = new java.net.URI( "local:///gw/wsi/pl/WorkflowAPI/soap11" );
    }
    catch ( java.net.URISyntaxException ex ) {
      throw gw.internal.xml.util.ExceptionUtil.forceThrow( ex );
    }
  }

  public WorkflowAPI_Soap11Port() {
    super( TYPE.get(), new gw.xml.ws.WsdlConfig() );
  }

  public WorkflowAPI_Soap11Port( gw.xml.ws.WsdlConfig config ) {
    super( TYPE.get(), config );
  }


  public final gw.xml.XmlElement document_literal( gw.xml.XmlElement document ) {
    return (gw.xml.XmlElement) invoke( "document_literal", new java.lang.Object[] { document } );
  }

  public final gw.xml.ws.AsyncResponse<gw.xml.XmlElement,gw.xsd.w3c.soap11_envelope.Envelope> async_document_literal( gw.xml.XmlElement document ) {
    return (gw.xml.ws.AsyncResponse<gw.xml.XmlElement,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "document_literal", new java.lang.Object[] { document } );
  }


  public final void complete( java.lang.String workflowID ) {
    invoke( "complete", new java.lang.Object[] { workflowID } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope> async_complete( java.lang.String workflowID ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "complete", new java.lang.Object[] { workflowID } );
  }


  public final void complete( java.lang.String workflowID, wsi.local.gw.wsi.pl.workflowapi.soapheaders.CompleteHeaders soapHeaders ) {
    invoke( "complete", new java.lang.Object[] { workflowID, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope> async_complete( java.lang.String workflowID, wsi.local.gw.wsi.pl.workflowapi.soapheaders.CompleteHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "complete", new java.lang.Object[] { workflowID, soapHeaders } );
  }


  public final void suspend( java.lang.String workflowID ) {
    invoke( "suspend", new java.lang.Object[] { workflowID } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope> async_suspend( java.lang.String workflowID ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "suspend", new java.lang.Object[] { workflowID } );
  }


  public final void suspend( java.lang.String workflowID, wsi.local.gw.wsi.pl.workflowapi.soapheaders.SuspendHeaders soapHeaders ) {
    invoke( "suspend", new java.lang.Object[] { workflowID, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope> async_suspend( java.lang.String workflowID, wsi.local.gw.wsi.pl.workflowapi.soapheaders.SuspendHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "suspend", new java.lang.Object[] { workflowID, soapHeaders } );
  }


  public final void resumeWorkflow( java.lang.String workflowID ) {
    invoke( "resumeWorkflow", new java.lang.Object[] { workflowID } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope> async_resumeWorkflow( java.lang.String workflowID ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "resumeWorkflow", new java.lang.Object[] { workflowID } );
  }


  public final void resumeWorkflow( java.lang.String workflowID, wsi.local.gw.wsi.pl.workflowapi.soapheaders.ResumeWorkflowHeaders soapHeaders ) {
    invoke( "resumeWorkflow", new java.lang.Object[] { workflowID, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope> async_resumeWorkflow( java.lang.String workflowID, wsi.local.gw.wsi.pl.workflowapi.soapheaders.ResumeWorkflowHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "resumeWorkflow", new java.lang.Object[] { workflowID, soapHeaders } );
  }


  public final void resumeAllWorkflows() {
    invoke( "resumeAllWorkflows", new java.lang.Object[] {} );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope> async_resumeAllWorkflows() {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "resumeAllWorkflows", new java.lang.Object[] {} );
  }


  public final void resumeAllWorkflows( wsi.local.gw.wsi.pl.workflowapi.soapheaders.ResumeAllWorkflowsHeaders soapHeaders ) {
    invoke( "resumeAllWorkflows", new java.lang.Object[] { soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope> async_resumeAllWorkflows( wsi.local.gw.wsi.pl.workflowapi.soapheaders.ResumeAllWorkflowsHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "resumeAllWorkflows", new java.lang.Object[] { soapHeaders } );
  }


  public final void invokeTrigger( java.lang.String workflowID, java.lang.String triggerKey ) {
    invoke( "invokeTrigger", new java.lang.Object[] { workflowID, triggerKey } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope> async_invokeTrigger( java.lang.String workflowID, java.lang.String triggerKey ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "invokeTrigger", new java.lang.Object[] { workflowID, triggerKey } );
  }


  public final void invokeTrigger( java.lang.String workflowID, java.lang.String triggerKey, wsi.local.gw.wsi.pl.workflowapi.soapheaders.InvokeTriggerHeaders soapHeaders ) {
    invoke( "invokeTrigger", new java.lang.Object[] { workflowID, triggerKey, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope> async_invokeTrigger( java.lang.String workflowID, java.lang.String triggerKey, wsi.local.gw.wsi.pl.workflowapi.soapheaders.InvokeTriggerHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Void,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "invokeTrigger", new java.lang.Object[] { workflowID, triggerKey, soapHeaders } );
  }


  public final boolean isTriggerAvailable( java.lang.String workflowID, java.lang.String triggerKey ) {
    return (java.lang.Boolean) invoke( "isTriggerAvailable", new java.lang.Object[] { workflowID, triggerKey } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Boolean,gw.xsd.w3c.soap11_envelope.Envelope> async_isTriggerAvailable( java.lang.String workflowID, java.lang.String triggerKey ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Boolean,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "isTriggerAvailable", new java.lang.Object[] { workflowID, triggerKey } );
  }


  public final boolean isTriggerAvailable( java.lang.String workflowID, java.lang.String triggerKey, wsi.local.gw.wsi.pl.workflowapi.soapheaders.IsTriggerAvailableHeaders soapHeaders ) {
    return (java.lang.Boolean) invoke( "isTriggerAvailable", new java.lang.Object[] { workflowID, triggerKey, soapHeaders } );
  }

  public final gw.xml.ws.AsyncResponse<java.lang.Boolean,gw.xsd.w3c.soap11_envelope.Envelope> async_isTriggerAvailable( java.lang.String workflowID, java.lang.String triggerKey, wsi.local.gw.wsi.pl.workflowapi.soapheaders.IsTriggerAvailableHeaders soapHeaders ) {
    return (gw.xml.ws.AsyncResponse<java.lang.Boolean,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "isTriggerAvailable", new java.lang.Object[] { workflowID, triggerKey, soapHeaders } );
  }

}
