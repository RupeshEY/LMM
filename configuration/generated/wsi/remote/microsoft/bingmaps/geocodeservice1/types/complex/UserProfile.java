/* Generated by Guidewire XML Code Generator */

package wsi.remote.microsoft.bingmaps.geocodeservice1.types.complex;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
@gw.xml.annotation.SuperTypeData(gw.xsd.w3c.xmlschema.types.complex.AnyType.class)
public class UserProfile extends gw.xsd.w3c.xmlschema.types.complex.AnyType {

  public static final javax.xml.namespace.QName $QNAME = new javax.xml.namespace.QName( "http://dev.virtualearth.net/webservices/v1/common", "UserProfile", "tns" );
  public static final gw.xml.XmlNamespace $NAMESPACE = new gw.xml.XmlNamespace( "http://dev.virtualearth.net/webservices/v1/common", "tns" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_CurrentHeading = new javax.xml.namespace.QName( "http://dev.virtualearth.net/webservices/v1/common", "CurrentHeading", "tns" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_CurrentLocation = new javax.xml.namespace.QName( "http://dev.virtualearth.net/webservices/v1/common", "CurrentLocation", "tns" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_DeviceType = new javax.xml.namespace.QName( "http://dev.virtualearth.net/webservices/v1/common", "DeviceType", "tns" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_DistanceUnit = new javax.xml.namespace.QName( "http://dev.virtualearth.net/webservices/v1/common", "DistanceUnit", "tns" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_IPAddress = new javax.xml.namespace.QName( "http://dev.virtualearth.net/webservices/v1/common", "IPAddress", "tns" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_MapView = new javax.xml.namespace.QName( "http://dev.virtualearth.net/webservices/v1/common", "MapView", "tns" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_ScreenSize = new javax.xml.namespace.QName( "http://dev.virtualearth.net/webservices/v1/common", "ScreenSize", "tns" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlTypeInstanceTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlTypeInstanceTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlTypeInstanceTypeDataImpl init() {
      return (gw.internal.xml.XmlTypeInstanceTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) wsi.remote.microsoft.bingmaps.geocodeservice1.util.SchemaAccess ).getSchemaIndex().getTypeData( "wsi.remote.microsoft.bingmaps.geocodeservice1.types.complex.UserProfile" );
    }
  };

  public UserProfile() {
    super( 1439431399, TYPE.get() );
  }

  private UserProfile( gw.internal.xml.XmlTypeInstanceState state ) {
    super( 1439431399, state );
  }

  protected UserProfile( int magic, gw.internal.xml.XmlTypeInstanceTypeDataImpl typeData ) {
    super(magic, typeData);
  }

  protected UserProfile( int magic, gw.internal.xml.XmlTypeInstanceState state ) {
    super(magic, state);
  }

  public static gw.xml.XmlTypeInstanceTypeData asTypeData() {
    return TYPE.get();
  }

  @java.lang.Override
  public java.lang.Class<? extends wsi.remote.microsoft.bingmaps.geocodeservice1.types.complex.UserProfile> get$Class() {
    return getClass();
  }

  @java.lang.Override
  public wsi.remote.microsoft.bingmaps.geocodeservice1.types.complex.UserProfile get$TypeInstance() {
    return this;
  }



  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_CurrentHeading getCurrentHeading() {
    return (wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_CurrentHeading) TYPE.get().getPropertyValue( this, "_CurrentHeading" );
  }


  public final void setCurrentHeading( wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_CurrentHeading value ) {
    TYPE.get().setPropertyValue( this, "_CurrentHeading", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_CurrentLocation getCurrentLocation() {
    return (wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_CurrentLocation) TYPE.get().getPropertyValue( this, "_CurrentLocation" );
  }


  public final void setCurrentLocation( wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_CurrentLocation value ) {
    TYPE.get().setPropertyValue( this, "_CurrentLocation", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final wsi.remote.microsoft.bingmaps.geocodeservice1.enums.DeviceType getDeviceType() {
    return (wsi.remote.microsoft.bingmaps.geocodeservice1.enums.DeviceType) TYPE.get().getPropertyValue( this, "_DeviceType" );
  }


  public final void setDeviceType( wsi.remote.microsoft.bingmaps.geocodeservice1.enums.DeviceType value ) {
    TYPE.get().setPropertyValue( this, "_DeviceType", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final wsi.remote.microsoft.bingmaps.geocodeservice1.DeviceType getDeviceType_elem() {
    return (wsi.remote.microsoft.bingmaps.geocodeservice1.DeviceType) TYPE.get().getPropertyValue( this, "_DeviceType_elem" );
  }


  public final void setDeviceType_elem( wsi.remote.microsoft.bingmaps.geocodeservice1.DeviceType value ) {
    TYPE.get().setPropertyValue( this, "_DeviceType_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final wsi.remote.microsoft.bingmaps.geocodeservice1.enums.DistanceUnit getDistanceUnit() {
    return (wsi.remote.microsoft.bingmaps.geocodeservice1.enums.DistanceUnit) TYPE.get().getPropertyValue( this, "_DistanceUnit" );
  }


  public final void setDistanceUnit( wsi.remote.microsoft.bingmaps.geocodeservice1.enums.DistanceUnit value ) {
    TYPE.get().setPropertyValue( this, "_DistanceUnit", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final wsi.remote.microsoft.bingmaps.geocodeservice1.DistanceUnit getDistanceUnit_elem() {
    return (wsi.remote.microsoft.bingmaps.geocodeservice1.DistanceUnit) TYPE.get().getPropertyValue( this, "_DistanceUnit_elem" );
  }


  public final void setDistanceUnit_elem( wsi.remote.microsoft.bingmaps.geocodeservice1.DistanceUnit value ) {
    TYPE.get().setPropertyValue( this, "_DistanceUnit_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.lang.String getIPAddress() {
    return (java.lang.String) TYPE.get().getPropertyValue( this, "_IPAddress" );
  }


  public final void setIPAddress( java.lang.String value ) {
    TYPE.get().setPropertyValue( this, "_IPAddress", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_IPAddress getIPAddress_elem() {
    return (wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_IPAddress) TYPE.get().getPropertyValue( this, "_IPAddress_elem" );
  }


  public final void setIPAddress_elem( wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_IPAddress value ) {
    TYPE.get().setPropertyValue( this, "_IPAddress_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_MapView getMapView() {
    return (wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_MapView) TYPE.get().getPropertyValue( this, "_MapView" );
  }


  public final void setMapView( wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_MapView value ) {
    TYPE.get().setPropertyValue( this, "_MapView", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_ScreenSize getScreenSize() {
    return (wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_ScreenSize) TYPE.get().getPropertyValue( this, "_ScreenSize" );
  }


  public final void setScreenSize( wsi.remote.microsoft.bingmaps.geocodeservice1.anonymous.elements.UserProfile_ScreenSize value ) {
    TYPE.get().setPropertyValue( this, "_ScreenSize", value );
  }

}
