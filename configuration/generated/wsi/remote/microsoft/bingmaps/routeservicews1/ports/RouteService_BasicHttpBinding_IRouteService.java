/* Generated by Guidewire XML Code Generator */

package wsi.remote.microsoft.bingmaps.routeservicews1.ports;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
public final class RouteService_BasicHttpBinding_IRouteService extends gw.internal.xml.ws.WsdlPortImpl {

  public static final javax.xml.namespace.QName PORT_QNAME = new javax.xml.namespace.QName( "http://dev.virtualearth.net/webservices/v1/route", "BasicHttpBinding_IRouteService", "" );
  public static final javax.xml.namespace.QName SERVICE_QNAME = new javax.xml.namespace.QName( "http://dev.virtualearth.net/webservices/v1/route", "RouteService", "" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.ws.WsdlPortTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.ws.WsdlPortTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.ws.WsdlPortTypeDataImpl init() {
      return (gw.internal.xml.ws.WsdlPortTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) wsi.remote.microsoft.bingmaps.routeservicews1.util.SchemaAccess ).getSchemaIndex().getTypeData( "wsi.remote.microsoft.bingmaps.routeservicews1.ports.RouteService_BasicHttpBinding_IRouteService" );
    }
  };
  public static final java.net.URI ADDRESS;

  static {
    try {
      ADDRESS = new java.net.URI( "http://dev.virtualearth.net/webservices/v1/routeservice/routeservice.svc" );
    }
    catch ( java.net.URISyntaxException ex ) {
      throw gw.internal.xml.util.ExceptionUtil.forceThrow( ex );
    }
  }

  public RouteService_BasicHttpBinding_IRouteService() {
    super( TYPE.get(), new gw.xml.ws.WsdlConfig() );
  }

  public RouteService_BasicHttpBinding_IRouteService( gw.xml.ws.WsdlConfig config ) {
    super( TYPE.get(), config );
  }


  public final gw.xml.XmlElement document_literal( gw.xml.XmlElement document ) {
    return (gw.xml.XmlElement) invoke( "document_literal", new java.lang.Object[] { document } );
  }

  public final gw.xml.ws.AsyncResponse<gw.xml.XmlElement,gw.xsd.w3c.soap11_envelope.Envelope> async_document_literal( gw.xml.XmlElement document ) {
    return (gw.xml.ws.AsyncResponse<gw.xml.XmlElement,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "document_literal", new java.lang.Object[] { document } );
  }


  public final wsi.remote.microsoft.bingmaps.routeservice2.CalculateRouteResponse CalculateRoute( wsi.remote.microsoft.bingmaps.routeservice2.CalculateRoute CalculateRoute ) {
    return (wsi.remote.microsoft.bingmaps.routeservice2.CalculateRouteResponse) invoke( "CalculateRoute", new java.lang.Object[] { CalculateRoute } );
  }

  public final gw.xml.ws.AsyncResponse<wsi.remote.microsoft.bingmaps.routeservice2.CalculateRouteResponse,gw.xsd.w3c.soap11_envelope.Envelope> async_CalculateRoute( wsi.remote.microsoft.bingmaps.routeservice2.CalculateRoute CalculateRoute ) {
    return (gw.xml.ws.AsyncResponse<wsi.remote.microsoft.bingmaps.routeservice2.CalculateRouteResponse,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "CalculateRoute", new java.lang.Object[] { CalculateRoute } );
  }


  public final wsi.remote.microsoft.bingmaps.routeservice2.CalculateRoutesFromMajorRoadsResponse CalculateRoutesFromMajorRoads( wsi.remote.microsoft.bingmaps.routeservice2.CalculateRoutesFromMajorRoads CalculateRoutesFromMajorRoads ) {
    return (wsi.remote.microsoft.bingmaps.routeservice2.CalculateRoutesFromMajorRoadsResponse) invoke( "CalculateRoutesFromMajorRoads", new java.lang.Object[] { CalculateRoutesFromMajorRoads } );
  }

  public final gw.xml.ws.AsyncResponse<wsi.remote.microsoft.bingmaps.routeservice2.CalculateRoutesFromMajorRoadsResponse,gw.xsd.w3c.soap11_envelope.Envelope> async_CalculateRoutesFromMajorRoads( wsi.remote.microsoft.bingmaps.routeservice2.CalculateRoutesFromMajorRoads CalculateRoutesFromMajorRoads ) {
    return (gw.xml.ws.AsyncResponse<wsi.remote.microsoft.bingmaps.routeservice2.CalculateRoutesFromMajorRoadsResponse,gw.xsd.w3c.soap11_envelope.Envelope>) invokeAsync( "CalculateRoutesFromMajorRoads", new java.lang.Object[] { CalculateRoutesFromMajorRoads } );
  }

}
