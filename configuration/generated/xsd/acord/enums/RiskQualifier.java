/* Generated by Guidewire XML Code Generator */

package xsd.acord.enums;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
public enum RiskQualifier implements gw.xml.IXmlSchemaEnumValue {
  _100( "100" ),
  _20( "20" ),
  _25( "25" ),
  _30( "30" ),
  _35( "35" ),
  _40( "40" ),
  AGPCM( "AGPCM" ),
  AGPO( "AGPO" ),
  APT( "APT" ),
  AR( "AR" ),
  BC( "BC" ),
  BE( "BE" ),
  BF( "BF" ),
  BLDG( "BLDG" ),
  BM( "BM" ),
  BP( "BP" ),
  BR( "BR" ),
  BW( "BW" ),
  CNT( "CNT" ),
  DP( "DP" ),
  ED( "ED" ),
  INCL( "INCL" ),
  IPCM( "IPCM" ),
  IPO( "IPO" ),
  LE( "LE" ),
  MT( "MT" ),
  NA( "NA" ),
  Nincl( "Nincl" ),
  NO( "NO" ),
  NS( "NS" ),
  OFFIC( "OFFIC" ),
  OT( "OT" ),
  PPOT( "PPOT" ),
  RM( "RM" ),
  RW( "RW" ),
  SB( "SB" ),
  SC( "SC" ),
  SCSP( "SCSP" ),
  SHP( "SHP" ),
  SK( "SK" ),
  SL( "SL" ),
  SS( "SS" ),
  SSHP( "SSHP" ),
  T1( "T1" ),
  T2( "T2" ),
  T3( "T3" ),
  T4( "T4" ),
  T5( "T5" ),
  T6( "T6" ),
  T7( "T7" ),
  T8( "T8" ),
  T9( "T9" ),
  TE( "TE" ),
  UA( "UA" ),
  VC( "VC" ),
  WOOD( "WOOD" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlEnumerationTypeDataImpl init() {
      return (gw.internal.xml.XmlEnumerationTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) xsd.acord.util.SchemaAccess ).getSchemaIndex().getTypeData( "xsd.acord.enums.RiskQualifier" );
    }
  };

  private final java.lang.String _stringValue;

  private RiskQualifier( java.lang.String stringValue ) {
    _stringValue = stringValue;
  }

  public static final xsd.acord.enums.RiskQualifier forValue( java.lang.String value ) {
    return (xsd.acord.enums.RiskQualifier) TYPE.get().cg_forValue( value );
  } // xmlRefactorRemove

  public static final xsd.acord.enums.RiskQualifier forGosuValue( java.lang.String value ) {
    return (xsd.acord.enums.RiskQualifier) TYPE.get().cg_forValue( value );
  }

  @java.lang.Override
  public final gw.xml.XmlSimpleValue getSimpleValue() {
    return TYPE.get().getEnumSimpleValue( this );
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getStringValue() {
    return _stringValue; // xmlRefactorRemove
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getSerializedValue() {
    return _stringValue;
  }

  @java.lang.Override
  public final java.lang.String getValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getGosuValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  }

  @java.lang.Override
  public final String getCode() {
    return name();
  }

  @java.lang.Override
  public final int getOrdinal() {
    return ordinal();
  }

  @java.lang.Override
  public final String toString() {
    return _stringValue;
  }

}
