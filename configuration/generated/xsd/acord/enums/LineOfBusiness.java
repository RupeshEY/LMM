/* Generated by Guidewire XML Code Generator */

package xsd.acord.enums;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
public enum LineOfBusiness implements gw.xml.IXmlSchemaEnumValue {
  AAPPL( "AAPPL" ),
  ACHE( "ACHE" ),
  AGLIA( "AGLIA" ),
  AGPP( "AGPP" ),
  AGPR( "AGPR" ),
  AIRC( "AIRC" ),
  AIRPFB( "AIRPFB" ),
  APKG( "APKG" ),
  APKGE( "APKGE" ),
  APROD( "APROD" ),
  ARVP( "ARVP" ),
  AUTO( "AUTO" ),
  AUTOB( "AUTOB" ),
  AUTOP( "AUTOP" ),
  AVPKG( "AVPKG" ),
  BANDM( "BANDM" ),
  BLANK( "BLANK" ),
  BMISC( "BMISC" ),
  BOAT( "BOAT" ),
  BOP( "BOP" ),
  BOPGL( "BOPGL" ),
  BOPPR( "BOPPR" ),
  CAVN( "CAVN" ),
  CEQFL( "CEQFL" ),
  CFIRE( "CFIRE" ),
  CFRM( "CFRM" ),
  CGL( "CGL" ),
  COMAR( "COMAR" ),
  COMR( "COMR" ),
  CONTR( "CONTR" ),
  CPKGE( "CPKGE" ),
  CPMP( "CPMP" ),
  CRIM( "CRIM" ),
  CRIME( "CRIME" ),
  DFIRE( "DFIRE" ),
  DISAB( "DISAB" ),
  DO( "DO" ),
  EDP( "EDP" ),
  EL( "EL" ),
  EO( "EO" ),
  EPLI( "EPLI" ),
  EQ( "EQ" ),
  EQPFL( "EQPFL" ),
  EXLIA( "EXLIA" ),
  FIDTY( "FIDTY" ),
  FIDUC( "FIDUC" ),
  FINEA( "FINEA" ),
  FLOOD( "FLOOD" ),
  GARAG( "GARAG" ),
  GL( "GL" ),
  GLASS( "GLASS" ),
  HANG( "HANG" ),
  HBB( "HBB" ),
  HOME( "HOME" ),
  INBR( "INBR" ),
  INMAR( "INMAR" ),
  INMRC( "INMRC" ),
  INMRP( "INMRP" ),
  INTER( "INTER" ),
  JUDCL( "JUDCL" ),
  KIDRA( "KIDRA" ),
  LICPT( "LICPT" ),
  LL( "LL" ),
  LSTIN( "LSTIN" ),
  MHOME( "MHOME" ),
  MMAL( "MMAL" ),
  Motorcycle( "Motorcycle" ),
  MTRTK( "MTRTK" ),
  NWFGR( "NWFGR" ),
  OLIB( "OLIB" ),
  PAPER( "PAPER" ),
  PHYS( "PHYS" ),
  PKG( "PKG" ),
  PL( "PL" ),
  PLMSC( "PLMSC" ),
  PPKGE( "PPKGE" ),
  PROP( "PROP" ),
  PROPC( "PROPC" ),
  PUBOF( "PUBOF" ),
  RECV( "RECV" ),
  SCAP( "SCAP" ),
  SCHPR( "SCHPR" ),
  SFRNC( "SFRNC" ),
  SIGNS( "SIGNS" ),
  SMP( "SMP" ),
  SURE( "SURE" ),
  TRANS( "TRANS" ),
  TRUCK( "TRUCK" ),
  UMBRC( "UMBRC" ),
  UMBRL( "UMBRL" ),
  UMBRP( "UMBRP" ),
  UN( "UN" ),
  WCMA( "WCMA" ),
  WIND( "WIND" ),
  WORK( "WORK" ),
  WORKP( "WORKP" ),
  WORKV( "WORKV" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlEnumerationTypeDataImpl init() {
      return (gw.internal.xml.XmlEnumerationTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) xsd.acord.util.SchemaAccess ).getSchemaIndex().getTypeData( "xsd.acord.enums.LineOfBusiness" );
    }
  };

  private final java.lang.String _stringValue;

  private LineOfBusiness( java.lang.String stringValue ) {
    _stringValue = stringValue;
  }

  public static final xsd.acord.enums.LineOfBusiness forValue( java.lang.String value ) {
    return (xsd.acord.enums.LineOfBusiness) TYPE.get().cg_forValue( value );
  } // xmlRefactorRemove

  public static final xsd.acord.enums.LineOfBusiness forGosuValue( java.lang.String value ) {
    return (xsd.acord.enums.LineOfBusiness) TYPE.get().cg_forValue( value );
  }

  @java.lang.Override
  public final gw.xml.XmlSimpleValue getSimpleValue() {
    return TYPE.get().getEnumSimpleValue( this );
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getStringValue() {
    return _stringValue; // xmlRefactorRemove
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getSerializedValue() {
    return _stringValue;
  }

  @java.lang.Override
  public final java.lang.String getValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getGosuValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  }

  @java.lang.Override
  public final String getCode() {
    return name();
  }

  @java.lang.Override
  public final int getOrdinal() {
    return ordinal();
  }

  @java.lang.Override
  public final String toString() {
    return _stringValue;
  }

}
