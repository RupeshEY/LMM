/* Generated by Guidewire XML Code Generator */

package xsd.acord.enums;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
public enum InteriorBuiltIns implements gw.xml.IXmlSchemaEnumValue {
  AirCon( "AirCon" ),
  AirExch( "AirExch" ),
  AirHum( "AirHum" ),
  ApplCtr( "ApplCtr" ),
  Aquar( "Aquar" ),
  BathHtr( "BathHtr" ),
  BlWdHutch( "BlWdHutch" ),
  Chand( "Chand" ),
  Cooktop( "Cooktop" ),
  Dehum( "Dehum" ),
  Dishwash( "Dishwash" ),
  Dryer( "Dryer" ),
  ElecAirClnr( "ElecAirClnr" ),
  Elevator( "Elevator" ),
  EmerGen( "EmerGen" ),
  EntCtr( "EntCtr" ),
  FanCeil( "FanCeil" ),
  FanHouse( "FanHouse" ),
  FrDoor( "FrDoor" ),
  Freezer( "Freezer" ),
  Fridge( "Fridge" ),
  GarbDisp( "GarbDisp" ),
  GarDrOp( "GarDrOp" ),
  HotTub( "HotTub" ),
  HotTubNoJet( "HotTubNoJet" ),
  IndBBQ( "IndBBQ" ),
  Microwave( "Microwave" ),
  OT( "OT" ),
  Oven( "Oven" ),
  RandHdSpec( "RandHdSpec" ),
  RangHdSt( "RangHdSt" ),
  RangRest( "RangRest" ),
  RoofWin( "RoofWin" ),
  Safe( "Safe" ),
  Satellite( "Satellite" ),
  Sauna( "Sauna" ),
  SmAlm( "SmAlm" ),
  Soda( "Soda" ),
  SpltyDoor( "SpltyDoor" ),
  SpStairMet( "SpStairMet" ),
  SpStairWd( "SpStairWd" ),
  StairLift( "StairLift" ),
  TrashCom( "TrashCom" ),
  VanityCus( "VanityCus" ),
  VideoDoor( "VideoDoor" ),
  Washer( "Washer" ),
  WaterDisp( "WaterDisp" ),
  WaterPure( "WaterPure" ),
  WaterSoft( "WaterSoft" ),
  WaterSolar( "WaterSolar" ),
  WBStov( "WBStov" ),
  WBStovFree( "WBStovFree" ),
  WetBar( "WetBar" ),
  WineCell( "WineCell" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlEnumerationTypeDataImpl init() {
      return (gw.internal.xml.XmlEnumerationTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) xsd.acord.util.SchemaAccess ).getSchemaIndex().getTypeData( "xsd.acord.enums.InteriorBuiltIns" );
    }
  };

  private final java.lang.String _stringValue;

  private InteriorBuiltIns( java.lang.String stringValue ) {
    _stringValue = stringValue;
  }

  public static final xsd.acord.enums.InteriorBuiltIns forValue( java.lang.String value ) {
    return (xsd.acord.enums.InteriorBuiltIns) TYPE.get().cg_forValue( value );
  } // xmlRefactorRemove

  public static final xsd.acord.enums.InteriorBuiltIns forGosuValue( java.lang.String value ) {
    return (xsd.acord.enums.InteriorBuiltIns) TYPE.get().cg_forValue( value );
  }

  @java.lang.Override
  public final gw.xml.XmlSimpleValue getSimpleValue() {
    return TYPE.get().getEnumSimpleValue( this );
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getStringValue() {
    return _stringValue; // xmlRefactorRemove
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getSerializedValue() {
    return _stringValue;
  }

  @java.lang.Override
  public final java.lang.String getValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getGosuValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  }

  @java.lang.Override
  public final String getCode() {
    return name();
  }

  @java.lang.Override
  public final int getOrdinal() {
    return ordinal();
  }

  @java.lang.Override
  public final String toString() {
    return _stringValue;
  }

}
