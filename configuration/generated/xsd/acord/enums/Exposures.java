/* Generated by Guidewire XML Code Generator */

package xsd.acord.enums;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
public enum Exposures implements gw.xml.IXmlSchemaEnumValue {
  _3OrMoreMortg( "3OrMoreMortg" ),
  AbsentLandlord( "AbsentLandlord" ),
  AcidsAlkalisEtc( "AcidsAlkalisEtc" ),
  Adhesives( "Adhesives" ),
  Advertising( "Advertising" ),
  Aerospace( "Aerospace" ),
  Airport( "Airport" ),
  Alcohol( "Alcohol" ),
  Ammunition( "Ammunition" ),
  AmuseRecActs( "AmuseRecActs" ),
  AnimalRTracks( "AnimalRTracks" ),
  AnimalShows( "AnimalShows" ),
  AntiqueShop( "AntiqueShop" ),
  ApplianceRepair( "ApplianceRepair" ),
  ArcheryRange( "ArcheryRange" ),
  ArsonLosses( "ArsonLosses" ),
  ArtFlower( "ArtFlower" ),
  Asbestos( "Asbestos" ),
  AttrNuisance( "AttrNuisance" ),
  ATV( "ATV" ),
  Auction( "Auction" ),
  Auctioneer( "Auctioneer" ),
  BagsNitraSugar( "BagsNitraSugar" ),
  BaitShop( "BaitShop" ),
  Band( "Band" ),
  BanrptInsolvcy( "BanrptInsolvcy" ),
  BarberShop( "BarberShop" ),
  BeautyShop( "BeautyShop" ),
  BedAndBreakfast( "BedAndBreakfast" ),
  Blasting( "Blasting" ),
  BldgCllpseReloc( "BldgCllpseReloc" ),
  BoardingLeasing( "BoardingLeasing" ),
  Breeding( "Breeding" ),
  Bridges( "Bridges" ),
  Bulldozing( "Bulldozing" ),
  BusinessPursuit( "BusinessPursuit" ),
  Butchering( "Butchering" ),
  CabHcraftShop( "CabHcraftShop" ),
  CaissonWork( "CaissonWork" ),
  Camping( "Camping" ),
  Carpentry( "Carpentry" ),
  Catering( "Catering" ),
  CattleFoodCake( "CattleFoodCake" ),
  Chemicals( "Chemicals" ),
  ChemicalStorage( "ChemicalStorage" ),
  Children( "Children" ),
  CompressedGases( "CompressedGases" ),
  ConvAgeHandicap( "ConvAgeHandicap" ),
  CookFacilits( "CookFacilits" ),
  Cooking( "Cooking" ),
  Cotton( "Cotton" ),
  Cranes( "Cranes" ),
  Creeks( "Creeks" ),
  CustAppInsect( "CustAppInsect" ),
  CustApplHerb( "CustApplHerb" ),
  CustApplicatn( "CustApplicatn" ),
  CustApplPest( "CustApplPest" ),
  CustCornShell( "CustCornShell" ),
  CustomFarming( "CustomFarming" ),
  CustomFeeding( "CustomFeeding" ),
  CustomShelling( "CustomShelling" ),
  CustomSpraying( "CustomSpraying" ),
  CuttingWelding( "CuttingWelding" ),
  Dams( "Dams" ),
  DanceFloor( "DanceFloor" ),
  DancingPermitted( "DancingPermitted" ),
  Daycare( "Daycare" ),
  DeepFatFrying( "DeepFatFrying" ),
  DemoWreck( "DemoWreck" ),
  DesigSubstnce( "DesigSubstnce" ),
  DJ( "DJ" ),
  Dog( "Dog" ),
  DrugsWsale( "DrugsWsale" ),
  EquipmentMaint( "EquipmentMaint" ),
  EquipmentUse( "EquipmentUse" ),
  Erection( "Erection" ),
  Excavation( "Excavation" ),
  ExerciseClass( "ExerciseClass" ),
  ExoticAnimal( "ExoticAnimal" ),
  Exploration( "Exploration" ),
  ExplosivesEtc( "ExplosivesEtc" ),
  Feathers( "Feathers" ),
  Fibre( "Fibre" ),
  Film( "Film" ),
  Fishing( "Fishing" ),
  FlammableLiquid( "FlammableLiquid" ),
  FoodBeverage( "FoodBeverage" ),
  FruitOrchard( "FruitOrchard" ),
  Gases( "Gases" ),
  Glues( "Glues" ),
  GoCartTrack( "GoCartTrack" ),
  GolfDrivRange( "GolfDrivRange" ),
  Government( "Government" ),
  Grasses( "Grasses" ),
  GravelPit( "GravelPit" ),
  Grilling( "Grilling" ),
  Hair( "Hair" ),
  HandballCourt( "HandballCourt" ),
  HarboursPorts( "HarboursPorts" ),
  HaySleighRides( "HaySleighRides" ),
  HorsePulls( "HorsePulls" ),
  HorseRidArena( "HorseRidArena" ),
  HorseTrack( "HorseTrack" ),
  HospitalNOC( "HospitalNOC" ),
  HotTarRoofing( "HotTarRoofing" ),
  Hunting( "Hunting" ),
  HuntingRentals( "HuntingRentals" ),
  IncRtailServNOC( "IncRtailServNOC" ),
  Jute( "Jute" ),
  Kennel( "Kennel" ),
  Land( "Land" ),
  LandClearBrush( "LandClearBrush" ),
  Landscaping( "Landscaping" ),
  LaserBeam( "LaserBeam" ),
  Lessons( "Lessons" ),
  LiqPetroLNGas( "LiqPetroLNGas" ),
  LivestockDealer( "LivestockDealer" ),
  LivestockShow( "LivestockShow" ),
  Logging( "Logging" ),
  MachBorrowed( "MachBorrowed" ),
  MachineryLoaned( "MachineryLoaned" ),
  MachRentedFrom( "MachRentedFrom" ),
  MachRentTo( "MachRentTo" ),
  Manufuacturing( "Manufuacturing" ),
  ManureLagoon( "ManureLagoon" ),
  Medical( "Medical" ),
  MilkSalesRetail( "MilkSalesRetail" ),
  MilkSaleWsale( "MilkSaleWsale" ),
  MineTunnel( "MineTunnel" ),
  MiniGolfCourse( "MiniGolfCourse" ),
  Mining( "Mining" ),
  Mowing( "Mowing" ),
  MtrVehTrakTrail( "MtrVehTrakTrail" ),
  NaturalGas( "NaturalGas" ),
  NewBusVenture( "NewBusVenture" ),
  None( "None" ),
  NonOwnedAuto( "NonOwnedAuto" ),
  Nuclear( "Nuclear" ),
  Office( "Office" ),
  OffPremisesParking( "OffPremisesParking" ),
  OilAndGas( "OilAndGas" ),
  OpenBroiling( "OpenBroiling" ),
  Other( "Other" ),
  OzoneDeplSbstnc( "OzoneDeplSbstnc" ),
  PCBs( "PCBs" ),
  PestInsectHerbs( "PestInsectHerbs" ),
  PetBreeding( "PetBreeding" ),
  PettingZoo( "PettingZoo" ),
  PickYourOwn( "PickYourOwn" ),
  PicnicGrounds( "PicnicGrounds" ),
  PileDriving( "PileDriving" ),
  Plastic( "Plastic" ),
  PlasticFoam( "PlasticFoam" ),
  PollAirLiqSolid( "PollAirLiqSolid" ),
  Ponds( "Ponds" ),
  PoorMaintenance( "PoorMaintenance" ),
  PrivateStorage( "PrivateStorage" ),
  ProcFacility( "ProcFacility" ),
  Propane( "Propane" ),
  PublicAccSwim( "PublicAccSwim" ),
  Pulls( "Pulls" ),
  RaceTrack( "RaceTrack" ),
  RadioactiveMat( "RadioactiveMat" ),
  Railcars( "Railcars" ),
  RaiseMoveStruct( "RaiseMoveStruct" ),
  RefreshStandOff( "RefreshStandOff" ),
  RefreshStandOn( "RefreshStandOn" ),
  RentGarden( "RentGarden" ),
  RentLeaseEquip( "RentLeaseEquip" ),
  RepairWelding( "RepairWelding" ),
  RidingArena( "RidingArena" ),
  Rigging( "Rigging" ),
  River( "River" ),
  RoadStandMrkt( "RoadStandMrkt" ),
  Roasting( "Roasting" ),
  RockGroup( "RockGroup" ),
  RubberSolProd( "RubberSolProd" ),
  SalesBarn( "SalesBarn" ),
  Salesperson( "Salesperson" ),
  Sawmill( "Sawmill" ),
  SchoolLessons( "SchoolLessons" ),
  SchoolOrCollege( "SchoolOrCollege" ),
  Scientific( "Scientific" ),
  SeasonalWorker( "SeasonalWorker" ),
  SeedProcessing( "SeedProcessing" ),
  SeedSales( "SeedSales" ),
  SewerBackup( "SewerBackup" ),
  SewUpholShop( "SewUpholShop" ),
  ShearingSheep( "ShearingSheep" ),
  ShfflBoardCrt( "ShfflBoardCrt" ),
  Shoring( "Shoring" ),
  ShowAnimal( "ShowAnimal" ),
  SkeetShooting( "SkeetShooting" ),
  Smoking( "Smoking" ),
  SnowRemoval( "SnowRemoval" ),
  SolventsEtc( "SolventsEtc" ),
  SprayInclChem( "SprayInclChem" ),
  SprayPainting( "SprayPainting" ),
  Stable( "Stable" ),
  Straw( "Straw" ),
  Studio( "Studio" ),
  Swimming( "Swimming" ),
  SyrupSales( "SyrupSales" ),
  TablesideCooking( "TablesideCooking" ),
  TennisCourt( "TennisCourt" ),
  TestEquip( "TestEquip" ),
  Tires( "Tires" ),
  TractorUse( "TractorUse" ),
  TrailRides( "TrailRides" ),
  Trails( "Trails" ),
  Tunnelling( "Tunnelling" ),
  UFormaldehyde( "UFormaldehyde" ),
  UGHazard( "UGHazard" ),
  Underpinning( "Underpinning" ),
  Unknown( "Unknown" ),
  Vacancy( "Vacancy" ),
  VacationFarm( "VacationFarm" ),
  ValetParking( "ValetParking" ),
  VehBoatStorage( "VehBoatStorage" ),
  Vulcanizing( "Vulcanizing" ),
  WasteofallKind( "WasteofallKind" ),
  WeakSupports( "WeakSupports" ),
  Welding( "Welding" ),
  WholesaleTrade( "WholesaleTrade" ),
  WMapleSyrup( "WMapleSyrup" ),
  Wood( "Wood" ),
  Woodworker( "Woodworker" ),
  XmasTreeSale( "XmasTreeSale" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlEnumerationTypeDataImpl init() {
      return (gw.internal.xml.XmlEnumerationTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) xsd.acord.util.SchemaAccess ).getSchemaIndex().getTypeData( "xsd.acord.enums.Exposures" );
    }
  };

  private final java.lang.String _stringValue;

  private Exposures( java.lang.String stringValue ) {
    _stringValue = stringValue;
  }

  public static final xsd.acord.enums.Exposures forValue( java.lang.String value ) {
    return (xsd.acord.enums.Exposures) TYPE.get().cg_forValue( value );
  } // xmlRefactorRemove

  public static final xsd.acord.enums.Exposures forGosuValue( java.lang.String value ) {
    return (xsd.acord.enums.Exposures) TYPE.get().cg_forValue( value );
  }

  @java.lang.Override
  public final gw.xml.XmlSimpleValue getSimpleValue() {
    return TYPE.get().getEnumSimpleValue( this );
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getStringValue() {
    return _stringValue; // xmlRefactorRemove
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getSerializedValue() {
    return _stringValue;
  }

  @java.lang.Override
  public final java.lang.String getValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getGosuValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  }

  @java.lang.Override
  public final String getCode() {
    return name();
  }

  @java.lang.Override
  public final int getOrdinal() {
    return ordinal();
  }

  @java.lang.Override
  public final String toString() {
    return _stringValue;
  }

}
