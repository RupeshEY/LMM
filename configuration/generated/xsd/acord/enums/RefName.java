/* Generated by Guidewire XML Code Generator */

package xsd.acord.enums;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
public enum RefName implements gw.xml.IXmlSchemaEnumValue {
  AffiliationRefs( "AffiliationRefs" ),
  AggregateRef( "AggregateRef" ),
  AircraftRef( "AircraftRef" ),
  AirportRef( "AirportRef" ),
  AppraiserRef( "AppraiserRef" ),
  AssignmentRef( "AssignmentRef" ),
  AssignmentRefs( "AssignmentRefs" ),
  AuditorRef( "AuditorRef" ),
  AuthorizedRepRef( "AuthorizedRepRef" ),
  AutoLossInfoRef( "AutoLossInfoRef" ),
  BaseTerminalRef( "BaseTerminalRef" ),
  BuyerRef( "BuyerRef" ),
  CarrierRef( "CarrierRef" ),
  CertifyingPartyRef( "CertifyingPartyRef" ),
  ClaimsParty1Ref( "ClaimsParty1Ref" ),
  ClaimsParty2Ref( "ClaimsParty2Ref" ),
  ClaimsPartyRef( "ClaimsPartyRef" ),
  ClaimsPartyRefs( "ClaimsPartyRefs" ),
  CodeListRef( "CodeListRef" ),
  CommlIMLocationRef( "CommlIMLocationRef" ),
  CondoManagerRef( "CondoManagerRef" ),
  ContainedInSafeVaultRef( "ContainedInSafeVaultRef" ),
  ConversionRateRef( "ConversionRateRef" ),
  CoverageRefs( "CoverageRefs" ),
  DockLocationRef( "DockLocationRef" ),
  DriverNameRef( "DriverNameRef" ),
  DriverRef( "DriverRef" ),
  DriverRefs( "DriverRefs" ),
  DriverVehRefs( "DriverVehRefs" ),
  DwellRefs( "DwellRefs" ),
  EmployeeRef( "EmployeeRef" ),
  ErrorRefs( "ErrorRefs" ),
  FarmLiabilityRefs( "FarmLiabilityRefs" ),
  FleetRef( "FleetRef" ),
  FlightSchoolRef( "FlightSchoolRef" ),
  FormerNameRefs( "FormerNameRefs" ),
  IdRef( "IdRef" ),
  IdRefs( "IdRefs" ),
  ImpoundAgencyRef( "ImpoundAgencyRef" ),
  ImpoundFacilityRef( "ImpoundFacilityRef" ),
  InjuredTakenRef( "InjuredTakenRef" ),
  InspectionContactRef( "InspectionContactRef" ),
  InspectionPartyRefs( "InspectionPartyRefs" ),
  InspectorRef( "InspectorRef" ),
  InstallingPartyRef( "InstallingPartyRef" ),
  InstructorRef( "InstructorRef" ),
  InsuredNameRef( "InsuredNameRef" ),
  InsuredOrPrincipalRef( "InsuredOrPrincipalRef" ),
  InvestigatorRef( "InvestigatorRef" ),
  ItemRef( "ItemRef" ),
  LocationRef( "LocationRef" ),
  LossPayeeRef( "LossPayeeRef" ),
  MiscPartyRefs( "MiscPartyRefs" ),
  NameInfoRef( "NameInfoRef" ),
  NameInfoRefs( "NameInfoRefs" ),
  OperatorRef( "OperatorRef" ),
  OtherOrPriorPolicyRef( "OtherOrPriorPolicyRef" ),
  OwnerRef( "OwnerRef" ),
  PayorRef( "PayorRef" ),
  PlaintiffRefs( "PlaintiffRefs" ),
  PortOriginRef( "PortOriginRef" ),
  PreferredContactRef( "PreferredContactRef" ),
  PreviousRefs( "PreviousRefs" ),
  PrincipalAddrRef( "PrincipalAddrRef" ),
  PrincipalCustRef( "PrincipalCustRef" ),
  PropScheduleRefs( "PropScheduleRefs" ),
  PropSummaryRef( "PropSummaryRef" ),
  RatedDriverRef( "RatedDriverRef" ),
  RecoveryAgencyRef( "RecoveryAgencyRef" ),
  RegisteredOwnerRef( "RegisteredOwnerRef" ),
  RelatedToLocationRefs( "RelatedToLocationRefs" ),
  RelatedToSubLocationRefs( "RelatedToSubLocationRefs" ),
  ReportedByRef( "ReportedByRef" ),
  ReportedToRef( "ReportedToRef" ),
  SalvageAgencyRef( "SalvageAgencyRef" ),
  SecondaryStorageLocationRef( "SecondaryStorageLocationRef" ),
  SecondInjuryFundRef( "SecondInjuryFundRef" ),
  SPFieldEditRefs( "SPFieldEditRefs" ),
  SPRelationalEditRefs( "SPRelationalEditRefs" ),
  StorageLocationRef( "StorageLocationRef" ),
  StructureRefs( "StructureRefs" ),
  SubcontractorRef( "SubcontractorRef" ),
  SubLocationRef( "SubLocationRef" ),
  TerminalRef( "TerminalRef" ),
  TowerErectorRef( "TowerErectorRef" ),
  TraineeRef( "TraineeRef" ),
  VehPrincipallyDrivenRef( "VehPrincipallyDrivenRef" ),
  VehRef( "VehRef" ),
  VehRefs( "VehRefs" ),
  ViewItemRef( "ViewItemRef" ),
  WatercraftAccessoryRefs( "WatercraftAccessoryRefs" ),
  WatercraftRef( "WatercraftRef" ),
  WatercraftRefs( "WatercraftRefs" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlEnumerationTypeDataImpl init() {
      return (gw.internal.xml.XmlEnumerationTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) xsd.acord.util.SchemaAccess ).getSchemaIndex().getTypeData( "xsd.acord.enums.RefName" );
    }
  };

  private final java.lang.String _stringValue;

  private RefName( java.lang.String stringValue ) {
    _stringValue = stringValue;
  }

  public static final xsd.acord.enums.RefName forValue( java.lang.String value ) {
    return (xsd.acord.enums.RefName) TYPE.get().cg_forValue( value );
  } // xmlRefactorRemove

  public static final xsd.acord.enums.RefName forGosuValue( java.lang.String value ) {
    return (xsd.acord.enums.RefName) TYPE.get().cg_forValue( value );
  }

  @java.lang.Override
  public final gw.xml.XmlSimpleValue getSimpleValue() {
    return TYPE.get().getEnumSimpleValue( this );
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getStringValue() {
    return _stringValue; // xmlRefactorRemove
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getSerializedValue() {
    return _stringValue;
  }

  @java.lang.Override
  public final java.lang.String getValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getGosuValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  }

  @java.lang.Override
  public final String getCode() {
    return name();
  }

  @java.lang.Override
  public final int getOrdinal() {
    return ordinal();
  }

  @java.lang.Override
  public final String toString() {
    return _stringValue;
  }

}
