/* Generated by Guidewire XML Code Generator */

package xsd.acord.enums;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
public enum PolicyType implements gw.xml.IXmlSchemaEnumValue {
  _01( "01" ),
  _02( "02" ),
  _03( "03" ),
  _04( "04" ),
  _05( "05" ),
  _06( "06" ),
  _4A( "4A" ),
  _6A( "6A" ),
  AIRCCO( "AIRCCO" ),
  AIRCIA( "AIRCIA" ),
  AIRCNO( "AIRCNO" ),
  AIRCPB( "AIRCPB" ),
  AIRPFB( "AIRPFB" ),
  APROD( "APROD" ),
  BA( "BA" ),
  BASIC( "BASIC" ),
  BR( "BR" ),
  BRD( "BRD" ),
  CGM( "CGM" ),
  Client( "Client" ),
  ClientPEO( "ClientPEO" ),
  DELUX( "DELUX" ),
  EC( "EC" ),
  EQ( "EQ" ),
  F1( "F1" ),
  F2( "F2" ),
  F3( "F3" ),
  F4( "F4" ),
  F5( "F5" ),
  FL( "FL" ),
  FP( "FP" ),
  FP1( "FP1" ),
  FP2( "FP2" ),
  FP3( "FP3" ),
  FST( "FST" ),
  HP1( "HP1" ),
  HP2( "HP2" ),
  HR( "HR" ),
  MH( "MH" ),
  MP( "MP" ),
  NONE( "NONE" ),
  OCCUR( "OCCUR" ),
  OT( "OT" ),
  PEO( "PEO" ),
  PRP( "PRP" ),
  RC( "RC" ),
  SB( "SB" ),
  SE( "SE" ),
  SP( "SP" ),
  SPC( "SPC" ),
  STD( "STD" ),
  T2( "T2" ),
  T3( "T3" ),
  T4( "T4" ),
  T6( "T6" ),
  T7( "T7" ),
  VM( "VM" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlEnumerationTypeDataImpl init() {
      return (gw.internal.xml.XmlEnumerationTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) xsd.acord.util.SchemaAccess ).getSchemaIndex().getTypeData( "xsd.acord.enums.PolicyType" );
    }
  };

  private final java.lang.String _stringValue;

  private PolicyType( java.lang.String stringValue ) {
    _stringValue = stringValue;
  }

  public static final xsd.acord.enums.PolicyType forValue( java.lang.String value ) {
    return (xsd.acord.enums.PolicyType) TYPE.get().cg_forValue( value );
  } // xmlRefactorRemove

  public static final xsd.acord.enums.PolicyType forGosuValue( java.lang.String value ) {
    return (xsd.acord.enums.PolicyType) TYPE.get().cg_forValue( value );
  }

  @java.lang.Override
  public final gw.xml.XmlSimpleValue getSimpleValue() {
    return TYPE.get().getEnumSimpleValue( this );
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getStringValue() {
    return _stringValue; // xmlRefactorRemove
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getSerializedValue() {
    return _stringValue;
  }

  @java.lang.Override
  public final java.lang.String getValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getGosuValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  }

  @java.lang.Override
  public final String getCode() {
    return name();
  }

  @java.lang.Override
  public final int getOrdinal() {
    return ordinal();
  }

  @java.lang.Override
  public final String toString() {
    return _stringValue;
  }

}
