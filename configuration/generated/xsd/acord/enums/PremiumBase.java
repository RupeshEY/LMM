/* Generated by Guidewire XML Code Generator */

package xsd.acord.enums;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
public enum PremiumBase implements gw.xml.IXmlSchemaEnumValue {
  _1000CubicMeters( "1000CubicMeters" ),
  _1000Liters( "1000Liters" ),
  ADMIS( "ADMIS" ),
  Alley( "Alley" ),
  Animal( "Animal" ),
  AREA( "AREA" ),
  BA( "BA" ),
  Basic( "Basic" ),
  Boat( "Boat" ),
  Building( "Building" ),
  C( "C" ),
  CabinRentSpace( "CabinRentSpace" ),
  Cam( "Cam" ),
  CompletedValue( "CompletedValue" ),
  ContractVehs( "ContractVehs" ),
  COST( "COST" ),
  Court( "Court" ),
  CP( "CP" ),
  Device( "Device" ),
  Display( "Display" ),
  Dwelling( "Dwelling" ),
  E( "E" ),
  Each( "Each" ),
  EachJob( "EachJob" ),
  Event( "Event" ),
  Expenditures( "Expenditures" ),
  Flat( "Flat" ),
  FRONT( "FRONT" ),
  GrSales( "GrSales" ),
  Hectare( "Hectare" ),
  Home( "Home" ),
  Horse( "Horse" ),
  Inmate( "Inmate" ),
  Item( "Item" ),
  Job( "Job" ),
  Kennel( "Kennel" ),
  Kilometer( "Kilometer" ),
  Location( "Location" ),
  LocForSeasYr( "LocForSeasYr" ),
  Locker( "Locker" ),
  Machine( "Machine" ),
  Member( "Member" ),
  MeterFrontage( "MeterFrontage" ),
  Min( "Min" ),
  NUMCM( "NUMCM" ),
  NUMCT( "NUMCT" ),
  NUMLA( "NUMLA" ),
  NumSe( "NumSe" ),
  NumStudents( "NumStudents" ),
  Office( "Office" ),
  OT( "OT" ),
  P( "P" ),
  PAYRL( "PAYRL" ),
  PersonMonths( "PersonMonths" ),
  Premise( "Premise" ),
  Pupil( "Pupil" ),
  R( "R" ),
  Raft( "Raft" ),
  Range( "Range" ),
  RECEI( "RECEI" ),
  RECEILIQ( "RECEILIQ" ),
  Revenue( "Revenue" ),
  Rink( "Rink" ),
  Seat( "Seat" ),
  Shipment( "Shipment" ),
  Sliding( "Sliding" ),
  Studio( "Studio" ),
  Subscriber( "Subscriber" ),
  Suite( "Suite" ),
  Table( "Table" ),
  Team( "Team" ),
  Tool( "Tool" ),
  TotCost( "TotCost" ),
  Unit( "Unit" ),
  UnitOverSix( "UnitOverSix" ),
  UpsetPayroll( "UpsetPayroll" ),
  ValuesAtRisk( "ValuesAtRisk" ),
  Vehicle( "Vehicle" ),
  Volunteer( "Volunteer" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlEnumerationTypeDataImpl init() {
      return (gw.internal.xml.XmlEnumerationTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) xsd.acord.util.SchemaAccess ).getSchemaIndex().getTypeData( "xsd.acord.enums.PremiumBase" );
    }
  };

  private final java.lang.String _stringValue;

  private PremiumBase( java.lang.String stringValue ) {
    _stringValue = stringValue;
  }

  public static final xsd.acord.enums.PremiumBase forValue( java.lang.String value ) {
    return (xsd.acord.enums.PremiumBase) TYPE.get().cg_forValue( value );
  } // xmlRefactorRemove

  public static final xsd.acord.enums.PremiumBase forGosuValue( java.lang.String value ) {
    return (xsd.acord.enums.PremiumBase) TYPE.get().cg_forValue( value );
  }

  @java.lang.Override
  public final gw.xml.XmlSimpleValue getSimpleValue() {
    return TYPE.get().getEnumSimpleValue( this );
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getStringValue() {
    return _stringValue; // xmlRefactorRemove
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getSerializedValue() {
    return _stringValue;
  }

  @java.lang.Override
  public final java.lang.String getValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getGosuValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  }

  @java.lang.Override
  public final String getCode() {
    return name();
  }

  @java.lang.Override
  public final int getOrdinal() {
    return ordinal();
  }

  @java.lang.Override
  public final String toString() {
    return _stringValue;
  }

}
