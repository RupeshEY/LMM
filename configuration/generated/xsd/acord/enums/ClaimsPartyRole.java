/* Generated by Guidewire XML Code Generator */

package xsd.acord.enums;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
public enum ClaimsPartyRole implements gw.xml.IXmlSchemaEnumValue {
  Agency( "Agency" ),
  Alias( "Alias" ),
  AP( "AP" ),
  Appraiser( "Appraiser" ),
  AT( "AT" ),
  AUR( "AUR" ),
  AUTHORITY( "AUTHORITY" ),
  BenPart( "BenPart" ),
  BenTotal( "BenTotal" ),
  BIK( "BIK" ),
  Broker( "Broker" ),
  CC( "CC" ),
  CLM( "CLM" ),
  ClmAdmin( "ClmAdmin" ),
  CON( "CON" ),
  CUS( "CUS" ),
  DeathMaster( "DeathMaster" ),
  DEP( "DEP" ),
  DOC( "DOC" ),
  DRV( "DRV" ),
  Emergency( "Emergency" ),
  Employee( "Employee" ),
  Employer( "Employer" ),
  HOSP( "HOSP" ),
  ImpoundAgcy( "ImpoundAgcy" ),
  ImpoundFac( "ImpoundFac" ),
  Insured( "Insured" ),
  INSURER( "INSURER" ),
  LHO( "LHO" ),
  LIEN( "LIEN" ),
  LOSSP( "LOSSP" ),
  MCO( "MCO" ),
  MFT( "MFT" ),
  MGA( "MGA" ),
  MORTG( "MORTG" ),
  OT( "OT" ),
  PAS( "PAS" ),
  PHY( "PHY" ),
  Plaintiff( "Plaintiff" ),
  PortOrigin( "PortOrigin" ),
  Preparer( "Preparer" ),
  PRO( "PRO" ),
  RecoveringAgency( "RecoveringAgency" ),
  Reinsurer( "Reinsurer" ),
  RepShop( "RepShop" ),
  ReptBy( "ReptBy" ),
  ReptTo( "ReptTo" ),
  RM( "RM" ),
  SalvageBuyer( "SalvageBuyer" ),
  Spouse( "Spouse" ),
  SubroHandler( "SubroHandler" ),
  Super( "Super" ),
  SURE( "SURE" ),
  TPA( "TPA" ),
  VEH( "VEH" ),
  VND( "VND" ),
  WIT( "WIT" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlEnumerationTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlEnumerationTypeDataImpl init() {
      return (gw.internal.xml.XmlEnumerationTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) xsd.acord.util.SchemaAccess ).getSchemaIndex().getTypeData( "xsd.acord.enums.ClaimsPartyRole" );
    }
  };

  private final java.lang.String _stringValue;

  private ClaimsPartyRole( java.lang.String stringValue ) {
    _stringValue = stringValue;
  }

  public static final xsd.acord.enums.ClaimsPartyRole forValue( java.lang.String value ) {
    return (xsd.acord.enums.ClaimsPartyRole) TYPE.get().cg_forValue( value );
  } // xmlRefactorRemove

  public static final xsd.acord.enums.ClaimsPartyRole forGosuValue( java.lang.String value ) {
    return (xsd.acord.enums.ClaimsPartyRole) TYPE.get().cg_forValue( value );
  }

  @java.lang.Override
  public final gw.xml.XmlSimpleValue getSimpleValue() {
    return TYPE.get().getEnumSimpleValue( this );
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getStringValue() {
    return _stringValue; // xmlRefactorRemove
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getSerializedValue() {
    return _stringValue;
  }

  @java.lang.Override
  public final java.lang.String getValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  } // xmlRefactorRemove

  @java.lang.Override
  public final java.lang.String getGosuValue() {
    return (java.lang.String) TYPE.get().getEnumSimpleValue( this ).getValue();
  }

  @java.lang.Override
  public final String getCode() {
    return name();
  }

  @java.lang.Override
  public final int getOrdinal() {
    return ordinal();
  }

  @java.lang.Override
  public final String toString() {
    return _stringValue;
  }

}
