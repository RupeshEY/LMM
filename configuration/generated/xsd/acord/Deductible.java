/* Generated by Guidewire XML Code Generator */

package xsd.acord;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
@gw.xml.annotation.SuperTypeData({ })
public final class Deductible extends gw.xml.XmlElement {
  public static final javax.xml.namespace.QName $QNAME = new javax.xml.namespace.QName( "", "Deductible", "" );
  public static final gw.xml.XmlNamespace $NAMESPACE = new gw.xml.XmlNamespace( "", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_IndexAdjustment = new javax.xml.namespace.QName( "", "IndexAdjustment", "" );
  public static final javax.xml.namespace.QName $ATTRIBUTE_QNAME_Id = new javax.xml.namespace.QName( "", "id", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_DeductibleBasisCd = new javax.xml.namespace.QName( "", "DeductibleBasisCd", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_DeductibleTypeCd = new javax.xml.namespace.QName( "", "DeductibleTypeCd", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_DeductibleAppliesToCd = new javax.xml.namespace.QName( "", "DeductibleAppliesToCd", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_FormatInteger = new javax.xml.namespace.QName( "", "FormatInteger", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_FormatCurrencyAmt = new javax.xml.namespace.QName( "", "FormatCurrencyAmt", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_FormatModFactor = new javax.xml.namespace.QName( "", "FormatModFactor", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_FormatPct = new javax.xml.namespace.QName( "", "FormatPct", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_FormatText = new javax.xml.namespace.QName( "", "FormatText", "" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlElementTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlElementTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlElementTypeDataImpl init() {
      return (gw.internal.xml.XmlElementTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) xsd.acord.util.SchemaAccess ).getSchemaIndex().getTypeData( "xsd.acord.Deductible" );
    }
  };
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlTypeInstanceTypeDataImpl> TYPEINSTANCETYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlTypeInstanceTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlTypeInstanceTypeDataImpl init() {
      return (gw.internal.xml.XmlTypeInstanceTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) xsd.acord.util.SchemaAccess ).getSchemaIndex().getTypeData( "xsd.acord.types.complex.Deductible_Type" );
    }
  };

  public Deductible() {
    super( 842786825, $QNAME, TYPE.get(), TYPEINSTANCETYPE.get(), new xsd.acord.types.complex.Deductible_Type() );
  }

  public Deductible( xsd.acord.types.complex.Deductible_Type typeInstance ) {
    super( 842786825, $QNAME, TYPE.get(), TYPEINSTANCETYPE.get(), typeInstance );
  }

  private Deductible( gw.internal.xml.XmlElementState state ) {
    super( 842786825, state );
  }

  public static gw.xml.XmlElementTypeData asTypeData() {
    return TYPE.get();
  }

  public static gw.xml.XmlTypeInstanceTypeData getDefaultTypeInstanceTypeData() {
    return TYPEINSTANCETYPE.get();
  }

  @java.lang.Override
  public final java.lang.Class<? extends xsd.acord.Deductible> get$Class() {
    return getClass();
  }

  @java.lang.Override
  public final xsd.acord.types.complex.Deductible_Type get$TypeInstance() {
    return super.get$TypeInstance().cast( xsd.acord.types.complex.Deductible_Type.class );
  }

  public final void set$TypeInstance( xsd.acord.types.complex.Deductible_Type typeInstance ) {
    _state.setTypeInstance( typeInstance );
  }

  public static xsd.acord.Deductible parse( byte[] bytes ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), bytes, null ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( byte[] bytes, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), bytes, options ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( java.io.File file ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), file, null ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( java.io.File file, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), file, options ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( java.io.InputStream stream ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), stream, null ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( java.io.InputStream stream, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), stream, options ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( java.io.Reader reader ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), reader, null ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( java.io.Reader reader, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), reader, options ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( java.lang.String xmlString ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), xmlString, null ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( java.lang.String xmlString, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), xmlString, options ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( java.net.URL url ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), url, null ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( java.net.URL url, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), url, options ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( java.nio.file.Path path ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), path, null ).cast( xsd.acord.Deductible.class );
  }

  public static xsd.acord.Deductible parse( java.nio.file.Path path, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), path, options ).cast( xsd.acord.Deductible.class );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.IndexAdjustment getIndexAdjustment() {
    return (xsd.acord.IndexAdjustment) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_IndexAdjustment" );
  }


  public final void setIndexAdjustment( xsd.acord.IndexAdjustment value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_IndexAdjustment", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.lang.String getId() {
    return (java.lang.String) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_Id" );
  }


  public final void setId( java.lang.String value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_Id", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.enums.DeductibleBasis getDeductibleBasisCd() {
    return (xsd.acord.enums.DeductibleBasis) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_DeductibleBasisCd" );
  }


  public final void setDeductibleBasisCd( xsd.acord.enums.DeductibleBasis value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_DeductibleBasisCd", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.DeductibleBasisCd getDeductibleBasisCd_elem() {
    return (xsd.acord.DeductibleBasisCd) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_DeductibleBasisCd_elem" );
  }


  public final void setDeductibleBasisCd_elem( xsd.acord.DeductibleBasisCd value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_DeductibleBasisCd_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.enums.DeductibleType getDeductibleTypeCd() {
    return (xsd.acord.enums.DeductibleType) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_DeductibleTypeCd" );
  }


  public final void setDeductibleTypeCd( xsd.acord.enums.DeductibleType value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_DeductibleTypeCd", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.DeductibleTypeCd getDeductibleTypeCd_elem() {
    return (xsd.acord.DeductibleTypeCd) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_DeductibleTypeCd_elem" );
  }


  public final void setDeductibleTypeCd_elem( xsd.acord.DeductibleTypeCd value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_DeductibleTypeCd_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.util.List<xsd.acord.enums.DeductibleApplies> getDeductibleAppliesToCd() {
    return (java.util.List<xsd.acord.enums.DeductibleApplies>) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_DeductibleAppliesToCd" );
  }


  public final void setDeductibleAppliesToCd( java.util.List<xsd.acord.enums.DeductibleApplies> value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_DeductibleAppliesToCd", value );
  }



  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.util.List<xsd.acord.DeductibleAppliesToCd> getDeductibleAppliesToCd_elem() {
    return (java.util.List<xsd.acord.DeductibleAppliesToCd>) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_DeductibleAppliesToCd_elem" );
  }


  public final void setDeductibleAppliesToCd_elem( java.util.List<xsd.acord.DeductibleAppliesToCd> value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_DeductibleAppliesToCd_elem", value );
  }



  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.lang.Integer getFormatInteger() {
    return (java.lang.Integer) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_FormatInteger" );
  }


  public final void setFormatInteger( java.lang.Integer value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_FormatInteger", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.FormatInteger getFormatInteger_elem() {
    return (xsd.acord.FormatInteger) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_FormatInteger_elem" );
  }


  public final void setFormatInteger_elem( xsd.acord.FormatInteger value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_FormatInteger_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.FormatCurrencyAmt getFormatCurrencyAmt() {
    return (xsd.acord.FormatCurrencyAmt) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_FormatCurrencyAmt" );
  }


  public final void setFormatCurrencyAmt( xsd.acord.FormatCurrencyAmt value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_FormatCurrencyAmt", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.math.BigDecimal getFormatModFactor() {
    return (java.math.BigDecimal) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_FormatModFactor" );
  }


  public final void setFormatModFactor( java.math.BigDecimal value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_FormatModFactor", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.FormatModFactor getFormatModFactor_elem() {
    return (xsd.acord.FormatModFactor) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_FormatModFactor_elem" );
  }


  public final void setFormatModFactor_elem( xsd.acord.FormatModFactor value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_FormatModFactor_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.math.BigDecimal getFormatPct() {
    return (java.math.BigDecimal) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_FormatPct" );
  }


  public final void setFormatPct( java.math.BigDecimal value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_FormatPct", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.FormatPct getFormatPct_elem() {
    return (xsd.acord.FormatPct) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_FormatPct_elem" );
  }


  public final void setFormatPct_elem( xsd.acord.FormatPct value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_FormatPct_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.lang.String getFormatText() {
    return (java.lang.String) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_FormatText" );
  }


  public final void setFormatText( java.lang.String value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_FormatText", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.FormatText getFormatText_elem() {
    return (xsd.acord.FormatText) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_FormatText_elem" );
  }


  public final void setFormatText_elem( xsd.acord.FormatText value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_FormatText_elem", value );
  }
}
