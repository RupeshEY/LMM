/* Generated by Guidewire XML Code Generator */

package xsd.acord;

@javax.annotation.Generated("gw.xml.codegen.XmlCodeGenerator")
@gw.lang.SimplePropertyProcessing
@gw.xml.annotation.SuperTypeData({ })
public final class ChimneyInfo extends gw.xml.XmlElement {
  public static final javax.xml.namespace.QName $QNAME = new javax.xml.namespace.QName( "", "ChimneyInfo", "" );
  public static final gw.xml.XmlNamespace $NAMESPACE = new gw.xml.XmlNamespace( "", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_ChimneyCd = new javax.xml.namespace.QName( "", "ChimneyCd", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_UnitLocationCd = new javax.xml.namespace.QName( "", "UnitLocationCd", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_LiningCd = new javax.xml.namespace.QName( "", "LiningCd", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_GroundUpChimneyInd = new javax.xml.namespace.QName( "", "GroundUpChimneyInd", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_InstallationCd = new javax.xml.namespace.QName( "", "InstallationCd", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_PipeVentStyleCd = new javax.xml.namespace.QName( "", "PipeVentStyleCd", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Diameter = new javax.xml.namespace.QName( "", "Diameter", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_Length = new javax.xml.namespace.QName( "", "Length", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_ThimbleInd = new javax.xml.namespace.QName( "", "ThimbleInd", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_StovePipeCd = new javax.xml.namespace.QName( "", "StovePipeCd", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_ThimbleInfo = new javax.xml.namespace.QName( "", "ThimbleInfo", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_ChimneyCleaning = new javax.xml.namespace.QName( "", "ChimneyCleaning", "" );
  public static final javax.xml.namespace.QName $ELEMENT_QNAME_FlueInfo = new javax.xml.namespace.QName( "", "FlueInfo", "" );
  public static final javax.xml.namespace.QName $ATTRIBUTE_QNAME_Id = new javax.xml.namespace.QName( "", "id", "" );
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlElementTypeDataImpl> TYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlElementTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlElementTypeDataImpl init() {
      return (gw.internal.xml.XmlElementTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) xsd.acord.util.SchemaAccess ).getSchemaIndex().getTypeData( "xsd.acord.ChimneyInfo" );
    }
  };
  private static final gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlTypeInstanceTypeDataImpl> TYPEINSTANCETYPE = new gw.internal.xml.util.LockingLazyVar<gw.internal.xml.XmlTypeInstanceTypeDataImpl>() {
    @java.lang.Override
    public gw.internal.xml.XmlTypeInstanceTypeDataImpl init() {
      return (gw.internal.xml.XmlTypeInstanceTypeDataImpl) ( (gw.internal.xml.XmlSchemaAccessImpl) xsd.acord.util.SchemaAccess ).getSchemaIndex().getTypeData( "xsd.acord.types.complex.ChimneyInfo_Type" );
    }
  };

  public ChimneyInfo() {
    super( 816282387, $QNAME, TYPE.get(), TYPEINSTANCETYPE.get(), new xsd.acord.types.complex.ChimneyInfo_Type() );
  }

  public ChimneyInfo( xsd.acord.types.complex.ChimneyInfo_Type typeInstance ) {
    super( 816282387, $QNAME, TYPE.get(), TYPEINSTANCETYPE.get(), typeInstance );
  }

  private ChimneyInfo( gw.internal.xml.XmlElementState state ) {
    super( 816282387, state );
  }

  public static gw.xml.XmlElementTypeData asTypeData() {
    return TYPE.get();
  }

  public static gw.xml.XmlTypeInstanceTypeData getDefaultTypeInstanceTypeData() {
    return TYPEINSTANCETYPE.get();
  }

  @java.lang.Override
  public final java.lang.Class<? extends xsd.acord.ChimneyInfo> get$Class() {
    return getClass();
  }

  @java.lang.Override
  public final xsd.acord.types.complex.ChimneyInfo_Type get$TypeInstance() {
    return super.get$TypeInstance().cast( xsd.acord.types.complex.ChimneyInfo_Type.class );
  }

  public final void set$TypeInstance( xsd.acord.types.complex.ChimneyInfo_Type typeInstance ) {
    _state.setTypeInstance( typeInstance );
  }

  public static xsd.acord.ChimneyInfo parse( byte[] bytes ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), bytes, null ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( byte[] bytes, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), bytes, options ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( java.io.File file ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), file, null ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( java.io.File file, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), file, options ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( java.io.InputStream stream ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), stream, null ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( java.io.InputStream stream, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), stream, options ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( java.io.Reader reader ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), reader, null ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( java.io.Reader reader, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), reader, options ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( java.lang.String xmlString ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), xmlString, null ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( java.lang.String xmlString, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), xmlString, options ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( java.net.URL url ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), url, null ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( java.net.URL url, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), url, options ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( java.nio.file.Path path ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), path, null ).cast( xsd.acord.ChimneyInfo.class );
  }

  public static xsd.acord.ChimneyInfo parse( java.nio.file.Path path, gw.xml.XmlParseOptions options ) {
    return gw.internal.xml.XmlElementInternals.instance().cg_parse( TYPE.get(), path, options ).cast( xsd.acord.ChimneyInfo.class );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.enums.Chimney getChimneyCd() {
    return (xsd.acord.enums.Chimney) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_ChimneyCd" );
  }


  public final void setChimneyCd( xsd.acord.enums.Chimney value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_ChimneyCd", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.ChimneyCd getChimneyCd_elem() {
    return (xsd.acord.ChimneyCd) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_ChimneyCd_elem" );
  }


  public final void setChimneyCd_elem( xsd.acord.ChimneyCd value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_ChimneyCd_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.enums.UnitLocation getUnitLocationCd() {
    return (xsd.acord.enums.UnitLocation) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_UnitLocationCd" );
  }


  public final void setUnitLocationCd( xsd.acord.enums.UnitLocation value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_UnitLocationCd", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.UnitLocationCd getUnitLocationCd_elem() {
    return (xsd.acord.UnitLocationCd) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_UnitLocationCd_elem" );
  }


  public final void setUnitLocationCd_elem( xsd.acord.UnitLocationCd value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_UnitLocationCd_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.enums.Lining getLiningCd() {
    return (xsd.acord.enums.Lining) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_LiningCd" );
  }


  public final void setLiningCd( xsd.acord.enums.Lining value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_LiningCd", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.LiningCd getLiningCd_elem() {
    return (xsd.acord.LiningCd) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_LiningCd_elem" );
  }


  public final void setLiningCd_elem( xsd.acord.LiningCd value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_LiningCd_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.lang.Boolean getGroundUpChimneyInd() {
    return (java.lang.Boolean) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_GroundUpChimneyInd" );
  }


  public final void setGroundUpChimneyInd( java.lang.Boolean value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_GroundUpChimneyInd", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.GroundUpChimneyInd getGroundUpChimneyInd_elem() {
    return (xsd.acord.GroundUpChimneyInd) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_GroundUpChimneyInd_elem" );
  }


  public final void setGroundUpChimneyInd_elem( xsd.acord.GroundUpChimneyInd value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_GroundUpChimneyInd_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.enums.Installation getInstallationCd() {
    return (xsd.acord.enums.Installation) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_InstallationCd" );
  }


  public final void setInstallationCd( xsd.acord.enums.Installation value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_InstallationCd", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.InstallationCd getInstallationCd_elem() {
    return (xsd.acord.InstallationCd) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_InstallationCd_elem" );
  }


  public final void setInstallationCd_elem( xsd.acord.InstallationCd value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_InstallationCd_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.util.List<xsd.acord.enums.PipeVentStyle> getPipeVentStyleCd() {
    return (java.util.List<xsd.acord.enums.PipeVentStyle>) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_PipeVentStyleCd" );
  }


  public final void setPipeVentStyleCd( java.util.List<xsd.acord.enums.PipeVentStyle> value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_PipeVentStyleCd", value );
  }



  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.util.List<xsd.acord.PipeVentStyleCd> getPipeVentStyleCd_elem() {
    return (java.util.List<xsd.acord.PipeVentStyleCd>) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_PipeVentStyleCd_elem" );
  }


  public final void setPipeVentStyleCd_elem( java.util.List<xsd.acord.PipeVentStyleCd> value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_PipeVentStyleCd_elem", value );
  }



  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.Diameter getDiameter() {
    return (xsd.acord.Diameter) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_Diameter" );
  }


  public final void setDiameter( xsd.acord.Diameter value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_Diameter", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.Length getLength() {
    return (xsd.acord.Length) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_Length" );
  }


  public final void setLength( xsd.acord.Length value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_Length", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.lang.Boolean getThimbleInd() {
    return (java.lang.Boolean) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_ThimbleInd" );
  }


  public final void setThimbleInd( java.lang.Boolean value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_ThimbleInd", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.ThimbleInd getThimbleInd_elem() {
    return (xsd.acord.ThimbleInd) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_ThimbleInd_elem" );
  }


  public final void setThimbleInd_elem( xsd.acord.ThimbleInd value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_ThimbleInd_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.enums.StovePipe getStovePipeCd() {
    return (xsd.acord.enums.StovePipe) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_StovePipeCd" );
  }


  public final void setStovePipeCd( xsd.acord.enums.StovePipe value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_StovePipeCd", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.StovePipeCd getStovePipeCd_elem() {
    return (xsd.acord.StovePipeCd) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_StovePipeCd_elem" );
  }


  public final void setStovePipeCd_elem( xsd.acord.StovePipeCd value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_StovePipeCd_elem", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.util.List<xsd.acord.ThimbleInfo> getThimbleInfo() {
    return (java.util.List<xsd.acord.ThimbleInfo>) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_ThimbleInfo" );
  }


  public final void setThimbleInfo( java.util.List<xsd.acord.ThimbleInfo> value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_ThimbleInfo", value );
  }



  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final xsd.acord.ChimneyCleaning getChimneyCleaning() {
    return (xsd.acord.ChimneyCleaning) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_ChimneyCleaning" );
  }


  public final void setChimneyCleaning( xsd.acord.ChimneyCleaning value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_ChimneyCleaning", value );
  }


  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.util.List<xsd.acord.FlueInfo> getFlueInfo() {
    return (java.util.List<xsd.acord.FlueInfo>) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_FlueInfo" );
  }


  public final void setFlueInfo( java.util.List<xsd.acord.FlueInfo> value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_FlueInfo", value );
  }



  @gw.lang.Autocreate
  @gw.lang.Autoinsert
  public final java.lang.String getId() {
    return (java.lang.String) TYPEINSTANCETYPE.get().getPropertyValue( get$TypeInstance(), "_Id" );
  }


  public final void setId( java.lang.String value ) {
    TYPEINSTANCETYPE.get().setPropertyValue( get$TypeInstance(), "_Id", value );
  }
}
